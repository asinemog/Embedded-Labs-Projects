
Week6Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000712  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000069e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800100  00800100  00000712  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000712  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000744  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00000784  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000982  00000000  00000000  000007fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007a4  00000000  00000000  0000117e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004f6  00000000  00000000  00001922  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000015c  00000000  00000000  00001e18  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000426  00000000  00000000  00001f74  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002fa  00000000  00000000  0000239a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00002694  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 12 01 	jmp	0x224	; 0x224 <__vector_13>
  38:	0c 94 37 01 	jmp	0x26e	; 0x26e <__vector_14>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__vector_16>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	ac 30       	cpi	r26, 0x0C	; 12
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <main>
  88:	0c 94 4d 03 	jmp	0x69a	; 0x69a <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <delayUS>:

extern unsigned long numOv;
extern unsigned long numCmp;


void delayUS(float t){
  90:	8f 92       	push	r8
  92:	9f 92       	push	r9
  94:	af 92       	push	r10
  96:	bf 92       	push	r11
  98:	df 92       	push	r13
  9a:	ef 92       	push	r14
  9c:	ff 92       	push	r15
  9e:	0f 93       	push	r16
  a0:	1f 93       	push	r17
  a2:	cf 93       	push	r28
  a4:	df 93       	push	r29
	
	
	char TCCR0A_old = TCCR0A;
  a6:	e4 b4       	in	r14, 0x24	; 36
	char TCCR0B_old = TCCR0B;
  a8:	f5 b4       	in	r15, 0x25	; 37
	char TIMSK0_old = TIMSK0;
  aa:	ce e6       	ldi	r28, 0x6E	; 110
  ac:	d0 e0       	ldi	r29, 0x00	; 0
  ae:	08 81       	ld	r16, Y
	char SREG_old = SREG;
  b0:	1f b7       	in	r17, 0x3f	; 63
	
	// num overflows = Time desired/(P/F_CPU)/MAX
	// numOV is long, typecast to long rounds down (floor)
	numOv = t*16.0/256.0;
  b2:	20 e0       	ldi	r18, 0x00	; 0
  b4:	30 e0       	ldi	r19, 0x00	; 0
  b6:	40 e8       	ldi	r20, 0x80	; 128
  b8:	51 e4       	ldi	r21, 0x41	; 65
  ba:	0e 94 bc 02 	call	0x578	; 0x578 <__mulsf3>
  be:	20 e0       	ldi	r18, 0x00	; 0
  c0:	30 e0       	ldi	r19, 0x00	; 0
  c2:	40 e8       	ldi	r20, 0x80	; 128
  c4:	5b e3       	ldi	r21, 0x3B	; 59
  c6:	0e 94 bc 02 	call	0x578	; 0x578 <__mulsf3>
  ca:	4b 01       	movw	r8, r22
  cc:	5c 01       	movw	r10, r24
  ce:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <__fixunssfsi>
  d2:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
  d6:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  da:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
  de:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
	
	//calc remaining fraction of overflows
	float tmp = t*16.0/256.0 - numOv;
  e2:	0e 94 29 02 	call	0x452	; 0x452 <__floatunsisf>
  e6:	9b 01       	movw	r18, r22
  e8:	ac 01       	movw	r20, r24
  ea:	c5 01       	movw	r24, r10
  ec:	b4 01       	movw	r22, r8
  ee:	0e 94 8d 01 	call	0x31a	; 0x31a <__subsf3>
  f2:	4b 01       	movw	r8, r22
  f4:	5c 01       	movw	r10, r24
	unsigned long remain = (1 - tmp)*256;
  f6:	9b 01       	movw	r18, r22
  f8:	ac 01       	movw	r20, r24
  fa:	60 e0       	ldi	r22, 0x00	; 0
  fc:	70 e0       	ldi	r23, 0x00	; 0
  fe:	80 e8       	ldi	r24, 0x80	; 128
 100:	9f e3       	ldi	r25, 0x3F	; 63
 102:	0e 94 8d 01 	call	0x31a	; 0x31a <__subsf3>
 106:	20 e0       	ldi	r18, 0x00	; 0
 108:	30 e0       	ldi	r19, 0x00	; 0
 10a:	40 e8       	ldi	r20, 0x80	; 128
 10c:	53 e4       	ldi	r21, 0x43	; 67
 10e:	0e 94 bc 02 	call	0x578	; 0x578 <__mulsf3>
 112:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <__fixunssfsi>
 116:	d6 2e       	mov	r13, r22
	bitSet(TIMSK0, TOIE0);
 118:	88 81       	ld	r24, Y
 11a:	81 60       	ori	r24, 0x01	; 1
 11c:	88 83       	st	Y, r24
	TCCR0A = 0;
 11e:	14 bc       	out	0x24, r1	; 36
	TCCR0B = 0;
 120:	15 bc       	out	0x25, r1	; 37
	
	if(numOv){
 122:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 126:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 12a:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 12e:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 132:	89 2b       	or	r24, r25
 134:	8a 2b       	or	r24, r26
 136:	8b 2b       	or	r24, r27
 138:	a9 f0       	breq	.+42     	; 0x164 <delayUS+0xd4>
		TCNT0 = 0;
 13a:	16 bc       	out	0x26, r1	; 38
		sei();
 13c:	78 94       	sei
		TCCR0B |= (1<<CS00);
 13e:	85 b5       	in	r24, 0x25	; 37
 140:	81 60       	ori	r24, 0x01	; 1
 142:	85 bd       	out	0x25, r24	; 37
		while(numOv > 0);
 144:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 148:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 14c:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 150:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 154:	89 2b       	or	r24, r25
 156:	8a 2b       	or	r24, r26
 158:	8b 2b       	or	r24, r27
 15a:	a1 f7       	brne	.-24     	; 0x144 <delayUS+0xb4>
		TCCR0B &= ~(1<<CS00);
 15c:	85 b5       	in	r24, 0x25	; 37
 15e:	8e 7f       	andi	r24, 0xFE	; 254
 160:	85 bd       	out	0x25, r24	; 37
		cli();
 162:	f8 94       	cli
	}
	
	if(tmp > 0.0){
 164:	20 e0       	ldi	r18, 0x00	; 0
 166:	30 e0       	ldi	r19, 0x00	; 0
 168:	a9 01       	movw	r20, r18
 16a:	c5 01       	movw	r24, r10
 16c:	b4 01       	movw	r22, r8
 16e:	0e 94 b7 02 	call	0x56e	; 0x56e <__gesf2>
 172:	18 16       	cp	r1, r24
 174:	0c f5       	brge	.+66     	; 0x1b8 <delayUS+0x128>
		TCNT0 = remain;
 176:	d6 bc       	out	0x26, r13	; 38
		numOv = 1;
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	a0 e0       	ldi	r26, 0x00	; 0
 17e:	b0 e0       	ldi	r27, 0x00	; 0
 180:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 184:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 188:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 18c:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
		sei();
 190:	78 94       	sei
		TCCR0B |= (1<<CS00);
 192:	85 b5       	in	r24, 0x25	; 37
 194:	81 60       	ori	r24, 0x01	; 1
 196:	85 bd       	out	0x25, r24	; 37
		while(numOv > 0);
 198:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 19c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1a0:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 1a4:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 1a8:	89 2b       	or	r24, r25
 1aa:	8a 2b       	or	r24, r26
 1ac:	8b 2b       	or	r24, r27
 1ae:	a1 f7       	brne	.-24     	; 0x198 <delayUS+0x108>
		TCCR0B &= ~(1<<CS00);
 1b0:	85 b5       	in	r24, 0x25	; 37
 1b2:	8e 7f       	andi	r24, 0xFE	; 254
 1b4:	85 bd       	out	0x25, r24	; 37
		cli();
 1b6:	f8 94       	cli
	}
	
	TCCR0A = TCCR0A_old;
 1b8:	e4 bc       	out	0x24, r14	; 36
	TCCR0B = TCCR0B_old;
 1ba:	f5 bc       	out	0x25, r15	; 37
	TIMSK0 = TIMSK0_old;
 1bc:	00 93 6e 00 	sts	0x006E, r16	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
	SREG = SREG_old;
 1c0:	1f bf       	out	0x3f, r17	; 63
}
 1c2:	df 91       	pop	r29
 1c4:	cf 91       	pop	r28
 1c6:	1f 91       	pop	r17
 1c8:	0f 91       	pop	r16
 1ca:	ff 90       	pop	r15
 1cc:	ef 90       	pop	r14
 1ce:	df 90       	pop	r13
 1d0:	bf 90       	pop	r11
 1d2:	af 90       	pop	r10
 1d4:	9f 90       	pop	r9
 1d6:	8f 90       	pop	r8
 1d8:	08 95       	ret

000001da <__vector_16>:
void transmitByteUSART(char c);
void initUSART(int ubbr);



ISR(TIMER0_OVF_vect){
 1da:	1f 92       	push	r1
 1dc:	0f 92       	push	r0
 1de:	0f b6       	in	r0, 0x3f	; 63
 1e0:	0f 92       	push	r0
 1e2:	11 24       	eor	r1, r1
 1e4:	8f 93       	push	r24
 1e6:	9f 93       	push	r25
 1e8:	af 93       	push	r26
 1ea:	bf 93       	push	r27
	numOv--;
 1ec:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1f0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1f4:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 1f8:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 1fc:	01 97       	sbiw	r24, 0x01	; 1
 1fe:	a1 09       	sbc	r26, r1
 200:	b1 09       	sbc	r27, r1
 202:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 206:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 20a:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 20e:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
}
 212:	bf 91       	pop	r27
 214:	af 91       	pop	r26
 216:	9f 91       	pop	r25
 218:	8f 91       	pop	r24
 21a:	0f 90       	pop	r0
 21c:	0f be       	out	0x3f, r0	; 63
 21e:	0f 90       	pop	r0
 220:	1f 90       	pop	r1
 222:	18 95       	reti

00000224 <__vector_13>:

ISR(TIMER1_OVF_vect){
 224:	1f 92       	push	r1
 226:	0f 92       	push	r0
 228:	0f b6       	in	r0, 0x3f	; 63
 22a:	0f 92       	push	r0
 22c:	11 24       	eor	r1, r1
 22e:	8f 93       	push	r24
 230:	9f 93       	push	r25
 232:	af 93       	push	r26
 234:	bf 93       	push	r27
	numOv1--;
 236:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <numOv1>
 23a:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <numOv1+0x1>
 23e:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <numOv1+0x2>
 242:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <numOv1+0x3>
 246:	01 97       	sbiw	r24, 0x01	; 1
 248:	a1 09       	sbc	r26, r1
 24a:	b1 09       	sbc	r27, r1
 24c:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <numOv1>
 250:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <numOv1+0x1>
 254:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <numOv1+0x2>
 258:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <numOv1+0x3>
}
 25c:	bf 91       	pop	r27
 25e:	af 91       	pop	r26
 260:	9f 91       	pop	r25
 262:	8f 91       	pop	r24
 264:	0f 90       	pop	r0
 266:	0f be       	out	0x3f, r0	; 63
 268:	0f 90       	pop	r0
 26a:	1f 90       	pop	r1
 26c:	18 95       	reti

0000026e <__vector_14>:

ISR(TIMER0_COMPA_vect){
 26e:	1f 92       	push	r1
 270:	0f 92       	push	r0
 272:	0f b6       	in	r0, 0x3f	; 63
 274:	0f 92       	push	r0
 276:	11 24       	eor	r1, r1
 278:	8f 93       	push	r24
 27a:	9f 93       	push	r25
 27c:	af 93       	push	r26
 27e:	bf 93       	push	r27
	numCmp--;
 280:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <numCmp>
 284:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <numCmp+0x1>
 288:	a0 91 0a 01 	lds	r26, 0x010A	; 0x80010a <numCmp+0x2>
 28c:	b0 91 0b 01 	lds	r27, 0x010B	; 0x80010b <numCmp+0x3>
 290:	01 97       	sbiw	r24, 0x01	; 1
 292:	a1 09       	sbc	r26, r1
 294:	b1 09       	sbc	r27, r1
 296:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <numCmp>
 29a:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <numCmp+0x1>
 29e:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <numCmp+0x2>
 2a2:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <numCmp+0x3>
}
 2a6:	bf 91       	pop	r27
 2a8:	af 91       	pop	r26
 2aa:	9f 91       	pop	r25
 2ac:	8f 91       	pop	r24
 2ae:	0f 90       	pop	r0
 2b0:	0f be       	out	0x3f, r0	; 63
 2b2:	0f 90       	pop	r0
 2b4:	1f 90       	pop	r1
 2b6:	18 95       	reti

000002b8 <initUSART>:
}



void initUSART(int ubbr){
	UBRR0 = ubbr;
 2b8:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 2bc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	
	UCSR0B |= (1<<TXEN0) ;
 2c0:	e1 ec       	ldi	r30, 0xC1	; 193
 2c2:	f0 e0       	ldi	r31, 0x00	; 0
 2c4:	80 81       	ld	r24, Z
 2c6:	88 60       	ori	r24, 0x08	; 8
 2c8:	80 83       	st	Z, r24
	
	UCSR0C |= (1<<UCSZ00) | (1<<UCSZ01);
 2ca:	e2 ec       	ldi	r30, 0xC2	; 194
 2cc:	f0 e0       	ldi	r31, 0x00	; 0
 2ce:	80 81       	ld	r24, Z
 2d0:	86 60       	ori	r24, 0x06	; 6
 2d2:	80 83       	st	Z, r24
 2d4:	08 95       	ret

000002d6 <main>:



int main(void)
{
    initUSART(MY_UBBR);
 2d6:	87 e6       	ldi	r24, 0x67	; 103
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <initUSART>
	
	bitSet(DDRB, pinTrigger);
 2de:	84 b1       	in	r24, 0x04	; 4
 2e0:	80 61       	ori	r24, 0x10	; 16
 2e2:	84 b9       	out	0x04, r24	; 4
	
	bitClear(DDRD, pinEcho);
 2e4:	8a b1       	in	r24, 0x0a	; 10
 2e6:	8f 7e       	andi	r24, 0xEF	; 239
 2e8:	8a b9       	out	0x0a, r24	; 10
	bitSet(PORTD, pinEcho);
 2ea:	8b b1       	in	r24, 0x0b	; 11
 2ec:	80 61       	ori	r24, 0x10	; 16
 2ee:	8b b9       	out	0x0b, r24	; 11
	
	DDRB = 0xFF;
 2f0:	8f ef       	ldi	r24, 0xFF	; 255
 2f2:	84 b9       	out	0x04, r24	; 4
		dtostrf(range, 10, 3, rangeStr);
		rangeStr[10] = '\0';
		
		transmitStringUSART(rangeStr);
		transmitStringUSART("\r\n");*/
		delayUS(500);
 2f4:	60 e0       	ldi	r22, 0x00	; 0
 2f6:	70 e0       	ldi	r23, 0x00	; 0
 2f8:	8a ef       	ldi	r24, 0xFA	; 250
 2fa:	93 e4       	ldi	r25, 0x43	; 67
 2fc:	0e 94 48 00 	call	0x90	; 0x90 <delayUS>
		PORTB |= (1<<PINB5);
 300:	85 b1       	in	r24, 0x05	; 5
 302:	80 62       	ori	r24, 0x20	; 32
 304:	85 b9       	out	0x05, r24	; 5
		delayUS(500);
 306:	60 e0       	ldi	r22, 0x00	; 0
 308:	70 e0       	ldi	r23, 0x00	; 0
 30a:	8a ef       	ldi	r24, 0xFA	; 250
 30c:	93 e4       	ldi	r25, 0x43	; 67
 30e:	0e 94 48 00 	call	0x90	; 0x90 <delayUS>
		PORTB &= ~(1<<PINB5);
 312:	85 b1       	in	r24, 0x05	; 5
 314:	8f 7d       	andi	r24, 0xDF	; 223
 316:	85 b9       	out	0x05, r24	; 5
 318:	ed cf       	rjmp	.-38     	; 0x2f4 <main+0x1e>

0000031a <__subsf3>:
 31a:	50 58       	subi	r21, 0x80	; 128

0000031c <__addsf3>:
 31c:	bb 27       	eor	r27, r27
 31e:	aa 27       	eor	r26, r26
 320:	0e 94 a5 01 	call	0x34a	; 0x34a <__addsf3x>
 324:	0c 94 7d 02 	jmp	0x4fa	; 0x4fa <__fp_round>
 328:	0e 94 6f 02 	call	0x4de	; 0x4de <__fp_pscA>
 32c:	38 f0       	brcs	.+14     	; 0x33c <__addsf3+0x20>
 32e:	0e 94 76 02 	call	0x4ec	; 0x4ec <__fp_pscB>
 332:	20 f0       	brcs	.+8      	; 0x33c <__addsf3+0x20>
 334:	39 f4       	brne	.+14     	; 0x344 <__addsf3+0x28>
 336:	9f 3f       	cpi	r25, 0xFF	; 255
 338:	19 f4       	brne	.+6      	; 0x340 <__addsf3+0x24>
 33a:	26 f4       	brtc	.+8      	; 0x344 <__addsf3+0x28>
 33c:	0c 94 6c 02 	jmp	0x4d8	; 0x4d8 <__fp_nan>
 340:	0e f4       	brtc	.+2      	; 0x344 <__addsf3+0x28>
 342:	e0 95       	com	r30
 344:	e7 fb       	bst	r30, 7
 346:	0c 94 66 02 	jmp	0x4cc	; 0x4cc <__fp_inf>

0000034a <__addsf3x>:
 34a:	e9 2f       	mov	r30, r25
 34c:	0e 94 8e 02 	call	0x51c	; 0x51c <__fp_split3>
 350:	58 f3       	brcs	.-42     	; 0x328 <__addsf3+0xc>
 352:	ba 17       	cp	r27, r26
 354:	62 07       	cpc	r22, r18
 356:	73 07       	cpc	r23, r19
 358:	84 07       	cpc	r24, r20
 35a:	95 07       	cpc	r25, r21
 35c:	20 f0       	brcs	.+8      	; 0x366 <__addsf3x+0x1c>
 35e:	79 f4       	brne	.+30     	; 0x37e <__addsf3x+0x34>
 360:	a6 f5       	brtc	.+104    	; 0x3ca <__addsf3x+0x80>
 362:	0c 94 b0 02 	jmp	0x560	; 0x560 <__fp_zero>
 366:	0e f4       	brtc	.+2      	; 0x36a <__addsf3x+0x20>
 368:	e0 95       	com	r30
 36a:	0b 2e       	mov	r0, r27
 36c:	ba 2f       	mov	r27, r26
 36e:	a0 2d       	mov	r26, r0
 370:	0b 01       	movw	r0, r22
 372:	b9 01       	movw	r22, r18
 374:	90 01       	movw	r18, r0
 376:	0c 01       	movw	r0, r24
 378:	ca 01       	movw	r24, r20
 37a:	a0 01       	movw	r20, r0
 37c:	11 24       	eor	r1, r1
 37e:	ff 27       	eor	r31, r31
 380:	59 1b       	sub	r21, r25
 382:	99 f0       	breq	.+38     	; 0x3aa <__addsf3x+0x60>
 384:	59 3f       	cpi	r21, 0xF9	; 249
 386:	50 f4       	brcc	.+20     	; 0x39c <__addsf3x+0x52>
 388:	50 3e       	cpi	r21, 0xE0	; 224
 38a:	68 f1       	brcs	.+90     	; 0x3e6 <__addsf3x+0x9c>
 38c:	1a 16       	cp	r1, r26
 38e:	f0 40       	sbci	r31, 0x00	; 0
 390:	a2 2f       	mov	r26, r18
 392:	23 2f       	mov	r18, r19
 394:	34 2f       	mov	r19, r20
 396:	44 27       	eor	r20, r20
 398:	58 5f       	subi	r21, 0xF8	; 248
 39a:	f3 cf       	rjmp	.-26     	; 0x382 <__addsf3x+0x38>
 39c:	46 95       	lsr	r20
 39e:	37 95       	ror	r19
 3a0:	27 95       	ror	r18
 3a2:	a7 95       	ror	r26
 3a4:	f0 40       	sbci	r31, 0x00	; 0
 3a6:	53 95       	inc	r21
 3a8:	c9 f7       	brne	.-14     	; 0x39c <__addsf3x+0x52>
 3aa:	7e f4       	brtc	.+30     	; 0x3ca <__addsf3x+0x80>
 3ac:	1f 16       	cp	r1, r31
 3ae:	ba 0b       	sbc	r27, r26
 3b0:	62 0b       	sbc	r22, r18
 3b2:	73 0b       	sbc	r23, r19
 3b4:	84 0b       	sbc	r24, r20
 3b6:	ba f0       	brmi	.+46     	; 0x3e6 <__addsf3x+0x9c>
 3b8:	91 50       	subi	r25, 0x01	; 1
 3ba:	a1 f0       	breq	.+40     	; 0x3e4 <__addsf3x+0x9a>
 3bc:	ff 0f       	add	r31, r31
 3be:	bb 1f       	adc	r27, r27
 3c0:	66 1f       	adc	r22, r22
 3c2:	77 1f       	adc	r23, r23
 3c4:	88 1f       	adc	r24, r24
 3c6:	c2 f7       	brpl	.-16     	; 0x3b8 <__addsf3x+0x6e>
 3c8:	0e c0       	rjmp	.+28     	; 0x3e6 <__addsf3x+0x9c>
 3ca:	ba 0f       	add	r27, r26
 3cc:	62 1f       	adc	r22, r18
 3ce:	73 1f       	adc	r23, r19
 3d0:	84 1f       	adc	r24, r20
 3d2:	48 f4       	brcc	.+18     	; 0x3e6 <__addsf3x+0x9c>
 3d4:	87 95       	ror	r24
 3d6:	77 95       	ror	r23
 3d8:	67 95       	ror	r22
 3da:	b7 95       	ror	r27
 3dc:	f7 95       	ror	r31
 3de:	9e 3f       	cpi	r25, 0xFE	; 254
 3e0:	08 f0       	brcs	.+2      	; 0x3e4 <__addsf3x+0x9a>
 3e2:	b0 cf       	rjmp	.-160    	; 0x344 <__addsf3+0x28>
 3e4:	93 95       	inc	r25
 3e6:	88 0f       	add	r24, r24
 3e8:	08 f0       	brcs	.+2      	; 0x3ec <__addsf3x+0xa2>
 3ea:	99 27       	eor	r25, r25
 3ec:	ee 0f       	add	r30, r30
 3ee:	97 95       	ror	r25
 3f0:	87 95       	ror	r24
 3f2:	08 95       	ret

000003f4 <__fixunssfsi>:
 3f4:	0e 94 96 02 	call	0x52c	; 0x52c <__fp_splitA>
 3f8:	88 f0       	brcs	.+34     	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 3fa:	9f 57       	subi	r25, 0x7F	; 127
 3fc:	98 f0       	brcs	.+38     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 3fe:	b9 2f       	mov	r27, r25
 400:	99 27       	eor	r25, r25
 402:	b7 51       	subi	r27, 0x17	; 23
 404:	b0 f0       	brcs	.+44     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 406:	e1 f0       	breq	.+56     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 408:	66 0f       	add	r22, r22
 40a:	77 1f       	adc	r23, r23
 40c:	88 1f       	adc	r24, r24
 40e:	99 1f       	adc	r25, r25
 410:	1a f0       	brmi	.+6      	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 412:	ba 95       	dec	r27
 414:	c9 f7       	brne	.-14     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 416:	14 c0       	rjmp	.+40     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 418:	b1 30       	cpi	r27, 0x01	; 1
 41a:	91 f0       	breq	.+36     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 41c:	0e 94 b0 02 	call	0x560	; 0x560 <__fp_zero>
 420:	b1 e0       	ldi	r27, 0x01	; 1
 422:	08 95       	ret
 424:	0c 94 b0 02 	jmp	0x560	; 0x560 <__fp_zero>
 428:	67 2f       	mov	r22, r23
 42a:	78 2f       	mov	r23, r24
 42c:	88 27       	eor	r24, r24
 42e:	b8 5f       	subi	r27, 0xF8	; 248
 430:	39 f0       	breq	.+14     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 432:	b9 3f       	cpi	r27, 0xF9	; 249
 434:	cc f3       	brlt	.-14     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 436:	86 95       	lsr	r24
 438:	77 95       	ror	r23
 43a:	67 95       	ror	r22
 43c:	b3 95       	inc	r27
 43e:	d9 f7       	brne	.-10     	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 440:	3e f4       	brtc	.+14     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 442:	90 95       	com	r25
 444:	80 95       	com	r24
 446:	70 95       	com	r23
 448:	61 95       	neg	r22
 44a:	7f 4f       	sbci	r23, 0xFF	; 255
 44c:	8f 4f       	sbci	r24, 0xFF	; 255
 44e:	9f 4f       	sbci	r25, 0xFF	; 255
 450:	08 95       	ret

00000452 <__floatunsisf>:
 452:	e8 94       	clt
 454:	09 c0       	rjmp	.+18     	; 0x468 <__floatsisf+0x12>

00000456 <__floatsisf>:
 456:	97 fb       	bst	r25, 7
 458:	3e f4       	brtc	.+14     	; 0x468 <__floatsisf+0x12>
 45a:	90 95       	com	r25
 45c:	80 95       	com	r24
 45e:	70 95       	com	r23
 460:	61 95       	neg	r22
 462:	7f 4f       	sbci	r23, 0xFF	; 255
 464:	8f 4f       	sbci	r24, 0xFF	; 255
 466:	9f 4f       	sbci	r25, 0xFF	; 255
 468:	99 23       	and	r25, r25
 46a:	a9 f0       	breq	.+42     	; 0x496 <__floatsisf+0x40>
 46c:	f9 2f       	mov	r31, r25
 46e:	96 e9       	ldi	r25, 0x96	; 150
 470:	bb 27       	eor	r27, r27
 472:	93 95       	inc	r25
 474:	f6 95       	lsr	r31
 476:	87 95       	ror	r24
 478:	77 95       	ror	r23
 47a:	67 95       	ror	r22
 47c:	b7 95       	ror	r27
 47e:	f1 11       	cpse	r31, r1
 480:	f8 cf       	rjmp	.-16     	; 0x472 <__floatsisf+0x1c>
 482:	fa f4       	brpl	.+62     	; 0x4c2 <__floatsisf+0x6c>
 484:	bb 0f       	add	r27, r27
 486:	11 f4       	brne	.+4      	; 0x48c <__floatsisf+0x36>
 488:	60 ff       	sbrs	r22, 0
 48a:	1b c0       	rjmp	.+54     	; 0x4c2 <__floatsisf+0x6c>
 48c:	6f 5f       	subi	r22, 0xFF	; 255
 48e:	7f 4f       	sbci	r23, 0xFF	; 255
 490:	8f 4f       	sbci	r24, 0xFF	; 255
 492:	9f 4f       	sbci	r25, 0xFF	; 255
 494:	16 c0       	rjmp	.+44     	; 0x4c2 <__floatsisf+0x6c>
 496:	88 23       	and	r24, r24
 498:	11 f0       	breq	.+4      	; 0x49e <__floatsisf+0x48>
 49a:	96 e9       	ldi	r25, 0x96	; 150
 49c:	11 c0       	rjmp	.+34     	; 0x4c0 <__floatsisf+0x6a>
 49e:	77 23       	and	r23, r23
 4a0:	21 f0       	breq	.+8      	; 0x4aa <__floatsisf+0x54>
 4a2:	9e e8       	ldi	r25, 0x8E	; 142
 4a4:	87 2f       	mov	r24, r23
 4a6:	76 2f       	mov	r23, r22
 4a8:	05 c0       	rjmp	.+10     	; 0x4b4 <__floatsisf+0x5e>
 4aa:	66 23       	and	r22, r22
 4ac:	71 f0       	breq	.+28     	; 0x4ca <__floatsisf+0x74>
 4ae:	96 e8       	ldi	r25, 0x86	; 134
 4b0:	86 2f       	mov	r24, r22
 4b2:	70 e0       	ldi	r23, 0x00	; 0
 4b4:	60 e0       	ldi	r22, 0x00	; 0
 4b6:	2a f0       	brmi	.+10     	; 0x4c2 <__floatsisf+0x6c>
 4b8:	9a 95       	dec	r25
 4ba:	66 0f       	add	r22, r22
 4bc:	77 1f       	adc	r23, r23
 4be:	88 1f       	adc	r24, r24
 4c0:	da f7       	brpl	.-10     	; 0x4b8 <__floatsisf+0x62>
 4c2:	88 0f       	add	r24, r24
 4c4:	96 95       	lsr	r25
 4c6:	87 95       	ror	r24
 4c8:	97 f9       	bld	r25, 7
 4ca:	08 95       	ret

000004cc <__fp_inf>:
 4cc:	97 f9       	bld	r25, 7
 4ce:	9f 67       	ori	r25, 0x7F	; 127
 4d0:	80 e8       	ldi	r24, 0x80	; 128
 4d2:	70 e0       	ldi	r23, 0x00	; 0
 4d4:	60 e0       	ldi	r22, 0x00	; 0
 4d6:	08 95       	ret

000004d8 <__fp_nan>:
 4d8:	9f ef       	ldi	r25, 0xFF	; 255
 4da:	80 ec       	ldi	r24, 0xC0	; 192
 4dc:	08 95       	ret

000004de <__fp_pscA>:
 4de:	00 24       	eor	r0, r0
 4e0:	0a 94       	dec	r0
 4e2:	16 16       	cp	r1, r22
 4e4:	17 06       	cpc	r1, r23
 4e6:	18 06       	cpc	r1, r24
 4e8:	09 06       	cpc	r0, r25
 4ea:	08 95       	ret

000004ec <__fp_pscB>:
 4ec:	00 24       	eor	r0, r0
 4ee:	0a 94       	dec	r0
 4f0:	12 16       	cp	r1, r18
 4f2:	13 06       	cpc	r1, r19
 4f4:	14 06       	cpc	r1, r20
 4f6:	05 06       	cpc	r0, r21
 4f8:	08 95       	ret

000004fa <__fp_round>:
 4fa:	09 2e       	mov	r0, r25
 4fc:	03 94       	inc	r0
 4fe:	00 0c       	add	r0, r0
 500:	11 f4       	brne	.+4      	; 0x506 <__fp_round+0xc>
 502:	88 23       	and	r24, r24
 504:	52 f0       	brmi	.+20     	; 0x51a <__fp_round+0x20>
 506:	bb 0f       	add	r27, r27
 508:	40 f4       	brcc	.+16     	; 0x51a <__fp_round+0x20>
 50a:	bf 2b       	or	r27, r31
 50c:	11 f4       	brne	.+4      	; 0x512 <__fp_round+0x18>
 50e:	60 ff       	sbrs	r22, 0
 510:	04 c0       	rjmp	.+8      	; 0x51a <__fp_round+0x20>
 512:	6f 5f       	subi	r22, 0xFF	; 255
 514:	7f 4f       	sbci	r23, 0xFF	; 255
 516:	8f 4f       	sbci	r24, 0xFF	; 255
 518:	9f 4f       	sbci	r25, 0xFF	; 255
 51a:	08 95       	ret

0000051c <__fp_split3>:
 51c:	57 fd       	sbrc	r21, 7
 51e:	90 58       	subi	r25, 0x80	; 128
 520:	44 0f       	add	r20, r20
 522:	55 1f       	adc	r21, r21
 524:	59 f0       	breq	.+22     	; 0x53c <__fp_splitA+0x10>
 526:	5f 3f       	cpi	r21, 0xFF	; 255
 528:	71 f0       	breq	.+28     	; 0x546 <__fp_splitA+0x1a>
 52a:	47 95       	ror	r20

0000052c <__fp_splitA>:
 52c:	88 0f       	add	r24, r24
 52e:	97 fb       	bst	r25, 7
 530:	99 1f       	adc	r25, r25
 532:	61 f0       	breq	.+24     	; 0x54c <__fp_splitA+0x20>
 534:	9f 3f       	cpi	r25, 0xFF	; 255
 536:	79 f0       	breq	.+30     	; 0x556 <__fp_splitA+0x2a>
 538:	87 95       	ror	r24
 53a:	08 95       	ret
 53c:	12 16       	cp	r1, r18
 53e:	13 06       	cpc	r1, r19
 540:	14 06       	cpc	r1, r20
 542:	55 1f       	adc	r21, r21
 544:	f2 cf       	rjmp	.-28     	; 0x52a <__fp_split3+0xe>
 546:	46 95       	lsr	r20
 548:	f1 df       	rcall	.-30     	; 0x52c <__fp_splitA>
 54a:	08 c0       	rjmp	.+16     	; 0x55c <__fp_splitA+0x30>
 54c:	16 16       	cp	r1, r22
 54e:	17 06       	cpc	r1, r23
 550:	18 06       	cpc	r1, r24
 552:	99 1f       	adc	r25, r25
 554:	f1 cf       	rjmp	.-30     	; 0x538 <__fp_splitA+0xc>
 556:	86 95       	lsr	r24
 558:	71 05       	cpc	r23, r1
 55a:	61 05       	cpc	r22, r1
 55c:	08 94       	sec
 55e:	08 95       	ret

00000560 <__fp_zero>:
 560:	e8 94       	clt

00000562 <__fp_szero>:
 562:	bb 27       	eor	r27, r27
 564:	66 27       	eor	r22, r22
 566:	77 27       	eor	r23, r23
 568:	cb 01       	movw	r24, r22
 56a:	97 f9       	bld	r25, 7
 56c:	08 95       	ret

0000056e <__gesf2>:
 56e:	0e 94 29 03 	call	0x652	; 0x652 <__fp_cmp>
 572:	08 f4       	brcc	.+2      	; 0x576 <__gesf2+0x8>
 574:	8f ef       	ldi	r24, 0xFF	; 255
 576:	08 95       	ret

00000578 <__mulsf3>:
 578:	0e 94 cf 02 	call	0x59e	; 0x59e <__mulsf3x>
 57c:	0c 94 7d 02 	jmp	0x4fa	; 0x4fa <__fp_round>
 580:	0e 94 6f 02 	call	0x4de	; 0x4de <__fp_pscA>
 584:	38 f0       	brcs	.+14     	; 0x594 <__mulsf3+0x1c>
 586:	0e 94 76 02 	call	0x4ec	; 0x4ec <__fp_pscB>
 58a:	20 f0       	brcs	.+8      	; 0x594 <__mulsf3+0x1c>
 58c:	95 23       	and	r25, r21
 58e:	11 f0       	breq	.+4      	; 0x594 <__mulsf3+0x1c>
 590:	0c 94 66 02 	jmp	0x4cc	; 0x4cc <__fp_inf>
 594:	0c 94 6c 02 	jmp	0x4d8	; 0x4d8 <__fp_nan>
 598:	11 24       	eor	r1, r1
 59a:	0c 94 b1 02 	jmp	0x562	; 0x562 <__fp_szero>

0000059e <__mulsf3x>:
 59e:	0e 94 8e 02 	call	0x51c	; 0x51c <__fp_split3>
 5a2:	70 f3       	brcs	.-36     	; 0x580 <__mulsf3+0x8>

000005a4 <__mulsf3_pse>:
 5a4:	95 9f       	mul	r25, r21
 5a6:	c1 f3       	breq	.-16     	; 0x598 <__mulsf3+0x20>
 5a8:	95 0f       	add	r25, r21
 5aa:	50 e0       	ldi	r21, 0x00	; 0
 5ac:	55 1f       	adc	r21, r21
 5ae:	62 9f       	mul	r22, r18
 5b0:	f0 01       	movw	r30, r0
 5b2:	72 9f       	mul	r23, r18
 5b4:	bb 27       	eor	r27, r27
 5b6:	f0 0d       	add	r31, r0
 5b8:	b1 1d       	adc	r27, r1
 5ba:	63 9f       	mul	r22, r19
 5bc:	aa 27       	eor	r26, r26
 5be:	f0 0d       	add	r31, r0
 5c0:	b1 1d       	adc	r27, r1
 5c2:	aa 1f       	adc	r26, r26
 5c4:	64 9f       	mul	r22, r20
 5c6:	66 27       	eor	r22, r22
 5c8:	b0 0d       	add	r27, r0
 5ca:	a1 1d       	adc	r26, r1
 5cc:	66 1f       	adc	r22, r22
 5ce:	82 9f       	mul	r24, r18
 5d0:	22 27       	eor	r18, r18
 5d2:	b0 0d       	add	r27, r0
 5d4:	a1 1d       	adc	r26, r1
 5d6:	62 1f       	adc	r22, r18
 5d8:	73 9f       	mul	r23, r19
 5da:	b0 0d       	add	r27, r0
 5dc:	a1 1d       	adc	r26, r1
 5de:	62 1f       	adc	r22, r18
 5e0:	83 9f       	mul	r24, r19
 5e2:	a0 0d       	add	r26, r0
 5e4:	61 1d       	adc	r22, r1
 5e6:	22 1f       	adc	r18, r18
 5e8:	74 9f       	mul	r23, r20
 5ea:	33 27       	eor	r19, r19
 5ec:	a0 0d       	add	r26, r0
 5ee:	61 1d       	adc	r22, r1
 5f0:	23 1f       	adc	r18, r19
 5f2:	84 9f       	mul	r24, r20
 5f4:	60 0d       	add	r22, r0
 5f6:	21 1d       	adc	r18, r1
 5f8:	82 2f       	mov	r24, r18
 5fa:	76 2f       	mov	r23, r22
 5fc:	6a 2f       	mov	r22, r26
 5fe:	11 24       	eor	r1, r1
 600:	9f 57       	subi	r25, 0x7F	; 127
 602:	50 40       	sbci	r21, 0x00	; 0
 604:	9a f0       	brmi	.+38     	; 0x62c <__mulsf3_pse+0x88>
 606:	f1 f0       	breq	.+60     	; 0x644 <__mulsf3_pse+0xa0>
 608:	88 23       	and	r24, r24
 60a:	4a f0       	brmi	.+18     	; 0x61e <__mulsf3_pse+0x7a>
 60c:	ee 0f       	add	r30, r30
 60e:	ff 1f       	adc	r31, r31
 610:	bb 1f       	adc	r27, r27
 612:	66 1f       	adc	r22, r22
 614:	77 1f       	adc	r23, r23
 616:	88 1f       	adc	r24, r24
 618:	91 50       	subi	r25, 0x01	; 1
 61a:	50 40       	sbci	r21, 0x00	; 0
 61c:	a9 f7       	brne	.-22     	; 0x608 <__mulsf3_pse+0x64>
 61e:	9e 3f       	cpi	r25, 0xFE	; 254
 620:	51 05       	cpc	r21, r1
 622:	80 f0       	brcs	.+32     	; 0x644 <__mulsf3_pse+0xa0>
 624:	0c 94 66 02 	jmp	0x4cc	; 0x4cc <__fp_inf>
 628:	0c 94 b1 02 	jmp	0x562	; 0x562 <__fp_szero>
 62c:	5f 3f       	cpi	r21, 0xFF	; 255
 62e:	e4 f3       	brlt	.-8      	; 0x628 <__mulsf3_pse+0x84>
 630:	98 3e       	cpi	r25, 0xE8	; 232
 632:	d4 f3       	brlt	.-12     	; 0x628 <__mulsf3_pse+0x84>
 634:	86 95       	lsr	r24
 636:	77 95       	ror	r23
 638:	67 95       	ror	r22
 63a:	b7 95       	ror	r27
 63c:	f7 95       	ror	r31
 63e:	e7 95       	ror	r30
 640:	9f 5f       	subi	r25, 0xFF	; 255
 642:	c1 f7       	brne	.-16     	; 0x634 <__mulsf3_pse+0x90>
 644:	fe 2b       	or	r31, r30
 646:	88 0f       	add	r24, r24
 648:	91 1d       	adc	r25, r1
 64a:	96 95       	lsr	r25
 64c:	87 95       	ror	r24
 64e:	97 f9       	bld	r25, 7
 650:	08 95       	ret

00000652 <__fp_cmp>:
 652:	99 0f       	add	r25, r25
 654:	00 08       	sbc	r0, r0
 656:	55 0f       	add	r21, r21
 658:	aa 0b       	sbc	r26, r26
 65a:	e0 e8       	ldi	r30, 0x80	; 128
 65c:	fe ef       	ldi	r31, 0xFE	; 254
 65e:	16 16       	cp	r1, r22
 660:	17 06       	cpc	r1, r23
 662:	e8 07       	cpc	r30, r24
 664:	f9 07       	cpc	r31, r25
 666:	c0 f0       	brcs	.+48     	; 0x698 <__fp_cmp+0x46>
 668:	12 16       	cp	r1, r18
 66a:	13 06       	cpc	r1, r19
 66c:	e4 07       	cpc	r30, r20
 66e:	f5 07       	cpc	r31, r21
 670:	98 f0       	brcs	.+38     	; 0x698 <__fp_cmp+0x46>
 672:	62 1b       	sub	r22, r18
 674:	73 0b       	sbc	r23, r19
 676:	84 0b       	sbc	r24, r20
 678:	95 0b       	sbc	r25, r21
 67a:	39 f4       	brne	.+14     	; 0x68a <__fp_cmp+0x38>
 67c:	0a 26       	eor	r0, r26
 67e:	61 f0       	breq	.+24     	; 0x698 <__fp_cmp+0x46>
 680:	23 2b       	or	r18, r19
 682:	24 2b       	or	r18, r20
 684:	25 2b       	or	r18, r21
 686:	21 f4       	brne	.+8      	; 0x690 <__fp_cmp+0x3e>
 688:	08 95       	ret
 68a:	0a 26       	eor	r0, r26
 68c:	09 f4       	brne	.+2      	; 0x690 <__fp_cmp+0x3e>
 68e:	a1 40       	sbci	r26, 0x01	; 1
 690:	a6 95       	lsr	r26
 692:	8f ef       	ldi	r24, 0xFF	; 255
 694:	81 1d       	adc	r24, r1
 696:	81 1d       	adc	r24, r1
 698:	08 95       	ret

0000069a <_exit>:
 69a:	f8 94       	cli

0000069c <__stop_program>:
 69c:	ff cf       	rjmp	.-2      	; 0x69c <__stop_program>
