
Lab5Ultrasonic.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000640  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005cc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800100  00800100  00000640  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000640  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000670  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  000006b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000008f3  00000000  00000000  00000708  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000073e  00000000  00000000  00000ffb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000436  00000000  00000000  00001739  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000150  00000000  00000000  00001b70  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000042c  00000000  00000000  00001cc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003e5  00000000  00000000  000020ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  000024d1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 6d 00 	jmp	0xda	; 0xda <__vector_13>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 48 00 	jmp	0x90	; 0x90 <__vector_16>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a8 30       	cpi	r26, 0x08	; 8
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 2d 01 	call	0x25a	; 0x25a <main>
  88:	0c 94 e4 02 	jmp	0x5c8	; 0x5c8 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <__vector_16>:
	while(*x != '\0'){
		transmitByteUSART(*x);
		x++;
	
	}
}
  90:	1f 92       	push	r1
  92:	0f 92       	push	r0
  94:	0f b6       	in	r0, 0x3f	; 63
  96:	0f 92       	push	r0
  98:	11 24       	eor	r1, r1
  9a:	8f 93       	push	r24
  9c:	9f 93       	push	r25
  9e:	af 93       	push	r26
  a0:	bf 93       	push	r27
  a2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  a6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  aa:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
  ae:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
  b2:	01 97       	sbiw	r24, 0x01	; 1
  b4:	a1 09       	sbc	r26, r1
  b6:	b1 09       	sbc	r27, r1
  b8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
  bc:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  c0:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
  c4:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
  c8:	bf 91       	pop	r27
  ca:	af 91       	pop	r26
  cc:	9f 91       	pop	r25
  ce:	8f 91       	pop	r24
  d0:	0f 90       	pop	r0
  d2:	0f be       	out	0x3f, r0	; 63
  d4:	0f 90       	pop	r0
  d6:	1f 90       	pop	r1
  d8:	18 95       	reti

000000da <__vector_13>:
  da:	1f 92       	push	r1
  dc:	0f 92       	push	r0
  de:	0f b6       	in	r0, 0x3f	; 63
  e0:	0f 92       	push	r0
  e2:	11 24       	eor	r1, r1
  e4:	8f 93       	push	r24
  e6:	9f 93       	push	r25
  e8:	af 93       	push	r26
  ea:	bf 93       	push	r27
  ec:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <numOV1>
  f0:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <numOV1+0x1>
  f4:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <numOV1+0x2>
  f8:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <numOV1+0x3>
  fc:	01 97       	sbiw	r24, 0x01	; 1
  fe:	a1 09       	sbc	r26, r1
 100:	b1 09       	sbc	r27, r1
 102:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <numOV1>
 106:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <numOV1+0x1>
 10a:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <numOV1+0x2>
 10e:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <numOV1+0x3>
 112:	bf 91       	pop	r27
 114:	af 91       	pop	r26
 116:	9f 91       	pop	r25
 118:	8f 91       	pop	r24
 11a:	0f 90       	pop	r0
 11c:	0f be       	out	0x3f, r0	; 63
 11e:	0f 90       	pop	r0
 120:	1f 90       	pop	r1
 122:	18 95       	reti

00000124 <initUSART>:
 124:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 128:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 12c:	e1 ec       	ldi	r30, 0xC1	; 193
 12e:	f0 e0       	ldi	r31, 0x00	; 0
 130:	80 81       	ld	r24, Z
 132:	88 60       	ori	r24, 0x08	; 8
 134:	80 83       	st	Z, r24
 136:	e2 ec       	ldi	r30, 0xC2	; 194
 138:	f0 e0       	ldi	r31, 0x00	; 0
 13a:	80 81       	ld	r24, Z
 13c:	86 60       	ori	r24, 0x06	; 6
 13e:	80 83       	st	Z, r24
 140:	08 95       	ret

00000142 <delayUS>:
	while(!bitCheck(UCSR0A, UDRE0));
	UDR0 = x;
	
}

void delayUS(float t){
 142:	8f 92       	push	r8
 144:	9f 92       	push	r9
 146:	af 92       	push	r10
 148:	bf 92       	push	r11
 14a:	cf 92       	push	r12
 14c:	df 92       	push	r13
 14e:	ef 92       	push	r14
 150:	ff 92       	push	r15
 152:	1f 93       	push	r17
 154:	cf 93       	push	r28
 156:	df 93       	push	r29
 158:	4b 01       	movw	r8, r22
 15a:	5c 01       	movw	r10, r24
	cli();
 15c:	f8 94       	cli
	char TCCR0A_old = TCCR0A;
 15e:	14 b5       	in	r17, 0x24	; 36
	char TCCR0B_old = TCCR0B;
 160:	d5 b5       	in	r29, 0x25	; 37
	char TIMSK0C_old = TIMSK0;
 162:	ee e6       	ldi	r30, 0x6E	; 110
 164:	f0 e0       	ldi	r31, 0x00	; 0
 166:	c0 81       	ld	r28, Z
	
	TCCR0A = 0;
 168:	14 bc       	out	0x24, r1	; 36
	TCCR0B = 0;
 16a:	15 bc       	out	0x25, r1	; 37
	TIMSK0 = 0;
 16c:	10 82       	st	Z, r1
	
	bitSet(TIMSK0, TOIE0);
 16e:	80 81       	ld	r24, Z
 170:	81 60       	ori	r24, 0x01	; 1
 172:	80 83       	st	Z, r24
	
	unsigned long tmp = 16.0/256. *t;
 174:	20 e0       	ldi	r18, 0x00	; 0
 176:	30 e0       	ldi	r19, 0x00	; 0
 178:	40 e8       	ldi	r20, 0x80	; 128
 17a:	5d e3       	ldi	r21, 0x3D	; 61
 17c:	c5 01       	movw	r24, r10
 17e:	b4 01       	movw	r22, r8
 180:	0e 94 77 02 	call	0x4ee	; 0x4ee <__mulsf3>
 184:	0e 94 ba 01 	call	0x374	; 0x374 <__fixunssfsi>
 188:	6b 01       	movw	r12, r22
 18a:	7c 01       	movw	r14, r24
	
	numOV = tmp;
 18c:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
 190:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 194:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 198:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
	
	TCNT0 = 0;
 19c:	16 bc       	out	0x26, r1	; 38
	
	sei();
 19e:	78 94       	sei
	
	bitSet(TCCR0B, CS00);
 1a0:	85 b5       	in	r24, 0x25	; 37
 1a2:	81 60       	ori	r24, 0x01	; 1
 1a4:	85 bd       	out	0x25, r24	; 37
	
	while(numOV);
 1a6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1aa:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1ae:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 1b2:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 1b6:	89 2b       	or	r24, r25
 1b8:	8a 2b       	or	r24, r26
 1ba:	8b 2b       	or	r24, r27
 1bc:	a1 f7       	brne	.-24     	; 0x1a6 <delayUS+0x64>
	
	bitClear(TCCR0B, CS00);
 1be:	85 b5       	in	r24, 0x25	; 37
 1c0:	8e 7f       	andi	r24, 0xFE	; 254
 1c2:	85 bd       	out	0x25, r24	; 37
	
	tmp = 16.0*t - tmp*256;
 1c4:	20 e0       	ldi	r18, 0x00	; 0
 1c6:	30 e0       	ldi	r19, 0x00	; 0
 1c8:	40 e8       	ldi	r20, 0x80	; 128
 1ca:	51 e4       	ldi	r21, 0x41	; 65
 1cc:	c5 01       	movw	r24, r10
 1ce:	b4 01       	movw	r22, r8
 1d0:	0e 94 77 02 	call	0x4ee	; 0x4ee <__mulsf3>
 1d4:	4b 01       	movw	r8, r22
 1d6:	5c 01       	movw	r10, r24
 1d8:	9e 2d       	mov	r25, r14
 1da:	8d 2d       	mov	r24, r13
 1dc:	7c 2d       	mov	r23, r12
 1de:	66 27       	eor	r22, r22
 1e0:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <__floatunsisf>
 1e4:	9b 01       	movw	r18, r22
 1e6:	ac 01       	movw	r20, r24
 1e8:	c5 01       	movw	r24, r10
 1ea:	b4 01       	movw	r22, r8
 1ec:	0e 94 4d 01 	call	0x29a	; 0x29a <__subsf3>
 1f0:	0e 94 ba 01 	call	0x374	; 0x374 <__fixunssfsi>
	
	if(tmp){
 1f4:	61 15       	cp	r22, r1
 1f6:	71 05       	cpc	r23, r1
 1f8:	81 05       	cpc	r24, r1
 1fa:	91 05       	cpc	r25, r1
 1fc:	e9 f0       	breq	.+58     	; 0x238 <delayUS+0xf6>
		TCNT0 = 256 - tmp;
 1fe:	61 95       	neg	r22
 200:	66 bd       	out	0x26, r22	; 38
		numOV = 1;
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	a0 e0       	ldi	r26, 0x00	; 0
 208:	b0 e0       	ldi	r27, 0x00	; 0
 20a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 20e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 212:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 216:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
		
		bitSet(TCCR0B, CS00);
 21a:	85 b5       	in	r24, 0x25	; 37
 21c:	81 60       	ori	r24, 0x01	; 1
 21e:	85 bd       	out	0x25, r24	; 37
		
		while(numOV);
 220:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 224:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 228:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 22c:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 230:	89 2b       	or	r24, r25
 232:	8a 2b       	or	r24, r26
 234:	8b 2b       	or	r24, r27
 236:	a1 f7       	brne	.-24     	; 0x220 <delayUS+0xde>
	}
	cli();
 238:	f8 94       	cli
	
	TCCR0A = TCCR0A_old;
 23a:	14 bd       	out	0x24, r17	; 36
	TCCR0B = TCCR0B_old;
 23c:	d5 bd       	out	0x25, r29	; 37
	TIMSK0 = TIMSK0C_old;
 23e:	c0 93 6e 00 	sts	0x006E, r28	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
 242:	df 91       	pop	r29
 244:	cf 91       	pop	r28
 246:	1f 91       	pop	r17
 248:	ff 90       	pop	r15
 24a:	ef 90       	pop	r14
 24c:	df 90       	pop	r13
 24e:	cf 90       	pop	r12
 250:	bf 90       	pop	r11
 252:	af 90       	pop	r10
 254:	9f 90       	pop	r9
 256:	8f 90       	pop	r8
 258:	08 95       	ret

0000025a <main>:



int main(void)
{
    initUSART(MY_UBBR);
 25a:	87 e6       	ldi	r24, 0x67	; 103
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	0e 94 92 00 	call	0x124	; 0x124 <initUSART>
	
	bitSet(DDRB, pinTrigger);
 262:	84 b1       	in	r24, 0x04	; 4
 264:	80 61       	ori	r24, 0x10	; 16
 266:	84 b9       	out	0x04, r24	; 4
	
	bitClear(DDRD, pinEcho);
 268:	8a b1       	in	r24, 0x0a	; 10
 26a:	8f 7e       	andi	r24, 0xEF	; 239
 26c:	8a b9       	out	0x0a, r24	; 10
	bitSet(PORTD, pinEcho);
 26e:	8b b1       	in	r24, 0x0b	; 11
 270:	80 61       	ori	r24, 0x10	; 16
 272:	8b b9       	out	0x0b, r24	; 11
	
	float range;
	char rangeStr[15];
	
	while(1){
		PORTB |= (1<<pinTrigger);
 274:	85 b1       	in	r24, 0x05	; 5
 276:	80 61       	ori	r24, 0x10	; 16
 278:	85 b9       	out	0x05, r24	; 5
		delayUS(20);
 27a:	60 e0       	ldi	r22, 0x00	; 0
 27c:	70 e0       	ldi	r23, 0x00	; 0
 27e:	80 ea       	ldi	r24, 0xA0	; 160
 280:	91 e4       	ldi	r25, 0x41	; 65
 282:	0e 94 a1 00 	call	0x142	; 0x142 <delayUS>
		PORTB &= ~(1<<pinTrigger);
 286:	85 b1       	in	r24, 0x05	; 5
 288:	8f 7e       	andi	r24, 0xEF	; 239
 28a:	85 b9       	out	0x05, r24	; 5
		delayUS(20);
 28c:	60 e0       	ldi	r22, 0x00	; 0
 28e:	70 e0       	ldi	r23, 0x00	; 0
 290:	80 ea       	ldi	r24, 0xA0	; 160
 292:	91 e4       	ldi	r25, 0x41	; 65
 294:	0e 94 a1 00 	call	0x142	; 0x142 <delayUS>
 298:	ed cf       	rjmp	.-38     	; 0x274 <main+0x1a>

0000029a <__subsf3>:
 29a:	50 58       	subi	r21, 0x80	; 128

0000029c <__addsf3>:
 29c:	bb 27       	eor	r27, r27
 29e:	aa 27       	eor	r26, r26
 2a0:	0e 94 65 01 	call	0x2ca	; 0x2ca <__addsf3x>
 2a4:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__fp_round>
 2a8:	0e 94 2f 02 	call	0x45e	; 0x45e <__fp_pscA>
 2ac:	38 f0       	brcs	.+14     	; 0x2bc <__addsf3+0x20>
 2ae:	0e 94 36 02 	call	0x46c	; 0x46c <__fp_pscB>
 2b2:	20 f0       	brcs	.+8      	; 0x2bc <__addsf3+0x20>
 2b4:	39 f4       	brne	.+14     	; 0x2c4 <__addsf3+0x28>
 2b6:	9f 3f       	cpi	r25, 0xFF	; 255
 2b8:	19 f4       	brne	.+6      	; 0x2c0 <__addsf3+0x24>
 2ba:	26 f4       	brtc	.+8      	; 0x2c4 <__addsf3+0x28>
 2bc:	0c 94 2c 02 	jmp	0x458	; 0x458 <__fp_nan>
 2c0:	0e f4       	brtc	.+2      	; 0x2c4 <__addsf3+0x28>
 2c2:	e0 95       	com	r30
 2c4:	e7 fb       	bst	r30, 7
 2c6:	0c 94 26 02 	jmp	0x44c	; 0x44c <__fp_inf>

000002ca <__addsf3x>:
 2ca:	e9 2f       	mov	r30, r25
 2cc:	0e 94 4e 02 	call	0x49c	; 0x49c <__fp_split3>
 2d0:	58 f3       	brcs	.-42     	; 0x2a8 <__addsf3+0xc>
 2d2:	ba 17       	cp	r27, r26
 2d4:	62 07       	cpc	r22, r18
 2d6:	73 07       	cpc	r23, r19
 2d8:	84 07       	cpc	r24, r20
 2da:	95 07       	cpc	r25, r21
 2dc:	20 f0       	brcs	.+8      	; 0x2e6 <__addsf3x+0x1c>
 2de:	79 f4       	brne	.+30     	; 0x2fe <__addsf3x+0x34>
 2e0:	a6 f5       	brtc	.+104    	; 0x34a <__addsf3x+0x80>
 2e2:	0c 94 70 02 	jmp	0x4e0	; 0x4e0 <__fp_zero>
 2e6:	0e f4       	brtc	.+2      	; 0x2ea <__addsf3x+0x20>
 2e8:	e0 95       	com	r30
 2ea:	0b 2e       	mov	r0, r27
 2ec:	ba 2f       	mov	r27, r26
 2ee:	a0 2d       	mov	r26, r0
 2f0:	0b 01       	movw	r0, r22
 2f2:	b9 01       	movw	r22, r18
 2f4:	90 01       	movw	r18, r0
 2f6:	0c 01       	movw	r0, r24
 2f8:	ca 01       	movw	r24, r20
 2fa:	a0 01       	movw	r20, r0
 2fc:	11 24       	eor	r1, r1
 2fe:	ff 27       	eor	r31, r31
 300:	59 1b       	sub	r21, r25
 302:	99 f0       	breq	.+38     	; 0x32a <__addsf3x+0x60>
 304:	59 3f       	cpi	r21, 0xF9	; 249
 306:	50 f4       	brcc	.+20     	; 0x31c <__addsf3x+0x52>
 308:	50 3e       	cpi	r21, 0xE0	; 224
 30a:	68 f1       	brcs	.+90     	; 0x366 <__addsf3x+0x9c>
 30c:	1a 16       	cp	r1, r26
 30e:	f0 40       	sbci	r31, 0x00	; 0
 310:	a2 2f       	mov	r26, r18
 312:	23 2f       	mov	r18, r19
 314:	34 2f       	mov	r19, r20
 316:	44 27       	eor	r20, r20
 318:	58 5f       	subi	r21, 0xF8	; 248
 31a:	f3 cf       	rjmp	.-26     	; 0x302 <__addsf3x+0x38>
 31c:	46 95       	lsr	r20
 31e:	37 95       	ror	r19
 320:	27 95       	ror	r18
 322:	a7 95       	ror	r26
 324:	f0 40       	sbci	r31, 0x00	; 0
 326:	53 95       	inc	r21
 328:	c9 f7       	brne	.-14     	; 0x31c <__addsf3x+0x52>
 32a:	7e f4       	brtc	.+30     	; 0x34a <__addsf3x+0x80>
 32c:	1f 16       	cp	r1, r31
 32e:	ba 0b       	sbc	r27, r26
 330:	62 0b       	sbc	r22, r18
 332:	73 0b       	sbc	r23, r19
 334:	84 0b       	sbc	r24, r20
 336:	ba f0       	brmi	.+46     	; 0x366 <__addsf3x+0x9c>
 338:	91 50       	subi	r25, 0x01	; 1
 33a:	a1 f0       	breq	.+40     	; 0x364 <__addsf3x+0x9a>
 33c:	ff 0f       	add	r31, r31
 33e:	bb 1f       	adc	r27, r27
 340:	66 1f       	adc	r22, r22
 342:	77 1f       	adc	r23, r23
 344:	88 1f       	adc	r24, r24
 346:	c2 f7       	brpl	.-16     	; 0x338 <__addsf3x+0x6e>
 348:	0e c0       	rjmp	.+28     	; 0x366 <__addsf3x+0x9c>
 34a:	ba 0f       	add	r27, r26
 34c:	62 1f       	adc	r22, r18
 34e:	73 1f       	adc	r23, r19
 350:	84 1f       	adc	r24, r20
 352:	48 f4       	brcc	.+18     	; 0x366 <__addsf3x+0x9c>
 354:	87 95       	ror	r24
 356:	77 95       	ror	r23
 358:	67 95       	ror	r22
 35a:	b7 95       	ror	r27
 35c:	f7 95       	ror	r31
 35e:	9e 3f       	cpi	r25, 0xFE	; 254
 360:	08 f0       	brcs	.+2      	; 0x364 <__addsf3x+0x9a>
 362:	b0 cf       	rjmp	.-160    	; 0x2c4 <__addsf3+0x28>
 364:	93 95       	inc	r25
 366:	88 0f       	add	r24, r24
 368:	08 f0       	brcs	.+2      	; 0x36c <__addsf3x+0xa2>
 36a:	99 27       	eor	r25, r25
 36c:	ee 0f       	add	r30, r30
 36e:	97 95       	ror	r25
 370:	87 95       	ror	r24
 372:	08 95       	ret

00000374 <__fixunssfsi>:
 374:	0e 94 56 02 	call	0x4ac	; 0x4ac <__fp_splitA>
 378:	88 f0       	brcs	.+34     	; 0x39c <__fixunssfsi+0x28>
 37a:	9f 57       	subi	r25, 0x7F	; 127
 37c:	98 f0       	brcs	.+38     	; 0x3a4 <__fixunssfsi+0x30>
 37e:	b9 2f       	mov	r27, r25
 380:	99 27       	eor	r25, r25
 382:	b7 51       	subi	r27, 0x17	; 23
 384:	b0 f0       	brcs	.+44     	; 0x3b2 <__fixunssfsi+0x3e>
 386:	e1 f0       	breq	.+56     	; 0x3c0 <__fixunssfsi+0x4c>
 388:	66 0f       	add	r22, r22
 38a:	77 1f       	adc	r23, r23
 38c:	88 1f       	adc	r24, r24
 38e:	99 1f       	adc	r25, r25
 390:	1a f0       	brmi	.+6      	; 0x398 <__fixunssfsi+0x24>
 392:	ba 95       	dec	r27
 394:	c9 f7       	brne	.-14     	; 0x388 <__fixunssfsi+0x14>
 396:	14 c0       	rjmp	.+40     	; 0x3c0 <__fixunssfsi+0x4c>
 398:	b1 30       	cpi	r27, 0x01	; 1
 39a:	91 f0       	breq	.+36     	; 0x3c0 <__fixunssfsi+0x4c>
 39c:	0e 94 70 02 	call	0x4e0	; 0x4e0 <__fp_zero>
 3a0:	b1 e0       	ldi	r27, 0x01	; 1
 3a2:	08 95       	ret
 3a4:	0c 94 70 02 	jmp	0x4e0	; 0x4e0 <__fp_zero>
 3a8:	67 2f       	mov	r22, r23
 3aa:	78 2f       	mov	r23, r24
 3ac:	88 27       	eor	r24, r24
 3ae:	b8 5f       	subi	r27, 0xF8	; 248
 3b0:	39 f0       	breq	.+14     	; 0x3c0 <__fixunssfsi+0x4c>
 3b2:	b9 3f       	cpi	r27, 0xF9	; 249
 3b4:	cc f3       	brlt	.-14     	; 0x3a8 <__fixunssfsi+0x34>
 3b6:	86 95       	lsr	r24
 3b8:	77 95       	ror	r23
 3ba:	67 95       	ror	r22
 3bc:	b3 95       	inc	r27
 3be:	d9 f7       	brne	.-10     	; 0x3b6 <__fixunssfsi+0x42>
 3c0:	3e f4       	brtc	.+14     	; 0x3d0 <__fixunssfsi+0x5c>
 3c2:	90 95       	com	r25
 3c4:	80 95       	com	r24
 3c6:	70 95       	com	r23
 3c8:	61 95       	neg	r22
 3ca:	7f 4f       	sbci	r23, 0xFF	; 255
 3cc:	8f 4f       	sbci	r24, 0xFF	; 255
 3ce:	9f 4f       	sbci	r25, 0xFF	; 255
 3d0:	08 95       	ret

000003d2 <__floatunsisf>:
 3d2:	e8 94       	clt
 3d4:	09 c0       	rjmp	.+18     	; 0x3e8 <__floatsisf+0x12>

000003d6 <__floatsisf>:
 3d6:	97 fb       	bst	r25, 7
 3d8:	3e f4       	brtc	.+14     	; 0x3e8 <__floatsisf+0x12>
 3da:	90 95       	com	r25
 3dc:	80 95       	com	r24
 3de:	70 95       	com	r23
 3e0:	61 95       	neg	r22
 3e2:	7f 4f       	sbci	r23, 0xFF	; 255
 3e4:	8f 4f       	sbci	r24, 0xFF	; 255
 3e6:	9f 4f       	sbci	r25, 0xFF	; 255
 3e8:	99 23       	and	r25, r25
 3ea:	a9 f0       	breq	.+42     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 3ec:	f9 2f       	mov	r31, r25
 3ee:	96 e9       	ldi	r25, 0x96	; 150
 3f0:	bb 27       	eor	r27, r27
 3f2:	93 95       	inc	r25
 3f4:	f6 95       	lsr	r31
 3f6:	87 95       	ror	r24
 3f8:	77 95       	ror	r23
 3fa:	67 95       	ror	r22
 3fc:	b7 95       	ror	r27
 3fe:	f1 11       	cpse	r31, r1
 400:	f8 cf       	rjmp	.-16     	; 0x3f2 <__floatsisf+0x1c>
 402:	fa f4       	brpl	.+62     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 404:	bb 0f       	add	r27, r27
 406:	11 f4       	brne	.+4      	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 408:	60 ff       	sbrs	r22, 0
 40a:	1b c0       	rjmp	.+54     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 40c:	6f 5f       	subi	r22, 0xFF	; 255
 40e:	7f 4f       	sbci	r23, 0xFF	; 255
 410:	8f 4f       	sbci	r24, 0xFF	; 255
 412:	9f 4f       	sbci	r25, 0xFF	; 255
 414:	16 c0       	rjmp	.+44     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 416:	88 23       	and	r24, r24
 418:	11 f0       	breq	.+4      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 41a:	96 e9       	ldi	r25, 0x96	; 150
 41c:	11 c0       	rjmp	.+34     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 41e:	77 23       	and	r23, r23
 420:	21 f0       	breq	.+8      	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 422:	9e e8       	ldi	r25, 0x8E	; 142
 424:	87 2f       	mov	r24, r23
 426:	76 2f       	mov	r23, r22
 428:	05 c0       	rjmp	.+10     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 42a:	66 23       	and	r22, r22
 42c:	71 f0       	breq	.+28     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 42e:	96 e8       	ldi	r25, 0x86	; 134
 430:	86 2f       	mov	r24, r22
 432:	70 e0       	ldi	r23, 0x00	; 0
 434:	60 e0       	ldi	r22, 0x00	; 0
 436:	2a f0       	brmi	.+10     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 438:	9a 95       	dec	r25
 43a:	66 0f       	add	r22, r22
 43c:	77 1f       	adc	r23, r23
 43e:	88 1f       	adc	r24, r24
 440:	da f7       	brpl	.-10     	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 442:	88 0f       	add	r24, r24
 444:	96 95       	lsr	r25
 446:	87 95       	ror	r24
 448:	97 f9       	bld	r25, 7
 44a:	08 95       	ret

0000044c <__fp_inf>:
 44c:	97 f9       	bld	r25, 7
 44e:	9f 67       	ori	r25, 0x7F	; 127
 450:	80 e8       	ldi	r24, 0x80	; 128
 452:	70 e0       	ldi	r23, 0x00	; 0
 454:	60 e0       	ldi	r22, 0x00	; 0
 456:	08 95       	ret

00000458 <__fp_nan>:
 458:	9f ef       	ldi	r25, 0xFF	; 255
 45a:	80 ec       	ldi	r24, 0xC0	; 192
 45c:	08 95       	ret

0000045e <__fp_pscA>:
 45e:	00 24       	eor	r0, r0
 460:	0a 94       	dec	r0
 462:	16 16       	cp	r1, r22
 464:	17 06       	cpc	r1, r23
 466:	18 06       	cpc	r1, r24
 468:	09 06       	cpc	r0, r25
 46a:	08 95       	ret

0000046c <__fp_pscB>:
 46c:	00 24       	eor	r0, r0
 46e:	0a 94       	dec	r0
 470:	12 16       	cp	r1, r18
 472:	13 06       	cpc	r1, r19
 474:	14 06       	cpc	r1, r20
 476:	05 06       	cpc	r0, r21
 478:	08 95       	ret

0000047a <__fp_round>:
 47a:	09 2e       	mov	r0, r25
 47c:	03 94       	inc	r0
 47e:	00 0c       	add	r0, r0
 480:	11 f4       	brne	.+4      	; 0x486 <__fp_round+0xc>
 482:	88 23       	and	r24, r24
 484:	52 f0       	brmi	.+20     	; 0x49a <__fp_round+0x20>
 486:	bb 0f       	add	r27, r27
 488:	40 f4       	brcc	.+16     	; 0x49a <__fp_round+0x20>
 48a:	bf 2b       	or	r27, r31
 48c:	11 f4       	brne	.+4      	; 0x492 <__fp_round+0x18>
 48e:	60 ff       	sbrs	r22, 0
 490:	04 c0       	rjmp	.+8      	; 0x49a <__fp_round+0x20>
 492:	6f 5f       	subi	r22, 0xFF	; 255
 494:	7f 4f       	sbci	r23, 0xFF	; 255
 496:	8f 4f       	sbci	r24, 0xFF	; 255
 498:	9f 4f       	sbci	r25, 0xFF	; 255
 49a:	08 95       	ret

0000049c <__fp_split3>:
 49c:	57 fd       	sbrc	r21, 7
 49e:	90 58       	subi	r25, 0x80	; 128
 4a0:	44 0f       	add	r20, r20
 4a2:	55 1f       	adc	r21, r21
 4a4:	59 f0       	breq	.+22     	; 0x4bc <__fp_splitA+0x10>
 4a6:	5f 3f       	cpi	r21, 0xFF	; 255
 4a8:	71 f0       	breq	.+28     	; 0x4c6 <__fp_splitA+0x1a>
 4aa:	47 95       	ror	r20

000004ac <__fp_splitA>:
 4ac:	88 0f       	add	r24, r24
 4ae:	97 fb       	bst	r25, 7
 4b0:	99 1f       	adc	r25, r25
 4b2:	61 f0       	breq	.+24     	; 0x4cc <__fp_splitA+0x20>
 4b4:	9f 3f       	cpi	r25, 0xFF	; 255
 4b6:	79 f0       	breq	.+30     	; 0x4d6 <__fp_splitA+0x2a>
 4b8:	87 95       	ror	r24
 4ba:	08 95       	ret
 4bc:	12 16       	cp	r1, r18
 4be:	13 06       	cpc	r1, r19
 4c0:	14 06       	cpc	r1, r20
 4c2:	55 1f       	adc	r21, r21
 4c4:	f2 cf       	rjmp	.-28     	; 0x4aa <__fp_split3+0xe>
 4c6:	46 95       	lsr	r20
 4c8:	f1 df       	rcall	.-30     	; 0x4ac <__fp_splitA>
 4ca:	08 c0       	rjmp	.+16     	; 0x4dc <__fp_splitA+0x30>
 4cc:	16 16       	cp	r1, r22
 4ce:	17 06       	cpc	r1, r23
 4d0:	18 06       	cpc	r1, r24
 4d2:	99 1f       	adc	r25, r25
 4d4:	f1 cf       	rjmp	.-30     	; 0x4b8 <__fp_splitA+0xc>
 4d6:	86 95       	lsr	r24
 4d8:	71 05       	cpc	r23, r1
 4da:	61 05       	cpc	r22, r1
 4dc:	08 94       	sec
 4de:	08 95       	ret

000004e0 <__fp_zero>:
 4e0:	e8 94       	clt

000004e2 <__fp_szero>:
 4e2:	bb 27       	eor	r27, r27
 4e4:	66 27       	eor	r22, r22
 4e6:	77 27       	eor	r23, r23
 4e8:	cb 01       	movw	r24, r22
 4ea:	97 f9       	bld	r25, 7
 4ec:	08 95       	ret

000004ee <__mulsf3>:
 4ee:	0e 94 8a 02 	call	0x514	; 0x514 <__mulsf3x>
 4f2:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__fp_round>
 4f6:	0e 94 2f 02 	call	0x45e	; 0x45e <__fp_pscA>
 4fa:	38 f0       	brcs	.+14     	; 0x50a <__mulsf3+0x1c>
 4fc:	0e 94 36 02 	call	0x46c	; 0x46c <__fp_pscB>
 500:	20 f0       	brcs	.+8      	; 0x50a <__mulsf3+0x1c>
 502:	95 23       	and	r25, r21
 504:	11 f0       	breq	.+4      	; 0x50a <__mulsf3+0x1c>
 506:	0c 94 26 02 	jmp	0x44c	; 0x44c <__fp_inf>
 50a:	0c 94 2c 02 	jmp	0x458	; 0x458 <__fp_nan>
 50e:	11 24       	eor	r1, r1
 510:	0c 94 71 02 	jmp	0x4e2	; 0x4e2 <__fp_szero>

00000514 <__mulsf3x>:
 514:	0e 94 4e 02 	call	0x49c	; 0x49c <__fp_split3>
 518:	70 f3       	brcs	.-36     	; 0x4f6 <__mulsf3+0x8>

0000051a <__mulsf3_pse>:
 51a:	95 9f       	mul	r25, r21
 51c:	c1 f3       	breq	.-16     	; 0x50e <__mulsf3+0x20>
 51e:	95 0f       	add	r25, r21
 520:	50 e0       	ldi	r21, 0x00	; 0
 522:	55 1f       	adc	r21, r21
 524:	62 9f       	mul	r22, r18
 526:	f0 01       	movw	r30, r0
 528:	72 9f       	mul	r23, r18
 52a:	bb 27       	eor	r27, r27
 52c:	f0 0d       	add	r31, r0
 52e:	b1 1d       	adc	r27, r1
 530:	63 9f       	mul	r22, r19
 532:	aa 27       	eor	r26, r26
 534:	f0 0d       	add	r31, r0
 536:	b1 1d       	adc	r27, r1
 538:	aa 1f       	adc	r26, r26
 53a:	64 9f       	mul	r22, r20
 53c:	66 27       	eor	r22, r22
 53e:	b0 0d       	add	r27, r0
 540:	a1 1d       	adc	r26, r1
 542:	66 1f       	adc	r22, r22
 544:	82 9f       	mul	r24, r18
 546:	22 27       	eor	r18, r18
 548:	b0 0d       	add	r27, r0
 54a:	a1 1d       	adc	r26, r1
 54c:	62 1f       	adc	r22, r18
 54e:	73 9f       	mul	r23, r19
 550:	b0 0d       	add	r27, r0
 552:	a1 1d       	adc	r26, r1
 554:	62 1f       	adc	r22, r18
 556:	83 9f       	mul	r24, r19
 558:	a0 0d       	add	r26, r0
 55a:	61 1d       	adc	r22, r1
 55c:	22 1f       	adc	r18, r18
 55e:	74 9f       	mul	r23, r20
 560:	33 27       	eor	r19, r19
 562:	a0 0d       	add	r26, r0
 564:	61 1d       	adc	r22, r1
 566:	23 1f       	adc	r18, r19
 568:	84 9f       	mul	r24, r20
 56a:	60 0d       	add	r22, r0
 56c:	21 1d       	adc	r18, r1
 56e:	82 2f       	mov	r24, r18
 570:	76 2f       	mov	r23, r22
 572:	6a 2f       	mov	r22, r26
 574:	11 24       	eor	r1, r1
 576:	9f 57       	subi	r25, 0x7F	; 127
 578:	50 40       	sbci	r21, 0x00	; 0
 57a:	9a f0       	brmi	.+38     	; 0x5a2 <__mulsf3_pse+0x88>
 57c:	f1 f0       	breq	.+60     	; 0x5ba <__mulsf3_pse+0xa0>
 57e:	88 23       	and	r24, r24
 580:	4a f0       	brmi	.+18     	; 0x594 <__mulsf3_pse+0x7a>
 582:	ee 0f       	add	r30, r30
 584:	ff 1f       	adc	r31, r31
 586:	bb 1f       	adc	r27, r27
 588:	66 1f       	adc	r22, r22
 58a:	77 1f       	adc	r23, r23
 58c:	88 1f       	adc	r24, r24
 58e:	91 50       	subi	r25, 0x01	; 1
 590:	50 40       	sbci	r21, 0x00	; 0
 592:	a9 f7       	brne	.-22     	; 0x57e <__mulsf3_pse+0x64>
 594:	9e 3f       	cpi	r25, 0xFE	; 254
 596:	51 05       	cpc	r21, r1
 598:	80 f0       	brcs	.+32     	; 0x5ba <__mulsf3_pse+0xa0>
 59a:	0c 94 26 02 	jmp	0x44c	; 0x44c <__fp_inf>
 59e:	0c 94 71 02 	jmp	0x4e2	; 0x4e2 <__fp_szero>
 5a2:	5f 3f       	cpi	r21, 0xFF	; 255
 5a4:	e4 f3       	brlt	.-8      	; 0x59e <__mulsf3_pse+0x84>
 5a6:	98 3e       	cpi	r25, 0xE8	; 232
 5a8:	d4 f3       	brlt	.-12     	; 0x59e <__mulsf3_pse+0x84>
 5aa:	86 95       	lsr	r24
 5ac:	77 95       	ror	r23
 5ae:	67 95       	ror	r22
 5b0:	b7 95       	ror	r27
 5b2:	f7 95       	ror	r31
 5b4:	e7 95       	ror	r30
 5b6:	9f 5f       	subi	r25, 0xFF	; 255
 5b8:	c1 f7       	brne	.-16     	; 0x5aa <__mulsf3_pse+0x90>
 5ba:	fe 2b       	or	r31, r30
 5bc:	88 0f       	add	r24, r24
 5be:	91 1d       	adc	r25, r1
 5c0:	96 95       	lsr	r25
 5c2:	87 95       	ror	r24
 5c4:	97 f9       	bld	r25, 7
 5c6:	08 95       	ret

000005c8 <_exit>:
 5c8:	f8 94       	cli

000005ca <__stop_program>:
 5ca:	ff cf       	rjmp	.-2      	; 0x5ca <__stop_program>
