
PhaseCorrectPWMLAb3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000146  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000f2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000146  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000178  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000687  00000000  00000000  000001d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005f8  00000000  00000000  0000085f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000229  00000000  00000000  00000e57  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001080  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000360  00000000  00000000  000010a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00001404  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#define PWMOUT1 PINB2
#define PWMOUT2 PIND3

int main(void){

	cli();
  80:	f8 94       	cli

	DDRB = 0xFF; //Set ports B and D as outputs
  82:	8f ef       	ldi	r24, 0xFF	; 255
  84:	84 b9       	out	0x04, r24	; 4
	DDRD = 0xFF;
  86:	8a b9       	out	0x0a, r24	; 10

	

	
	//enable phase correct PWM with TOP = OCR1A for Timer 1
	TCCR1A |= (1<<WGM10) | (1<<WGM10);
  88:	a0 e8       	ldi	r26, 0x80	; 128
  8a:	b0 e0       	ldi	r27, 0x00	; 0
  8c:	8c 91       	ld	r24, X
  8e:	81 60       	ori	r24, 0x01	; 1
  90:	8c 93       	st	X, r24
	TCCR1B |=  (1<<WGM13);
  92:	e1 e8       	ldi	r30, 0x81	; 129
  94:	f0 e0       	ldi	r31, 0x00	; 0
  96:	80 81       	ld	r24, Z
  98:	80 61       	ori	r24, 0x10	; 16
  9a:	80 83       	st	Z, r24

	//
	TCCR1A |= (1<<COM1B1);
  9c:	8c 91       	ld	r24, X
  9e:	80 62       	ori	r24, 0x20	; 32
  a0:	8c 93       	st	X, r24

	// set prescaler to 1
	TCCR1B |= (1<<CS10);
  a2:	80 81       	ld	r24, Z
  a4:	81 60       	ori	r24, 0x01	; 1
  a6:	80 83       	st	Z, r24

	// Set TOP to
	OCR1A = 2162;
  a8:	82 e7       	ldi	r24, 0x72	; 114
  aa:	98 e0       	ldi	r25, 0x08	; 8
  ac:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  b0:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	OCR1B = 1297;
  b4:	81 e1       	ldi	r24, 0x11	; 17
  b6:	95 e0       	ldi	r25, 0x05	; 5
  b8:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
  bc:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
	
	//TIMER 2
	TCCR2A |= (1<<WGM20);
  c0:	a0 eb       	ldi	r26, 0xB0	; 176
  c2:	b0 e0       	ldi	r27, 0x00	; 0
  c4:	8c 91       	ld	r24, X
  c6:	81 60       	ori	r24, 0x01	; 1
  c8:	8c 93       	st	X, r24
	TCCR2B |= (1<<WGM22);
  ca:	e1 eb       	ldi	r30, 0xB1	; 177
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	80 81       	ld	r24, Z
  d0:	88 60       	ori	r24, 0x08	; 8
  d2:	80 83       	st	Z, r24
	
	//
	TCCR2A |= (1<<COM2B1);
  d4:	8c 91       	ld	r24, X
  d6:	80 62       	ori	r24, 0x20	; 32
  d8:	8c 93       	st	X, r24
	
	
	//prescaler = 32
	TCCR2B |= (1<<CS21) | (1<<CS20);
  da:	80 81       	ld	r24, Z
  dc:	83 60       	ori	r24, 0x03	; 3
  de:	80 83       	st	Z, r24
	
	OCR2A = 68;
  e0:	84 e4       	ldi	r24, 0x44	; 68
  e2:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
	OCR2B = 41;
  e6:	89 e2       	ldi	r24, 0x29	; 41
  e8:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
  ec:	ff cf       	rjmp	.-2      	; 0xec <main+0x6c>

000000ee <_exit>:
  ee:	f8 94       	cli

000000f0 <__stop_program>:
  f0:	ff cf       	rjmp	.-2      	; 0xf0 <__stop_program>
