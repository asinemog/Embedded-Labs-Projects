
Lab 9 AC + IC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00001186  0000121a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001186  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000017  00800106  00800106  00001220  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001220  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001250  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  00001290  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000db9  00000000  00000000  00001300  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000083c  00000000  00000000  000020b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000588  00000000  00000000  000028f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000019c  00000000  00000000  00002e80  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000051f  00000000  00000000  0000301c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000561  00000000  00000000  0000353b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00003a9c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__ctors_end>
       4:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
       8:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
       c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      10:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      14:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      18:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      1c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      20:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      24:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      28:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__vector_10>
      2c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      30:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      34:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__vector_13>
      38:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      3c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      40:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      44:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      48:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      4c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      50:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      54:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      58:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      5c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      60:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      64:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 40       	sbci	r16, 0x00	; 0
      6a:	7a 10       	cpse	r7, r10
      6c:	f3 5a       	subi	r31, 0xA3	; 163
      6e:	00 a0       	ldd	r0, Z+32	; 0x20
      70:	72 4e       	sbci	r23, 0xE2	; 226
      72:	18 09       	sbc	r17, r8
      74:	00 10       	cpse	r0, r0
      76:	a5 d4       	rcall	.+2378   	; 0x9c2 <__divsf3_pse+0x5c>
      78:	e8 00       	.word	0x00e8	; ????
      7a:	00 e8       	ldi	r16, 0x80	; 128
      7c:	76 48       	sbci	r23, 0x86	; 134
      7e:	17 00       	.word	0x0017	; ????
      80:	00 e4       	ldi	r16, 0x40	; 64
      82:	0b 54       	subi	r16, 0x4B	; 75
      84:	02 00       	.word	0x0002	; ????
      86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
      88:	9a 3b       	cpi	r25, 0xBA	; 186
      8a:	00 00       	nop
      8c:	00 e1       	ldi	r16, 0x10	; 16
      8e:	f5 05       	cpc	r31, r5
      90:	00 00       	nop
      92:	80 96       	adiw	r24, 0x20	; 32
      94:	98 00       	.word	0x0098	; ????
      96:	00 00       	nop
      98:	40 42       	sbci	r20, 0x20	; 32
      9a:	0f 00       	.word	0x000f	; ????
      9c:	00 00       	nop
      9e:	a0 86       	std	Z+8, r10	; 0x08
      a0:	01 00       	.word	0x0001	; ????
      a2:	00 00       	nop
      a4:	10 27       	eor	r17, r16
      a6:	00 00       	nop
      a8:	00 00       	nop
      aa:	e8 03       	fmulsu	r22, r16
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	64 00       	.word	0x0064	; ????
      b2:	00 00       	nop
      b4:	00 00       	nop
      b6:	0a 00       	.word	0x000a	; ????
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	01 00       	.word	0x0001	; ????
      be:	00 00       	nop
      c0:	00 00       	nop
      c2:	2c 76       	andi	r18, 0x6C	; 108
      c4:	d8 88       	ldd	r13, Y+16	; 0x10
      c6:	dc 67       	ori	r29, 0x7C	; 124
      c8:	4f 08       	sbc	r4, r15
      ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
      cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
      ce:	ae 59       	subi	r26, 0x9E	; 158
      d0:	e1 b1       	in	r30, 0x01	; 1
      d2:	b7 96       	adiw	r30, 0x27	; 39
      d4:	e5 e3       	ldi	r30, 0x35	; 53
      d6:	e4 53       	subi	r30, 0x34	; 52
      d8:	c6 3a       	cpi	r28, 0xA6	; 166
      da:	e6 51       	subi	r30, 0x16	; 22
      dc:	99 76       	andi	r25, 0x69	; 105
      de:	96 e8       	ldi	r25, 0x86	; 134
      e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <main+0xf8>
      e2:	84 26       	eor	r8, r20
      e4:	eb 89       	ldd	r30, Y+19	; 0x13
      e6:	8c 9b       	sbis	0x11, 4	; 17
      e8:	62 ed       	ldi	r22, 0xD2	; 210
      ea:	40 7c       	andi	r20, 0xC0	; 192
      ec:	6f fc       	.word	0xfc6f	; ????
      ee:	ef bc       	out	0x2f, r14	; 47
      f0:	9c 9f       	mul	r25, r28
      f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
      f4:	ba a5       	ldd	r27, Y+42	; 0x2a
      f6:	6f a5       	ldd	r22, Y+47	; 0x2f
      f8:	f4 90       	lpm	r15, Z
      fa:	05 5a       	subi	r16, 0xA5	; 165
      fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
      fe:	5c 93       	st	X, r21
     100:	6b 6c       	ori	r22, 0xCB	; 203
     102:	f9 67       	ori	r31, 0x79	; 121
     104:	6d c1       	rjmp	.+730    	; 0x3e0 <initADC_SC+0x26>
     106:	1b fc       	.word	0xfc1b	; ????
     108:	e0 e4       	ldi	r30, 0x40	; 64
     10a:	0d 47       	sbci	r16, 0x7D	; 125
     10c:	fe f5       	brtc	.+126    	; 0x18c <.do_clear_bss_loop>
     10e:	20 e6       	ldi	r18, 0x60	; 96
     110:	b5 00       	.word	0x00b5	; ????
     112:	d0 ed       	ldi	r29, 0xD0	; 208
     114:	90 2e       	mov	r9, r16
     116:	03 00       	.word	0x0003	; ????
     118:	94 35       	cpi	r25, 0x54	; 84
     11a:	77 05       	cpc	r23, r7
     11c:	00 80       	ld	r0, Z
     11e:	84 1e       	adc	r8, r20
     120:	08 00       	.word	0x0008	; ????
     122:	00 20       	and	r0, r0
     124:	4e 0a       	sbc	r4, r30
     126:	00 00       	nop
     128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
     12a:	0c 33       	cpi	r16, 0x3C	; 60
     12c:	33 33       	cpi	r19, 0x33	; 51
     12e:	33 0f       	add	r19, r19
     130:	98 6e       	ori	r25, 0xE8	; 232
     132:	12 83       	std	Z+2, r17	; 0x02
     134:	11 41       	sbci	r17, 0x11	; 17
     136:	ef 8d       	ldd	r30, Y+31	; 0x1f
     138:	21 14       	cp	r2, r1
     13a:	89 3b       	cpi	r24, 0xB9	; 185
     13c:	e6 55       	subi	r30, 0x56	; 86
     13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
     140:	fe e6       	ldi	r31, 0x6E	; 110
     142:	db 18       	sub	r13, r11
     144:	d1 84       	ldd	r13, Z+9	; 0x09
     146:	4b 38       	cpi	r20, 0x8B	; 139
     148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
     14a:	7c 1d       	adc	r23, r12
     14c:	90 1d       	adc	r25, r0
     14e:	a4 bb       	out	0x14, r26	; 20
     150:	e4 24       	eor	r14, r4
     152:	20 32       	cpi	r18, 0x20	; 32
     154:	84 72       	andi	r24, 0x24	; 36
     156:	5e 22       	and	r5, r30
     158:	81 00       	.word	0x0081	; ????
     15a:	c9 f1       	breq	.+114    	; 0x1ce <__vector_13+0x2e>
     15c:	24 ec       	ldi	r18, 0xC4	; 196
     15e:	a1 e5       	ldi	r26, 0x51	; 81
     160:	3d 27       	eor	r19, r29

00000162 <__ctors_end>:
     162:	11 24       	eor	r1, r1
     164:	1f be       	out	0x3f, r1	; 63
     166:	cf ef       	ldi	r28, 0xFF	; 255
     168:	d8 e0       	ldi	r29, 0x08	; 8
     16a:	de bf       	out	0x3e, r29	; 62
     16c:	cd bf       	out	0x3d, r28	; 61

0000016e <__do_copy_data>:
     16e:	11 e0       	ldi	r17, 0x01	; 1
     170:	a0 e0       	ldi	r26, 0x00	; 0
     172:	b1 e0       	ldi	r27, 0x01	; 1
     174:	e6 e8       	ldi	r30, 0x86	; 134
     176:	f1 e1       	ldi	r31, 0x11	; 17
     178:	02 c0       	rjmp	.+4      	; 0x17e <__do_copy_data+0x10>
     17a:	05 90       	lpm	r0, Z+
     17c:	0d 92       	st	X+, r0
     17e:	a6 30       	cpi	r26, 0x06	; 6
     180:	b1 07       	cpc	r27, r17
     182:	d9 f7       	brne	.-10     	; 0x17a <__do_copy_data+0xc>

00000184 <__do_clear_bss>:
     184:	21 e0       	ldi	r18, 0x01	; 1
     186:	a6 e0       	ldi	r26, 0x06	; 6
     188:	b1 e0       	ldi	r27, 0x01	; 1
     18a:	01 c0       	rjmp	.+2      	; 0x18e <.do_clear_bss_start>

0000018c <.do_clear_bss_loop>:
     18c:	1d 92       	st	X+, r1

0000018e <.do_clear_bss_start>:
     18e:	ad 31       	cpi	r26, 0x1D	; 29
     190:	b2 07       	cpc	r27, r18
     192:	e1 f7       	brne	.-8      	; 0x18c <.do_clear_bss_loop>
     194:	0e 94 db 02 	call	0x5b6	; 0x5b6 <main>
     198:	0c 94 c1 08 	jmp	0x1182	; 0x1182 <_exit>

0000019c <__bad_interrupt>:
     19c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a0 <__vector_13>:
char ici_cnt = 0;
char testflag = 0;
volatile float tLow = 0.0;
volatile float tHigh = 0.0;

ISR(TIMER1_OVF_vect){
     1a0:	1f 92       	push	r1
     1a2:	0f 92       	push	r0
     1a4:	0f b6       	in	r0, 0x3f	; 63
     1a6:	0f 92       	push	r0
     1a8:	11 24       	eor	r1, r1
     1aa:	8f 93       	push	r24
     1ac:	9f 93       	push	r25
	cli();
     1ae:	f8 94       	cli
	numOv++;
     1b0:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <numOv>
     1b4:	90 91 1c 01 	lds	r25, 0x011C	; 0x80011c <numOv+0x1>
     1b8:	01 96       	adiw	r24, 0x01	; 1
     1ba:	90 93 1c 01 	sts	0x011C, r25	; 0x80011c <numOv+0x1>
     1be:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <numOv>
	sei();
     1c2:	78 94       	sei
}
     1c4:	9f 91       	pop	r25
     1c6:	8f 91       	pop	r24
     1c8:	0f 90       	pop	r0
     1ca:	0f be       	out	0x3f, r0	; 63
     1cc:	0f 90       	pop	r0
     1ce:	1f 90       	pop	r1
     1d0:	18 95       	reti

000001d2 <__vector_10>:

ISR(TIMER1_CAPT_vect){
     1d2:	1f 92       	push	r1
     1d4:	0f 92       	push	r0
     1d6:	0f b6       	in	r0, 0x3f	; 63
     1d8:	0f 92       	push	r0
     1da:	11 24       	eor	r1, r1
     1dc:	cf 92       	push	r12
     1de:	df 92       	push	r13
     1e0:	ef 92       	push	r14
     1e2:	ff 92       	push	r15
     1e4:	2f 93       	push	r18
     1e6:	3f 93       	push	r19
     1e8:	4f 93       	push	r20
     1ea:	5f 93       	push	r21
     1ec:	6f 93       	push	r22
     1ee:	7f 93       	push	r23
     1f0:	8f 93       	push	r24
     1f2:	9f 93       	push	r25
     1f4:	af 93       	push	r26
     1f6:	bf 93       	push	r27
     1f8:	ef 93       	push	r30
     1fa:	ff 93       	push	r31
	//testflag++;
	if(flag_rising){
     1fc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     200:	88 23       	and	r24, r24
     202:	09 f4       	brne	.+2      	; 0x206 <__vector_10+0x34>
     204:	5a c0       	rjmp	.+180    	; 0x2ba <__vector_10+0xe8>
		
		tcnt1_new = ICR1;
     206:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
     20a:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
     20e:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <tcnt1_new+0x1>
     212:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <tcnt1_new>
		bitClear(TCCR1B, ICES1);
     216:	e1 e8       	ldi	r30, 0x81	; 129
     218:	f0 e0       	ldi	r31, 0x00	; 0
     21a:	80 81       	ld	r24, Z
     21c:	8f 7b       	andi	r24, 0xBF	; 191
     21e:	80 83       	st	Z, r24
		
		t1 =  (((float) tcnt1_new + 1.0) + ((float)(numOv))*65536.0) / (float) 16e6 * 1000.0;
     220:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <tcnt1_new>
     224:	70 91 19 01 	lds	r23, 0x0119	; 0x800119 <tcnt1_new+0x1>
     228:	80 e0       	ldi	r24, 0x00	; 0
     22a:	90 e0       	ldi	r25, 0x00	; 0
     22c:	0e 94 3d 05 	call	0xa7a	; 0xa7a <__floatunsisf>
     230:	20 e0       	ldi	r18, 0x00	; 0
     232:	30 e0       	ldi	r19, 0x00	; 0
     234:	40 e8       	ldi	r20, 0x80	; 128
     236:	5f e3       	ldi	r21, 0x3F	; 63
     238:	0e 94 30 04 	call	0x860	; 0x860 <__addsf3>
     23c:	6b 01       	movw	r12, r22
     23e:	7c 01       	movw	r14, r24
     240:	60 91 1b 01 	lds	r22, 0x011B	; 0x80011b <numOv>
     244:	70 91 1c 01 	lds	r23, 0x011C	; 0x80011c <numOv+0x1>
     248:	80 e0       	ldi	r24, 0x00	; 0
     24a:	90 e0       	ldi	r25, 0x00	; 0
     24c:	0e 94 3d 05 	call	0xa7a	; 0xa7a <__floatunsisf>
     250:	20 e0       	ldi	r18, 0x00	; 0
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e8       	ldi	r20, 0x80	; 128
     256:	57 e4       	ldi	r21, 0x47	; 71
     258:	0e 94 cb 05 	call	0xb96	; 0xb96 <__mulsf3>
     25c:	9b 01       	movw	r18, r22
     25e:	ac 01       	movw	r20, r24
     260:	c7 01       	movw	r24, r14
     262:	b6 01       	movw	r22, r12
     264:	0e 94 30 04 	call	0x860	; 0x860 <__addsf3>
     268:	20 e0       	ldi	r18, 0x00	; 0
     26a:	34 e2       	ldi	r19, 0x24	; 36
     26c:	44 e7       	ldi	r20, 0x74	; 116
     26e:	5b e4       	ldi	r21, 0x4B	; 75
     270:	0e 94 9c 04 	call	0x938	; 0x938 <__divsf3>
     274:	20 e0       	ldi	r18, 0x00	; 0
     276:	30 e0       	ldi	r19, 0x00	; 0
     278:	4a e7       	ldi	r20, 0x7A	; 122
     27a:	54 e4       	ldi	r21, 0x44	; 68
     27c:	0e 94 cb 05 	call	0xb96	; 0xb96 <__mulsf3>
     280:	60 93 14 01 	sts	0x0114, r22	; 0x800114 <t1>
     284:	70 93 15 01 	sts	0x0115, r23	; 0x800115 <t1+0x1>
     288:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <t1+0x2>
     28c:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <t1+0x3>
		
		tLow = t1-t2;
     290:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <t2>
     294:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <t2+0x1>
     298:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <t2+0x2>
     29c:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <t2+0x3>
     2a0:	0e 94 2f 04 	call	0x85e	; 0x85e <__subsf3>
     2a4:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <tLow>
     2a8:	70 93 0b 01 	sts	0x010B, r23	; 0x80010b <tLow+0x1>
     2ac:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <tLow+0x2>
     2b0:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <tLow+0x3>
		
		flag_rising = 0;
     2b4:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
     2b8:	6b c0       	rjmp	.+214    	; 0x390 <__vector_10+0x1be>
		
		
	} else{
		
		tcnt1_new = ICR1;
     2ba:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
     2be:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
     2c2:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <tcnt1_new+0x1>
     2c6:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <tcnt1_new>
		bitSet(TCCR1B, ICES1);
     2ca:	e1 e8       	ldi	r30, 0x81	; 129
     2cc:	f0 e0       	ldi	r31, 0x00	; 0
     2ce:	80 81       	ld	r24, Z
     2d0:	80 64       	ori	r24, 0x40	; 64
     2d2:	80 83       	st	Z, r24
		
		t2 = (((float) tcnt1_new + 1.0) + ((float)(numOv))*65536.0) / (float) 16e6 * 1000.0;
     2d4:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <tcnt1_new>
     2d8:	70 91 19 01 	lds	r23, 0x0119	; 0x800119 <tcnt1_new+0x1>
     2dc:	80 e0       	ldi	r24, 0x00	; 0
     2de:	90 e0       	ldi	r25, 0x00	; 0
     2e0:	0e 94 3d 05 	call	0xa7a	; 0xa7a <__floatunsisf>
     2e4:	20 e0       	ldi	r18, 0x00	; 0
     2e6:	30 e0       	ldi	r19, 0x00	; 0
     2e8:	40 e8       	ldi	r20, 0x80	; 128
     2ea:	5f e3       	ldi	r21, 0x3F	; 63
     2ec:	0e 94 30 04 	call	0x860	; 0x860 <__addsf3>
     2f0:	6b 01       	movw	r12, r22
     2f2:	7c 01       	movw	r14, r24
     2f4:	60 91 1b 01 	lds	r22, 0x011B	; 0x80011b <numOv>
     2f8:	70 91 1c 01 	lds	r23, 0x011C	; 0x80011c <numOv+0x1>
     2fc:	80 e0       	ldi	r24, 0x00	; 0
     2fe:	90 e0       	ldi	r25, 0x00	; 0
     300:	0e 94 3d 05 	call	0xa7a	; 0xa7a <__floatunsisf>
     304:	20 e0       	ldi	r18, 0x00	; 0
     306:	30 e0       	ldi	r19, 0x00	; 0
     308:	40 e8       	ldi	r20, 0x80	; 128
     30a:	57 e4       	ldi	r21, 0x47	; 71
     30c:	0e 94 cb 05 	call	0xb96	; 0xb96 <__mulsf3>
     310:	9b 01       	movw	r18, r22
     312:	ac 01       	movw	r20, r24
     314:	c7 01       	movw	r24, r14
     316:	b6 01       	movw	r22, r12
     318:	0e 94 30 04 	call	0x860	; 0x860 <__addsf3>
     31c:	20 e0       	ldi	r18, 0x00	; 0
     31e:	34 e2       	ldi	r19, 0x24	; 36
     320:	44 e7       	ldi	r20, 0x74	; 116
     322:	5b e4       	ldi	r21, 0x4B	; 75
     324:	0e 94 9c 04 	call	0x938	; 0x938 <__divsf3>
     328:	20 e0       	ldi	r18, 0x00	; 0
     32a:	30 e0       	ldi	r19, 0x00	; 0
     32c:	4a e7       	ldi	r20, 0x7A	; 122
     32e:	54 e4       	ldi	r21, 0x44	; 68
     330:	0e 94 cb 05 	call	0xb96	; 0xb96 <__mulsf3>
     334:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <t2>
     338:	70 93 11 01 	sts	0x0111, r23	; 0x800111 <t2+0x1>
     33c:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <t2+0x2>
     340:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <t2+0x3>
		tHigh = - t1 + t2;
     344:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <t1>
     348:	30 91 15 01 	lds	r19, 0x0115	; 0x800115 <t1+0x1>
     34c:	40 91 16 01 	lds	r20, 0x0116	; 0x800116 <t1+0x2>
     350:	50 91 17 01 	lds	r21, 0x0117	; 0x800117 <t1+0x3>
     354:	0e 94 2f 04 	call	0x85e	; 0x85e <__subsf3>
     358:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <__data_end>
     35c:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <__data_end+0x1>
     360:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__data_end+0x2>
     364:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <__data_end+0x3>
		
		flag_rising = 1;
     368:	81 e0       	ldi	r24, 0x01	; 1
     36a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		
		ici_cnt++;
     36e:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <ici_cnt>
     372:	8f 5f       	subi	r24, 0xFF	; 255
     374:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <ici_cnt>
		
		if(ici_cnt == 3){
     378:	83 30       	cpi	r24, 0x03	; 3
     37a:	51 f4       	brne	.+20     	; 0x390 <__vector_10+0x1be>
			
			flag_ready = 1;
     37c:	81 e0       	ldi	r24, 0x01	; 1
     37e:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <flag_ready>
			ici_cnt = 0;
     382:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <ici_cnt>
			bitClear(TIMSK1, ICIE1);
     386:	ef e6       	ldi	r30, 0x6F	; 111
     388:	f0 e0       	ldi	r31, 0x00	; 0
     38a:	80 81       	ld	r24, Z
     38c:	8f 7d       	andi	r24, 0xDF	; 223
     38e:	80 83       	st	Z, r24
		
		
	}
	
	
}
     390:	ff 91       	pop	r31
     392:	ef 91       	pop	r30
     394:	bf 91       	pop	r27
     396:	af 91       	pop	r26
     398:	9f 91       	pop	r25
     39a:	8f 91       	pop	r24
     39c:	7f 91       	pop	r23
     39e:	6f 91       	pop	r22
     3a0:	5f 91       	pop	r21
     3a2:	4f 91       	pop	r20
     3a4:	3f 91       	pop	r19
     3a6:	2f 91       	pop	r18
     3a8:	ff 90       	pop	r15
     3aa:	ef 90       	pop	r14
     3ac:	df 90       	pop	r13
     3ae:	cf 90       	pop	r12
     3b0:	0f 90       	pop	r0
     3b2:	0f be       	out	0x3f, r0	; 63
     3b4:	0f 90       	pop	r0
     3b6:	1f 90       	pop	r1
     3b8:	18 95       	reti

000003ba <initADC_SC>:

void initADC_SC(void){
	// REF = AVCC
	bitSet(ADMUX, REFS0);
     3ba:	ec e7       	ldi	r30, 0x7C	; 124
     3bc:	f0 e0       	ldi	r31, 0x00	; 0
     3be:	80 81       	ld	r24, Z
     3c0:	80 64       	ori	r24, 0x40	; 64
     3c2:	80 83       	st	Z, r24
	//Prescaler to 128 (50-200KHz range required)
	bitSet(ADCSRA, ADPS0);
     3c4:	ea e7       	ldi	r30, 0x7A	; 122
     3c6:	f0 e0       	ldi	r31, 0x00	; 0
     3c8:	80 81       	ld	r24, Z
     3ca:	81 60       	ori	r24, 0x01	; 1
     3cc:	80 83       	st	Z, r24
	bitSet(ADCSRA, ADPS1);
     3ce:	80 81       	ld	r24, Z
     3d0:	82 60       	ori	r24, 0x02	; 2
     3d2:	80 83       	st	Z, r24
	bitSet(ADCSRA, ADPS2);
     3d4:	80 81       	ld	r24, Z
     3d6:	84 60       	ori	r24, 0x04	; 4
     3d8:	80 83       	st	Z, r24
	// enable by default
	bitSet(ADCSRA, ADEN);
     3da:	80 81       	ld	r24, Z
     3dc:	80 68       	ori	r24, 0x80	; 128
     3de:	80 83       	st	Z, r24
     3e0:	08 95       	ret

000003e2 <initTC2_PWM>:
	
}

void initTC2_PWM(void){
	// Fast PWM TOP Mode
	bitSet(TCCR2A, WGM20);
     3e2:	a0 eb       	ldi	r26, 0xB0	; 176
     3e4:	b0 e0       	ldi	r27, 0x00	; 0
     3e6:	8c 91       	ld	r24, X
     3e8:	81 60       	ori	r24, 0x01	; 1
     3ea:	8c 93       	st	X, r24
	bitSet(TCCR2A, WGM21);
     3ec:	8c 91       	ld	r24, X
     3ee:	82 60       	ori	r24, 0x02	; 2
     3f0:	8c 93       	st	X, r24
	bitSet(TCCR2B, WGM22);
     3f2:	e1 eb       	ldi	r30, 0xB1	; 177
     3f4:	f0 e0       	ldi	r31, 0x00	; 0
     3f6:	80 81       	ld	r24, Z
     3f8:	88 60       	ori	r24, 0x08	; 8
     3fa:	80 83       	st	Z, r24
	
	// clear OC2B on compare match, set at BOT
	bitClear(TCCR2A, COM2B0);
     3fc:	8c 91       	ld	r24, X
     3fe:	8f 7e       	andi	r24, 0xEF	; 239
     400:	8c 93       	st	X, r24
	bitSet(TCCR2A, COM2B1);
     402:	8c 91       	ld	r24, X
     404:	80 62       	ori	r24, 0x20	; 32
     406:	8c 93       	st	X, r24
	// 61Hz - 15.625 KHz
	
	
	
	// default TOP = MAX
	OCR2A = 100 - 1;
     408:	83 e6       	ldi	r24, 0x63	; 99
     40a:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
	// default duty cycle
	OCR2B = 100*0.9 - 1;
     40e:	89 e5       	ldi	r24, 0x59	; 89
     410:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
	
	// Prescaler to 1024
	bitSet(TCCR2B, CS20);
     414:	80 81       	ld	r24, Z
     416:	81 60       	ori	r24, 0x01	; 1
     418:	80 83       	st	Z, r24
	bitSet(TCCR2B, CS21);
     41a:	80 81       	ld	r24, Z
     41c:	82 60       	ori	r24, 0x02	; 2
     41e:	80 83       	st	Z, r24
	bitSet(TCCR2B, CS22);
     420:	80 81       	ld	r24, Z
     422:	84 60       	ori	r24, 0x04	; 4
     424:	80 83       	st	Z, r24
     426:	08 95       	ret

00000428 <initTC1_IC>:
}

void initTC1_IC(void){
	
	// set normal mode
	bitClear(TCCR1A, WGM10);
     428:	e0 e8       	ldi	r30, 0x80	; 128
     42a:	f0 e0       	ldi	r31, 0x00	; 0
     42c:	80 81       	ld	r24, Z
     42e:	8e 7f       	andi	r24, 0xFE	; 254
     430:	80 83       	st	Z, r24
	bitClear(TCCR1A, WGM11);
     432:	80 81       	ld	r24, Z
     434:	8d 7f       	andi	r24, 0xFD	; 253
     436:	80 83       	st	Z, r24
	bitClear(TCCR1B, WGM12);
     438:	e1 e8       	ldi	r30, 0x81	; 129
     43a:	f0 e0       	ldi	r31, 0x00	; 0
     43c:	80 81       	ld	r24, Z
     43e:	87 7f       	andi	r24, 0xF7	; 247
     440:	80 83       	st	Z, r24
	bitClear(TCCR1B, WGM13);
     442:	80 81       	ld	r24, Z
     444:	8f 7e       	andi	r24, 0xEF	; 239
     446:	80 83       	st	Z, r24
	
	
	// enable overflow interrupts
	bitSet(TIMSK1, TOIE1);
     448:	af e6       	ldi	r26, 0x6F	; 111
     44a:	b0 e0       	ldi	r27, 0x00	; 0
     44c:	8c 91       	ld	r24, X
     44e:	81 60       	ori	r24, 0x01	; 1
     450:	8c 93       	st	X, r24
	
	// enable input capture based on AC 
	bitSet(ACSR, ACIC);
     452:	80 b7       	in	r24, 0x30	; 48
     454:	84 60       	ori	r24, 0x04	; 4
     456:	80 bf       	out	0x30, r24	; 48
	
	// enable input capture interrupt
	bitSet(TIMSK1, ICIE1);
     458:	8c 91       	ld	r24, X
     45a:	80 62       	ori	r24, 0x20	; 32
     45c:	8c 93       	st	X, r24
	
	//start with falling edge detect
	bitClear(TCCR1B, ICES1);
     45e:	80 81       	ld	r24, Z
     460:	8f 7b       	andi	r24, 0xBF	; 191
     462:	80 83       	st	Z, r24
	
	
	// prescaler = 1
	bitSet(TCCR1B, CS10);
     464:	80 81       	ld	r24, Z
     466:	81 60       	ori	r24, 0x01	; 1
     468:	80 83       	st	Z, r24
     46a:	08 95       	ret

0000046c <myMap>:
	

	
}

float myMap(float x, float x1, float x2, float y1, float y2){
     46c:	4f 92       	push	r4
     46e:	5f 92       	push	r5
     470:	6f 92       	push	r6
     472:	7f 92       	push	r7
     474:	af 92       	push	r10
     476:	bf 92       	push	r11
     478:	cf 92       	push	r12
     47a:	df 92       	push	r13
     47c:	ef 92       	push	r14
     47e:	ff 92       	push	r15
     480:	0f 93       	push	r16
     482:	1f 93       	push	r17
     484:	cf 93       	push	r28
     486:	df 93       	push	r29
     488:	cd b7       	in	r28, 0x3d	; 61
     48a:	de b7       	in	r29, 0x3e	; 62
     48c:	2c 97       	sbiw	r28, 0x0c	; 12
     48e:	0f b6       	in	r0, 0x3f	; 63
     490:	f8 94       	cli
     492:	de bf       	out	0x3e, r29	; 62
     494:	0f be       	out	0x3f, r0	; 63
     496:	cd bf       	out	0x3d, r28	; 61
     498:	6d 83       	std	Y+5, r22	; 0x05
     49a:	7e 83       	std	Y+6, r23	; 0x06
     49c:	8f 83       	std	Y+7, r24	; 0x07
     49e:	98 87       	std	Y+8, r25	; 0x08
     4a0:	29 01       	movw	r4, r18
     4a2:	3a 01       	movw	r6, r20
     4a4:	e9 82       	std	Y+1, r14	; 0x01
     4a6:	fa 82       	std	Y+2, r15	; 0x02
     4a8:	0b 83       	std	Y+3, r16	; 0x03
     4aa:	1c 83       	std	Y+4, r17	; 0x04
	
	return (y2-y1)/(x2-x1)*(x-x1) + y1;
     4ac:	a6 01       	movw	r20, r12
     4ae:	95 01       	movw	r18, r10
     4b0:	6d 8d       	ldd	r22, Y+29	; 0x1d
     4b2:	7e 8d       	ldd	r23, Y+30	; 0x1e
     4b4:	8f 8d       	ldd	r24, Y+31	; 0x1f
     4b6:	98 a1       	ldd	r25, Y+32	; 0x20
     4b8:	0e 94 2f 04 	call	0x85e	; 0x85e <__subsf3>
     4bc:	69 87       	std	Y+9, r22	; 0x09
     4be:	7a 87       	std	Y+10, r23	; 0x0a
     4c0:	8b 87       	std	Y+11, r24	; 0x0b
     4c2:	9c 87       	std	Y+12, r25	; 0x0c
     4c4:	a3 01       	movw	r20, r6
     4c6:	92 01       	movw	r18, r4
     4c8:	c8 01       	movw	r24, r16
     4ca:	b7 01       	movw	r22, r14
     4cc:	0e 94 2f 04 	call	0x85e	; 0x85e <__subsf3>
     4d0:	9b 01       	movw	r18, r22
     4d2:	ac 01       	movw	r20, r24
     4d4:	69 85       	ldd	r22, Y+9	; 0x09
     4d6:	7a 85       	ldd	r23, Y+10	; 0x0a
     4d8:	8b 85       	ldd	r24, Y+11	; 0x0b
     4da:	9c 85       	ldd	r25, Y+12	; 0x0c
     4dc:	0e 94 9c 04 	call	0x938	; 0x938 <__divsf3>
     4e0:	69 83       	std	Y+1, r22	; 0x01
     4e2:	7a 83       	std	Y+2, r23	; 0x02
     4e4:	8b 83       	std	Y+3, r24	; 0x03
     4e6:	9c 83       	std	Y+4, r25	; 0x04
     4e8:	a3 01       	movw	r20, r6
     4ea:	92 01       	movw	r18, r4
     4ec:	6d 81       	ldd	r22, Y+5	; 0x05
     4ee:	7e 81       	ldd	r23, Y+6	; 0x06
     4f0:	8f 81       	ldd	r24, Y+7	; 0x07
     4f2:	98 85       	ldd	r25, Y+8	; 0x08
     4f4:	0e 94 2f 04 	call	0x85e	; 0x85e <__subsf3>
     4f8:	9b 01       	movw	r18, r22
     4fa:	ac 01       	movw	r20, r24
     4fc:	69 81       	ldd	r22, Y+1	; 0x01
     4fe:	7a 81       	ldd	r23, Y+2	; 0x02
     500:	8b 81       	ldd	r24, Y+3	; 0x03
     502:	9c 81       	ldd	r25, Y+4	; 0x04
     504:	0e 94 cb 05 	call	0xb96	; 0xb96 <__mulsf3>
     508:	9b 01       	movw	r18, r22
     50a:	ac 01       	movw	r20, r24
     50c:	c6 01       	movw	r24, r12
     50e:	b5 01       	movw	r22, r10
     510:	0e 94 30 04 	call	0x860	; 0x860 <__addsf3>
	
}
     514:	2c 96       	adiw	r28, 0x0c	; 12
     516:	0f b6       	in	r0, 0x3f	; 63
     518:	f8 94       	cli
     51a:	de bf       	out	0x3e, r29	; 62
     51c:	0f be       	out	0x3f, r0	; 63
     51e:	cd bf       	out	0x3d, r28	; 61
     520:	df 91       	pop	r29
     522:	cf 91       	pop	r28
     524:	1f 91       	pop	r17
     526:	0f 91       	pop	r16
     528:	ff 90       	pop	r15
     52a:	ef 90       	pop	r14
     52c:	df 90       	pop	r13
     52e:	cf 90       	pop	r12
     530:	bf 90       	pop	r11
     532:	af 90       	pop	r10
     534:	7f 90       	pop	r7
     536:	6f 90       	pop	r6
     538:	5f 90       	pop	r5
     53a:	4f 90       	pop	r4
     53c:	08 95       	ret

0000053e <read_ADC>:
	
	// check valid channel value

	
		// set channel
		ADMUX &= 0xF0;
     53e:	ec e7       	ldi	r30, 0x7C	; 124
     540:	f0 e0       	ldi	r31, 0x00	; 0
     542:	90 81       	ld	r25, Z
     544:	90 7f       	andi	r25, 0xF0	; 240
     546:	90 83       	st	Z, r25
		ADMUX |= channel;
     548:	90 81       	ld	r25, Z
     54a:	89 2b       	or	r24, r25
     54c:	80 83       	st	Z, r24
		bitSet(ADMUX, REFS0);
     54e:	80 81       	ld	r24, Z
     550:	80 64       	ori	r24, 0x40	; 64
     552:	80 83       	st	Z, r24
		// start a conversion
		bitSet(ADCSRA, ADSC);
     554:	ea e7       	ldi	r30, 0x7A	; 122
     556:	f0 e0       	ldi	r31, 0x00	; 0
     558:	80 81       	ld	r24, Z
     55a:	80 64       	ori	r24, 0x40	; 64
     55c:	80 83       	st	Z, r24
		// poll ADSC bit for conversion completion
		while(ADCSRA & (1<<ADSC));
     55e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     562:	86 fd       	sbrc	r24, 6
     564:	fc cf       	rjmp	.-8      	; 0x55e <read_ADC+0x20>
		int result = ADC;
     566:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     56a:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
		
		return result;
	
}
     56e:	08 95       	ret

00000570 <initUSART>:
    }
}

void initUSART(int ubbr){
	
	UBRR0 = ubbr;
     570:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     574:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	
	UCSR0B |= (1<<TXEN0) ;
     578:	e1 ec       	ldi	r30, 0xC1	; 193
     57a:	f0 e0       	ldi	r31, 0x00	; 0
     57c:	80 81       	ld	r24, Z
     57e:	88 60       	ori	r24, 0x08	; 8
     580:	80 83       	st	Z, r24
	
	UCSR0C |= (1<<UCSZ00) | (1<<UCSZ01);
     582:	e2 ec       	ldi	r30, 0xC2	; 194
     584:	f0 e0       	ldi	r31, 0x00	; 0
     586:	80 81       	ld	r24, Z
     588:	86 60       	ori	r24, 0x06	; 6
     58a:	80 83       	st	Z, r24
     58c:	08 95       	ret

0000058e <transmitByteUSART>:
		
	}
}

void transmitByteUSART(char x){
	while(!bitCheck(UCSR0A, UDRE0));
     58e:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     592:	95 ff       	sbrs	r25, 5
     594:	fc cf       	rjmp	.-8      	; 0x58e <transmitByteUSART>
	UDR0 = x;
     596:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     59a:	08 95       	ret

0000059c <transmitStringUSART>:
	UCSR0C |= (1<<UCSZ00) | (1<<UCSZ01);
	
	
}

void transmitStringUSART(char* x){
     59c:	cf 93       	push	r28
     59e:	df 93       	push	r29
     5a0:	ec 01       	movw	r28, r24
	
	
	// loop while current char isnt stop char and end of string hasnt been reached
	while(*x != '\0'){
     5a2:	03 c0       	rjmp	.+6      	; 0x5aa <transmitStringUSART+0xe>
		transmitByteUSART(*x);
     5a4:	0e 94 c7 02 	call	0x58e	; 0x58e <transmitByteUSART>
		x++;
     5a8:	21 96       	adiw	r28, 0x01	; 1

void transmitStringUSART(char* x){
	
	
	// loop while current char isnt stop char and end of string hasnt been reached
	while(*x != '\0'){
     5aa:	88 81       	ld	r24, Y
     5ac:	81 11       	cpse	r24, r1
     5ae:	fa cf       	rjmp	.-12     	; 0x5a4 <transmitStringUSART+0x8>
		transmitByteUSART(*x);
		x++;
		
	}
}
     5b0:	df 91       	pop	r29
     5b2:	cf 91       	pop	r28
     5b4:	08 95       	ret

000005b6 <main>:




int main(void)
{
     5b6:	cf 93       	push	r28
     5b8:	df 93       	push	r29
     5ba:	cd b7       	in	r28, 0x3d	; 61
     5bc:	de b7       	in	r29, 0x3e	; 62
     5be:	c3 55       	subi	r28, 0x53	; 83
     5c0:	d1 09       	sbc	r29, r1
     5c2:	0f b6       	in	r0, 0x3f	; 63
     5c4:	f8 94       	cli
     5c6:	de bf       	out	0x3e, r29	; 62
     5c8:	0f be       	out	0x3f, r0	; 63
     5ca:	cd bf       	out	0x3d, r28	; 61
   // DDRD = 0x00;
	
	//DDRC = 0x00;
	initADC_SC();
     5cc:	0e 94 dd 01 	call	0x3ba	; 0x3ba <initADC_SC>
	initTC2_PWM();
     5d0:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <initTC2_PWM>
	initUSART(MY_UBBR);
     5d4:	87 e6       	ldi	r24, 0x67	; 103
     5d6:	90 e0       	ldi	r25, 0x00	; 0
     5d8:	0e 94 b8 02 	call	0x570	; 0x570 <initUSART>
	initTC1_IC();
     5dc:	0e 94 14 02 	call	0x428	; 0x428 <initTC1_IC>
	
	sei();
     5e0:	78 94       	sei
	bitSet(DDRD, PIND3);
     5e2:	8a b1       	in	r24, 0x0a	; 10
     5e4:	88 60       	ori	r24, 0x08	; 8
     5e6:	8a b9       	out	0x0a, r24	; 10
	bitClear(DDRD, PIND6);
     5e8:	8a b1       	in	r24, 0x0a	; 10
     5ea:	8f 7b       	andi	r24, 0xBF	; 191
     5ec:	8a b9       	out	0x0a, r24	; 10
	bitClear(DDRD, PIND7);
     5ee:	8a b1       	in	r24, 0x0a	; 10
     5f0:	8f 77       	andi	r24, 0x7F	; 127
     5f2:	8a b9       	out	0x0a, r24	; 10
	float ic_freq;
	float ic_duty;
	
    while (1) 
    {
		duty_reading = read_ADC(0);
     5f4:	80 e0       	ldi	r24, 0x00	; 0
     5f6:	0e 94 9f 02 	call	0x53e	; 0x53e <read_ADC>
     5fa:	bc 01       	movw	r22, r24
     5fc:	99 0f       	add	r25, r25
     5fe:	88 0b       	sbc	r24, r24
     600:	99 0b       	sbc	r25, r25
     602:	0e 94 3f 05 	call	0xa7e	; 0xa7e <__floatsisf>
     606:	60 96       	adiw	r28, 0x10	; 16
     608:	6c af       	std	Y+60, r22	; 0x3c
     60a:	7d af       	std	Y+61, r23	; 0x3d
     60c:	8e af       	std	Y+62, r24	; 0x3e
     60e:	9f af       	std	Y+63, r25	; 0x3f
     610:	60 97       	sbiw	r28, 0x10	; 16
		top_reading = read_ADC(1);
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	0e 94 9f 02 	call	0x53e	; 0x53e <read_ADC>
     618:	bc 01       	movw	r22, r24
     61a:	99 0f       	add	r25, r25
     61c:	88 0b       	sbc	r24, r24
     61e:	99 0b       	sbc	r25, r25
     620:	0e 94 3f 05 	call	0xa7e	; 0xa7e <__floatsisf>
		
	
		//ocr2a = (char) (myMap(top_reading, 0, 1023, 1, 256));
		ocr2a = myMap(top_reading, 0, 1023, 15 , 155);
     624:	23 e4       	ldi	r18, 0x43	; 67
     626:	2f 93       	push	r18
     628:	2b e1       	ldi	r18, 0x1B	; 27
     62a:	2f 93       	push	r18
     62c:	1f 92       	push	r1
     62e:	1f 92       	push	r1
     630:	0f 2e       	mov	r0, r31
     632:	a1 2c       	mov	r10, r1
     634:	b1 2c       	mov	r11, r1
     636:	f0 e7       	ldi	r31, 0x70	; 112
     638:	cf 2e       	mov	r12, r31
     63a:	f1 e4       	ldi	r31, 0x41	; 65
     63c:	df 2e       	mov	r13, r31
     63e:	f0 2d       	mov	r31, r0
     640:	e1 2c       	mov	r14, r1
     642:	10 ec       	ldi	r17, 0xC0	; 192
     644:	f1 2e       	mov	r15, r17
     646:	0f e7       	ldi	r16, 0x7F	; 127
     648:	14 e4       	ldi	r17, 0x44	; 68
     64a:	20 e0       	ldi	r18, 0x00	; 0
     64c:	30 e0       	ldi	r19, 0x00	; 0
     64e:	a9 01       	movw	r20, r18
     650:	0e 94 36 02 	call	0x46c	; 0x46c <myMap>
     654:	0f 90       	pop	r0
     656:	0f 90       	pop	r0
     658:	0f 90       	pop	r0
     65a:	0f 90       	pop	r0
     65c:	2b 01       	movw	r4, r22
     65e:	3c 01       	movw	r6, r24
		float temp = myMap(duty_reading, 0, 1023, 0, 1);
     660:	8f e3       	ldi	r24, 0x3F	; 63
     662:	8f 93       	push	r24
     664:	80 e8       	ldi	r24, 0x80	; 128
     666:	8f 93       	push	r24
     668:	1f 92       	push	r1
     66a:	1f 92       	push	r1
     66c:	a1 2c       	mov	r10, r1
     66e:	b1 2c       	mov	r11, r1
     670:	65 01       	movw	r12, r10
     672:	a6 01       	movw	r20, r12
     674:	95 01       	movw	r18, r10
     676:	60 96       	adiw	r28, 0x10	; 16
     678:	6c ad       	ldd	r22, Y+60	; 0x3c
     67a:	7d ad       	ldd	r23, Y+61	; 0x3d
     67c:	8e ad       	ldd	r24, Y+62	; 0x3e
     67e:	9f ad       	ldd	r25, Y+63	; 0x3f
     680:	60 97       	sbiw	r28, 0x10	; 16
     682:	0e 94 36 02 	call	0x46c	; 0x46c <myMap>
     686:	0f 90       	pop	r0
     688:	0f 90       	pop	r0
     68a:	0f 90       	pop	r0
     68c:	0f 90       	pop	r0
     68e:	6b 01       	movw	r12, r22
     690:	7c 01       	movw	r14, r24
		ocr2b = ocr2a * temp;
     692:	9b 01       	movw	r18, r22
     694:	ac 01       	movw	r20, r24
     696:	c3 01       	movw	r24, r6
     698:	b2 01       	movw	r22, r4
     69a:	0e 94 cb 05 	call	0xb96	; 0xb96 <__mulsf3>
     69e:	4b 01       	movw	r8, r22
     6a0:	5c 01       	movw	r10, r24
		
		
		char dutytemp[15];
		dtostrf(temp, 10, 3, dutytemp);
     6a2:	8e 01       	movw	r16, r28
     6a4:	03 5c       	subi	r16, 0xC3	; 195
     6a6:	1f 4f       	sbci	r17, 0xFF	; 255
     6a8:	23 e0       	ldi	r18, 0x03	; 3
     6aa:	4a e0       	ldi	r20, 0x0A	; 10
     6ac:	c7 01       	movw	r24, r14
     6ae:	b6 01       	movw	r22, r12
     6b0:	0e 94 38 06 	call	0xc70	; 0xc70 <dtostrf>
		dutytemp[10] = "\0";
     6b4:	81 e0       	ldi	r24, 0x01	; 1
     6b6:	91 e0       	ldi	r25, 0x01	; 1
     6b8:	28 96       	adiw	r28, 0x08	; 8
     6ba:	8f af       	std	Y+63, r24	; 0x3f
     6bc:	28 97       	sbiw	r28, 0x08	; 8
		//transmitStringUSART(dutytemp);
		//transmitStringUSART("\r\n");
		
		// FPWM = FCPU/(P*(TOP+1))
	OCR2A = ocr2a;
     6be:	c3 01       	movw	r24, r6
     6c0:	b2 01       	movw	r22, r4
     6c2:	0e 94 0e 05 	call	0xa1c	; 0xa1c <__fixunssfsi>
     6c6:	60 93 b3 00 	sts	0x00B3, r22	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
	OCR2B = ocr2b;
     6ca:	c5 01       	movw	r24, r10
     6cc:	b4 01       	movw	r22, r8
     6ce:	0e 94 0e 05 	call	0xa1c	; 0xa1c <__fixunssfsi>
     6d2:	60 93 b4 00 	sts	0x00B4, r22	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
		
	if(flag_ready){
     6d6:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <flag_ready>
     6da:	88 23       	and	r24, r24
     6dc:	09 f4       	brne	.+2      	; 0x6e0 <main+0x12a>
     6de:	a6 c0       	rjmp	.+332    	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
		
		ic_freq = 1.0/(tHigh + tLow);
     6e0:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <__data_end>
     6e4:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <__data_end+0x1>
     6e8:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__data_end+0x2>
     6ec:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <__data_end+0x3>
     6f0:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <tLow>
     6f4:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <tLow+0x1>
     6f8:	40 91 0c 01 	lds	r20, 0x010C	; 0x80010c <tLow+0x2>
     6fc:	50 91 0d 01 	lds	r21, 0x010D	; 0x80010d <tLow+0x3>
     700:	0e 94 30 04 	call	0x860	; 0x860 <__addsf3>
     704:	9b 01       	movw	r18, r22
     706:	ac 01       	movw	r20, r24
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	80 e8       	ldi	r24, 0x80	; 128
     70e:	9f e3       	ldi	r25, 0x3F	; 63
     710:	0e 94 9c 04 	call	0x938	; 0x938 <__divsf3>
     714:	60 96       	adiw	r28, 0x10	; 16
     716:	6c af       	std	Y+60, r22	; 0x3c
     718:	7d af       	std	Y+61, r23	; 0x3d
     71a:	8e af       	std	Y+62, r24	; 0x3e
     71c:	9f af       	std	Y+63, r25	; 0x3f
     71e:	60 97       	sbiw	r28, 0x10	; 16
		ic_duty	= tHigh/(tHigh + tLow);
     720:	80 90 06 01 	lds	r8, 0x0106	; 0x800106 <__data_end>
     724:	90 90 07 01 	lds	r9, 0x0107	; 0x800107 <__data_end+0x1>
     728:	a0 90 08 01 	lds	r10, 0x0108	; 0x800108 <__data_end+0x2>
     72c:	b0 90 09 01 	lds	r11, 0x0109	; 0x800109 <__data_end+0x3>
     730:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <__data_end>
     734:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <__data_end+0x1>
     738:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__data_end+0x2>
     73c:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <__data_end+0x3>
     740:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <tLow>
     744:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <tLow+0x1>
     748:	40 91 0c 01 	lds	r20, 0x010C	; 0x80010c <tLow+0x2>
     74c:	50 91 0d 01 	lds	r21, 0x010D	; 0x80010d <tLow+0x3>
     750:	0e 94 30 04 	call	0x860	; 0x860 <__addsf3>
     754:	9b 01       	movw	r18, r22
     756:	ac 01       	movw	r20, r24
     758:	c5 01       	movw	r24, r10
     75a:	b4 01       	movw	r22, r8
     75c:	0e 94 9c 04 	call	0x938	; 0x938 <__divsf3>
     760:	64 96       	adiw	r28, 0x14	; 20
     762:	6c af       	std	Y+60, r22	; 0x3c
     764:	7d af       	std	Y+61, r23	; 0x3d
     766:	8e af       	std	Y+62, r24	; 0x3e
     768:	9f af       	std	Y+63, r25	; 0x3f
     76a:	64 97       	sbiw	r28, 0x14	; 20
		true_freq = (float) 16e6 /((ocr2a+1.0)*1024.0);
     76c:	20 e0       	ldi	r18, 0x00	; 0
     76e:	30 e0       	ldi	r19, 0x00	; 0
     770:	40 e8       	ldi	r20, 0x80	; 128
     772:	5f e3       	ldi	r21, 0x3F	; 63
     774:	c3 01       	movw	r24, r6
     776:	b2 01       	movw	r22, r4
     778:	0e 94 30 04 	call	0x860	; 0x860 <__addsf3>
     77c:	20 e0       	ldi	r18, 0x00	; 0
     77e:	30 e0       	ldi	r19, 0x00	; 0
     780:	40 e8       	ldi	r20, 0x80	; 128
     782:	54 e4       	ldi	r21, 0x44	; 68
     784:	0e 94 cb 05 	call	0xb96	; 0xb96 <__mulsf3>
     788:	9b 01       	movw	r18, r22
     78a:	ac 01       	movw	r20, r24
     78c:	60 e0       	ldi	r22, 0x00	; 0
     78e:	74 e2       	ldi	r23, 0x24	; 36
     790:	84 e7       	ldi	r24, 0x74	; 116
     792:	9b e4       	ldi	r25, 0x4B	; 75
     794:	0e 94 9c 04 	call	0x938	; 0x938 <__divsf3>
     798:	2b 01       	movw	r4, r22
     79a:	3c 01       	movw	r6, r24
		true_duty = temp;
		
		char icfreq[15];
		dtostrf(ic_freq, 10, 3, icfreq);
     79c:	0f 50       	subi	r16, 0x0F	; 15
     79e:	11 09       	sbc	r17, r1
     7a0:	23 e0       	ldi	r18, 0x03	; 3
     7a2:	4a e0       	ldi	r20, 0x0A	; 10
     7a4:	60 96       	adiw	r28, 0x10	; 16
     7a6:	6c ad       	ldd	r22, Y+60	; 0x3c
     7a8:	7d ad       	ldd	r23, Y+61	; 0x3d
     7aa:	8e ad       	ldd	r24, Y+62	; 0x3e
     7ac:	9f ad       	ldd	r25, Y+63	; 0x3f
     7ae:	60 97       	sbiw	r28, 0x10	; 16
     7b0:	0e 94 38 06 	call	0xc70	; 0xc70 <dtostrf>
		icfreq[10] = '\0';
     7b4:	18 ae       	std	Y+56, r1	; 0x38
		transmitStringUSART(icfreq);
     7b6:	c8 01       	movw	r24, r16
     7b8:	0e 94 ce 02 	call	0x59c	; 0x59c <transmitStringUSART>
		transmitStringUSART("\r\n");
     7bc:	83 e0       	ldi	r24, 0x03	; 3
     7be:	91 e0       	ldi	r25, 0x01	; 1
     7c0:	0e 94 ce 02 	call	0x59c	; 0x59c <transmitStringUSART>
		
		
		char icduty[15];
		dtostrf(ic_duty, 10, 3, icduty);
     7c4:	0f 50       	subi	r16, 0x0F	; 15
     7c6:	11 09       	sbc	r17, r1
     7c8:	23 e0       	ldi	r18, 0x03	; 3
     7ca:	4a e0       	ldi	r20, 0x0A	; 10
     7cc:	64 96       	adiw	r28, 0x14	; 20
     7ce:	6c ad       	ldd	r22, Y+60	; 0x3c
     7d0:	7d ad       	ldd	r23, Y+61	; 0x3d
     7d2:	8e ad       	ldd	r24, Y+62	; 0x3e
     7d4:	9f ad       	ldd	r25, Y+63	; 0x3f
     7d6:	64 97       	sbiw	r28, 0x14	; 20
     7d8:	0e 94 38 06 	call	0xc70	; 0xc70 <dtostrf>
		icduty[10] = '\0';
     7dc:	19 a6       	std	Y+41, r1	; 0x29
		transmitStringUSART(icduty);
     7de:	c8 01       	movw	r24, r16
     7e0:	0e 94 ce 02 	call	0x59c	; 0x59c <transmitStringUSART>
		transmitStringUSART("\r\n");
     7e4:	83 e0       	ldi	r24, 0x03	; 3
     7e6:	91 e0       	ldi	r25, 0x01	; 1
     7e8:	0e 94 ce 02 	call	0x59c	; 0x59c <transmitStringUSART>
		
		char truefreq[15];
		dtostrf(true_freq, 10, 3, truefreq);
     7ec:	0f 50       	subi	r16, 0x0F	; 15
     7ee:	11 09       	sbc	r17, r1
     7f0:	23 e0       	ldi	r18, 0x03	; 3
     7f2:	4a e0       	ldi	r20, 0x0A	; 10
     7f4:	c3 01       	movw	r24, r6
     7f6:	b2 01       	movw	r22, r4
     7f8:	0e 94 38 06 	call	0xc70	; 0xc70 <dtostrf>
		truefreq[10] = '\0';
     7fc:	1a 8e       	std	Y+26, r1	; 0x1a
		transmitStringUSART(truefreq);
     7fe:	c8 01       	movw	r24, r16
     800:	0e 94 ce 02 	call	0x59c	; 0x59c <transmitStringUSART>
		transmitStringUSART("\r\n");
     804:	83 e0       	ldi	r24, 0x03	; 3
     806:	91 e0       	ldi	r25, 0x01	; 1
     808:	0e 94 ce 02 	call	0x59c	; 0x59c <transmitStringUSART>
		
		char trueduty[15];
		dtostrf(true_duty, 10, 3, trueduty);
     80c:	0f 50       	subi	r16, 0x0F	; 15
     80e:	11 09       	sbc	r17, r1
     810:	23 e0       	ldi	r18, 0x03	; 3
     812:	4a e0       	ldi	r20, 0x0A	; 10
     814:	c7 01       	movw	r24, r14
     816:	b6 01       	movw	r22, r12
     818:	0e 94 38 06 	call	0xc70	; 0xc70 <dtostrf>
		trueduty[10] = '\0';
     81c:	1b 86       	std	Y+11, r1	; 0x0b
		transmitStringUSART(trueduty);
     81e:	c8 01       	movw	r24, r16
     820:	0e 94 ce 02 	call	0x59c	; 0x59c <transmitStringUSART>
		transmitStringUSART("\r\n");
     824:	83 e0       	ldi	r24, 0x03	; 3
     826:	91 e0       	ldi	r25, 0x01	; 1
     828:	0e 94 ce 02 	call	0x59c	; 0x59c <transmitStringUSART>
		
	}
	float temp3 = (float) testflag;
     82c:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <testflag>
     830:	70 e0       	ldi	r23, 0x00	; 0
     832:	80 e0       	ldi	r24, 0x00	; 0
     834:	90 e0       	ldi	r25, 0x00	; 0
     836:	0e 94 3d 05 	call	0xa7a	; 0xa7a <__floatunsisf>
	char testflag1[15];
	dtostrf(temp3, 10, 3, testflag1);
     83a:	8e 01       	movw	r16, r28
     83c:	0f 5f       	subi	r16, 0xFF	; 255
     83e:	1f 4f       	sbci	r17, 0xFF	; 255
     840:	23 e0       	ldi	r18, 0x03	; 3
     842:	4a e0       	ldi	r20, 0x0A	; 10
     844:	0e 94 38 06 	call	0xc70	; 0xc70 <dtostrf>
	testflag1[10] = '\0';
     848:	1b 86       	std	Y+11, r1	; 0x0b
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     84a:	2f ef       	ldi	r18, 0xFF	; 255
     84c:	83 ed       	ldi	r24, 0xD3	; 211
     84e:	90 e3       	ldi	r25, 0x30	; 48
     850:	21 50       	subi	r18, 0x01	; 1
     852:	80 40       	sbci	r24, 0x00	; 0
     854:	90 40       	sbci	r25, 0x00	; 0
     856:	e1 f7       	brne	.-8      	; 0x850 <__DATA_REGION_LENGTH__+0x50>
     858:	00 c0       	rjmp	.+0      	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
     85a:	00 00       	nop
		
		
		
		
		
    }
     85c:	cb ce       	rjmp	.-618    	; 0x5f4 <main+0x3e>

0000085e <__subsf3>:
     85e:	50 58       	subi	r21, 0x80	; 128

00000860 <__addsf3>:
     860:	bb 27       	eor	r27, r27
     862:	aa 27       	eor	r26, r26
     864:	0e 94 47 04 	call	0x88e	; 0x88e <__addsf3x>
     868:	0c 94 91 05 	jmp	0xb22	; 0xb22 <__fp_round>
     86c:	0e 94 83 05 	call	0xb06	; 0xb06 <__fp_pscA>
     870:	38 f0       	brcs	.+14     	; 0x880 <__addsf3+0x20>
     872:	0e 94 8a 05 	call	0xb14	; 0xb14 <__fp_pscB>
     876:	20 f0       	brcs	.+8      	; 0x880 <__addsf3+0x20>
     878:	39 f4       	brne	.+14     	; 0x888 <__addsf3+0x28>
     87a:	9f 3f       	cpi	r25, 0xFF	; 255
     87c:	19 f4       	brne	.+6      	; 0x884 <__addsf3+0x24>
     87e:	26 f4       	brtc	.+8      	; 0x888 <__addsf3+0x28>
     880:	0c 94 80 05 	jmp	0xb00	; 0xb00 <__fp_nan>
     884:	0e f4       	brtc	.+2      	; 0x888 <__addsf3+0x28>
     886:	e0 95       	com	r30
     888:	e7 fb       	bst	r30, 7
     88a:	0c 94 7a 05 	jmp	0xaf4	; 0xaf4 <__fp_inf>

0000088e <__addsf3x>:
     88e:	e9 2f       	mov	r30, r25
     890:	0e 94 a2 05 	call	0xb44	; 0xb44 <__fp_split3>
     894:	58 f3       	brcs	.-42     	; 0x86c <__addsf3+0xc>
     896:	ba 17       	cp	r27, r26
     898:	62 07       	cpc	r22, r18
     89a:	73 07       	cpc	r23, r19
     89c:	84 07       	cpc	r24, r20
     89e:	95 07       	cpc	r25, r21
     8a0:	20 f0       	brcs	.+8      	; 0x8aa <__addsf3x+0x1c>
     8a2:	79 f4       	brne	.+30     	; 0x8c2 <__addsf3x+0x34>
     8a4:	a6 f5       	brtc	.+104    	; 0x90e <__stack+0xf>
     8a6:	0c 94 c4 05 	jmp	0xb88	; 0xb88 <__fp_zero>
     8aa:	0e f4       	brtc	.+2      	; 0x8ae <__addsf3x+0x20>
     8ac:	e0 95       	com	r30
     8ae:	0b 2e       	mov	r0, r27
     8b0:	ba 2f       	mov	r27, r26
     8b2:	a0 2d       	mov	r26, r0
     8b4:	0b 01       	movw	r0, r22
     8b6:	b9 01       	movw	r22, r18
     8b8:	90 01       	movw	r18, r0
     8ba:	0c 01       	movw	r0, r24
     8bc:	ca 01       	movw	r24, r20
     8be:	a0 01       	movw	r20, r0
     8c0:	11 24       	eor	r1, r1
     8c2:	ff 27       	eor	r31, r31
     8c4:	59 1b       	sub	r21, r25
     8c6:	99 f0       	breq	.+38     	; 0x8ee <__addsf3x+0x60>
     8c8:	59 3f       	cpi	r21, 0xF9	; 249
     8ca:	50 f4       	brcc	.+20     	; 0x8e0 <__addsf3x+0x52>
     8cc:	50 3e       	cpi	r21, 0xE0	; 224
     8ce:	68 f1       	brcs	.+90     	; 0x92a <__stack+0x2b>
     8d0:	1a 16       	cp	r1, r26
     8d2:	f0 40       	sbci	r31, 0x00	; 0
     8d4:	a2 2f       	mov	r26, r18
     8d6:	23 2f       	mov	r18, r19
     8d8:	34 2f       	mov	r19, r20
     8da:	44 27       	eor	r20, r20
     8dc:	58 5f       	subi	r21, 0xF8	; 248
     8de:	f3 cf       	rjmp	.-26     	; 0x8c6 <__addsf3x+0x38>
     8e0:	46 95       	lsr	r20
     8e2:	37 95       	ror	r19
     8e4:	27 95       	ror	r18
     8e6:	a7 95       	ror	r26
     8e8:	f0 40       	sbci	r31, 0x00	; 0
     8ea:	53 95       	inc	r21
     8ec:	c9 f7       	brne	.-14     	; 0x8e0 <__addsf3x+0x52>
     8ee:	7e f4       	brtc	.+30     	; 0x90e <__stack+0xf>
     8f0:	1f 16       	cp	r1, r31
     8f2:	ba 0b       	sbc	r27, r26
     8f4:	62 0b       	sbc	r22, r18
     8f6:	73 0b       	sbc	r23, r19
     8f8:	84 0b       	sbc	r24, r20
     8fa:	ba f0       	brmi	.+46     	; 0x92a <__stack+0x2b>
     8fc:	91 50       	subi	r25, 0x01	; 1
     8fe:	a1 f0       	breq	.+40     	; 0x928 <__stack+0x29>
     900:	ff 0f       	add	r31, r31
     902:	bb 1f       	adc	r27, r27
     904:	66 1f       	adc	r22, r22
     906:	77 1f       	adc	r23, r23
     908:	88 1f       	adc	r24, r24
     90a:	c2 f7       	brpl	.-16     	; 0x8fc <__addsf3x+0x6e>
     90c:	0e c0       	rjmp	.+28     	; 0x92a <__stack+0x2b>
     90e:	ba 0f       	add	r27, r26
     910:	62 1f       	adc	r22, r18
     912:	73 1f       	adc	r23, r19
     914:	84 1f       	adc	r24, r20
     916:	48 f4       	brcc	.+18     	; 0x92a <__stack+0x2b>
     918:	87 95       	ror	r24
     91a:	77 95       	ror	r23
     91c:	67 95       	ror	r22
     91e:	b7 95       	ror	r27
     920:	f7 95       	ror	r31
     922:	9e 3f       	cpi	r25, 0xFE	; 254
     924:	08 f0       	brcs	.+2      	; 0x928 <__stack+0x29>
     926:	b0 cf       	rjmp	.-160    	; 0x888 <__addsf3+0x28>
     928:	93 95       	inc	r25
     92a:	88 0f       	add	r24, r24
     92c:	08 f0       	brcs	.+2      	; 0x930 <__stack+0x31>
     92e:	99 27       	eor	r25, r25
     930:	ee 0f       	add	r30, r30
     932:	97 95       	ror	r25
     934:	87 95       	ror	r24
     936:	08 95       	ret

00000938 <__divsf3>:
     938:	0e 94 b0 04 	call	0x960	; 0x960 <__divsf3x>
     93c:	0c 94 91 05 	jmp	0xb22	; 0xb22 <__fp_round>
     940:	0e 94 8a 05 	call	0xb14	; 0xb14 <__fp_pscB>
     944:	58 f0       	brcs	.+22     	; 0x95c <__divsf3+0x24>
     946:	0e 94 83 05 	call	0xb06	; 0xb06 <__fp_pscA>
     94a:	40 f0       	brcs	.+16     	; 0x95c <__divsf3+0x24>
     94c:	29 f4       	brne	.+10     	; 0x958 <__divsf3+0x20>
     94e:	5f 3f       	cpi	r21, 0xFF	; 255
     950:	29 f0       	breq	.+10     	; 0x95c <__divsf3+0x24>
     952:	0c 94 7a 05 	jmp	0xaf4	; 0xaf4 <__fp_inf>
     956:	51 11       	cpse	r21, r1
     958:	0c 94 c5 05 	jmp	0xb8a	; 0xb8a <__fp_szero>
     95c:	0c 94 80 05 	jmp	0xb00	; 0xb00 <__fp_nan>

00000960 <__divsf3x>:
     960:	0e 94 a2 05 	call	0xb44	; 0xb44 <__fp_split3>
     964:	68 f3       	brcs	.-38     	; 0x940 <__divsf3+0x8>

00000966 <__divsf3_pse>:
     966:	99 23       	and	r25, r25
     968:	b1 f3       	breq	.-20     	; 0x956 <__divsf3+0x1e>
     96a:	55 23       	and	r21, r21
     96c:	91 f3       	breq	.-28     	; 0x952 <__divsf3+0x1a>
     96e:	95 1b       	sub	r25, r21
     970:	55 0b       	sbc	r21, r21
     972:	bb 27       	eor	r27, r27
     974:	aa 27       	eor	r26, r26
     976:	62 17       	cp	r22, r18
     978:	73 07       	cpc	r23, r19
     97a:	84 07       	cpc	r24, r20
     97c:	38 f0       	brcs	.+14     	; 0x98c <__divsf3_pse+0x26>
     97e:	9f 5f       	subi	r25, 0xFF	; 255
     980:	5f 4f       	sbci	r21, 0xFF	; 255
     982:	22 0f       	add	r18, r18
     984:	33 1f       	adc	r19, r19
     986:	44 1f       	adc	r20, r20
     988:	aa 1f       	adc	r26, r26
     98a:	a9 f3       	breq	.-22     	; 0x976 <__divsf3_pse+0x10>
     98c:	35 d0       	rcall	.+106    	; 0x9f8 <__divsf3_pse+0x92>
     98e:	0e 2e       	mov	r0, r30
     990:	3a f0       	brmi	.+14     	; 0x9a0 <__divsf3_pse+0x3a>
     992:	e0 e8       	ldi	r30, 0x80	; 128
     994:	32 d0       	rcall	.+100    	; 0x9fa <__divsf3_pse+0x94>
     996:	91 50       	subi	r25, 0x01	; 1
     998:	50 40       	sbci	r21, 0x00	; 0
     99a:	e6 95       	lsr	r30
     99c:	00 1c       	adc	r0, r0
     99e:	ca f7       	brpl	.-14     	; 0x992 <__divsf3_pse+0x2c>
     9a0:	2b d0       	rcall	.+86     	; 0x9f8 <__divsf3_pse+0x92>
     9a2:	fe 2f       	mov	r31, r30
     9a4:	29 d0       	rcall	.+82     	; 0x9f8 <__divsf3_pse+0x92>
     9a6:	66 0f       	add	r22, r22
     9a8:	77 1f       	adc	r23, r23
     9aa:	88 1f       	adc	r24, r24
     9ac:	bb 1f       	adc	r27, r27
     9ae:	26 17       	cp	r18, r22
     9b0:	37 07       	cpc	r19, r23
     9b2:	48 07       	cpc	r20, r24
     9b4:	ab 07       	cpc	r26, r27
     9b6:	b0 e8       	ldi	r27, 0x80	; 128
     9b8:	09 f0       	breq	.+2      	; 0x9bc <__divsf3_pse+0x56>
     9ba:	bb 0b       	sbc	r27, r27
     9bc:	80 2d       	mov	r24, r0
     9be:	bf 01       	movw	r22, r30
     9c0:	ff 27       	eor	r31, r31
     9c2:	93 58       	subi	r25, 0x83	; 131
     9c4:	5f 4f       	sbci	r21, 0xFF	; 255
     9c6:	3a f0       	brmi	.+14     	; 0x9d6 <__divsf3_pse+0x70>
     9c8:	9e 3f       	cpi	r25, 0xFE	; 254
     9ca:	51 05       	cpc	r21, r1
     9cc:	78 f0       	brcs	.+30     	; 0x9ec <__divsf3_pse+0x86>
     9ce:	0c 94 7a 05 	jmp	0xaf4	; 0xaf4 <__fp_inf>
     9d2:	0c 94 c5 05 	jmp	0xb8a	; 0xb8a <__fp_szero>
     9d6:	5f 3f       	cpi	r21, 0xFF	; 255
     9d8:	e4 f3       	brlt	.-8      	; 0x9d2 <__divsf3_pse+0x6c>
     9da:	98 3e       	cpi	r25, 0xE8	; 232
     9dc:	d4 f3       	brlt	.-12     	; 0x9d2 <__divsf3_pse+0x6c>
     9de:	86 95       	lsr	r24
     9e0:	77 95       	ror	r23
     9e2:	67 95       	ror	r22
     9e4:	b7 95       	ror	r27
     9e6:	f7 95       	ror	r31
     9e8:	9f 5f       	subi	r25, 0xFF	; 255
     9ea:	c9 f7       	brne	.-14     	; 0x9de <__divsf3_pse+0x78>
     9ec:	88 0f       	add	r24, r24
     9ee:	91 1d       	adc	r25, r1
     9f0:	96 95       	lsr	r25
     9f2:	87 95       	ror	r24
     9f4:	97 f9       	bld	r25, 7
     9f6:	08 95       	ret
     9f8:	e1 e0       	ldi	r30, 0x01	; 1
     9fa:	66 0f       	add	r22, r22
     9fc:	77 1f       	adc	r23, r23
     9fe:	88 1f       	adc	r24, r24
     a00:	bb 1f       	adc	r27, r27
     a02:	62 17       	cp	r22, r18
     a04:	73 07       	cpc	r23, r19
     a06:	84 07       	cpc	r24, r20
     a08:	ba 07       	cpc	r27, r26
     a0a:	20 f0       	brcs	.+8      	; 0xa14 <__divsf3_pse+0xae>
     a0c:	62 1b       	sub	r22, r18
     a0e:	73 0b       	sbc	r23, r19
     a10:	84 0b       	sbc	r24, r20
     a12:	ba 0b       	sbc	r27, r26
     a14:	ee 1f       	adc	r30, r30
     a16:	88 f7       	brcc	.-30     	; 0x9fa <__divsf3_pse+0x94>
     a18:	e0 95       	com	r30
     a1a:	08 95       	ret

00000a1c <__fixunssfsi>:
     a1c:	0e 94 aa 05 	call	0xb54	; 0xb54 <__fp_splitA>
     a20:	88 f0       	brcs	.+34     	; 0xa44 <__fixunssfsi+0x28>
     a22:	9f 57       	subi	r25, 0x7F	; 127
     a24:	98 f0       	brcs	.+38     	; 0xa4c <__fixunssfsi+0x30>
     a26:	b9 2f       	mov	r27, r25
     a28:	99 27       	eor	r25, r25
     a2a:	b7 51       	subi	r27, 0x17	; 23
     a2c:	b0 f0       	brcs	.+44     	; 0xa5a <__fixunssfsi+0x3e>
     a2e:	e1 f0       	breq	.+56     	; 0xa68 <__fixunssfsi+0x4c>
     a30:	66 0f       	add	r22, r22
     a32:	77 1f       	adc	r23, r23
     a34:	88 1f       	adc	r24, r24
     a36:	99 1f       	adc	r25, r25
     a38:	1a f0       	brmi	.+6      	; 0xa40 <__fixunssfsi+0x24>
     a3a:	ba 95       	dec	r27
     a3c:	c9 f7       	brne	.-14     	; 0xa30 <__fixunssfsi+0x14>
     a3e:	14 c0       	rjmp	.+40     	; 0xa68 <__fixunssfsi+0x4c>
     a40:	b1 30       	cpi	r27, 0x01	; 1
     a42:	91 f0       	breq	.+36     	; 0xa68 <__fixunssfsi+0x4c>
     a44:	0e 94 c4 05 	call	0xb88	; 0xb88 <__fp_zero>
     a48:	b1 e0       	ldi	r27, 0x01	; 1
     a4a:	08 95       	ret
     a4c:	0c 94 c4 05 	jmp	0xb88	; 0xb88 <__fp_zero>
     a50:	67 2f       	mov	r22, r23
     a52:	78 2f       	mov	r23, r24
     a54:	88 27       	eor	r24, r24
     a56:	b8 5f       	subi	r27, 0xF8	; 248
     a58:	39 f0       	breq	.+14     	; 0xa68 <__fixunssfsi+0x4c>
     a5a:	b9 3f       	cpi	r27, 0xF9	; 249
     a5c:	cc f3       	brlt	.-14     	; 0xa50 <__fixunssfsi+0x34>
     a5e:	86 95       	lsr	r24
     a60:	77 95       	ror	r23
     a62:	67 95       	ror	r22
     a64:	b3 95       	inc	r27
     a66:	d9 f7       	brne	.-10     	; 0xa5e <__fixunssfsi+0x42>
     a68:	3e f4       	brtc	.+14     	; 0xa78 <__fixunssfsi+0x5c>
     a6a:	90 95       	com	r25
     a6c:	80 95       	com	r24
     a6e:	70 95       	com	r23
     a70:	61 95       	neg	r22
     a72:	7f 4f       	sbci	r23, 0xFF	; 255
     a74:	8f 4f       	sbci	r24, 0xFF	; 255
     a76:	9f 4f       	sbci	r25, 0xFF	; 255
     a78:	08 95       	ret

00000a7a <__floatunsisf>:
     a7a:	e8 94       	clt
     a7c:	09 c0       	rjmp	.+18     	; 0xa90 <__floatsisf+0x12>

00000a7e <__floatsisf>:
     a7e:	97 fb       	bst	r25, 7
     a80:	3e f4       	brtc	.+14     	; 0xa90 <__floatsisf+0x12>
     a82:	90 95       	com	r25
     a84:	80 95       	com	r24
     a86:	70 95       	com	r23
     a88:	61 95       	neg	r22
     a8a:	7f 4f       	sbci	r23, 0xFF	; 255
     a8c:	8f 4f       	sbci	r24, 0xFF	; 255
     a8e:	9f 4f       	sbci	r25, 0xFF	; 255
     a90:	99 23       	and	r25, r25
     a92:	a9 f0       	breq	.+42     	; 0xabe <__floatsisf+0x40>
     a94:	f9 2f       	mov	r31, r25
     a96:	96 e9       	ldi	r25, 0x96	; 150
     a98:	bb 27       	eor	r27, r27
     a9a:	93 95       	inc	r25
     a9c:	f6 95       	lsr	r31
     a9e:	87 95       	ror	r24
     aa0:	77 95       	ror	r23
     aa2:	67 95       	ror	r22
     aa4:	b7 95       	ror	r27
     aa6:	f1 11       	cpse	r31, r1
     aa8:	f8 cf       	rjmp	.-16     	; 0xa9a <__floatsisf+0x1c>
     aaa:	fa f4       	brpl	.+62     	; 0xaea <__floatsisf+0x6c>
     aac:	bb 0f       	add	r27, r27
     aae:	11 f4       	brne	.+4      	; 0xab4 <__floatsisf+0x36>
     ab0:	60 ff       	sbrs	r22, 0
     ab2:	1b c0       	rjmp	.+54     	; 0xaea <__floatsisf+0x6c>
     ab4:	6f 5f       	subi	r22, 0xFF	; 255
     ab6:	7f 4f       	sbci	r23, 0xFF	; 255
     ab8:	8f 4f       	sbci	r24, 0xFF	; 255
     aba:	9f 4f       	sbci	r25, 0xFF	; 255
     abc:	16 c0       	rjmp	.+44     	; 0xaea <__floatsisf+0x6c>
     abe:	88 23       	and	r24, r24
     ac0:	11 f0       	breq	.+4      	; 0xac6 <__floatsisf+0x48>
     ac2:	96 e9       	ldi	r25, 0x96	; 150
     ac4:	11 c0       	rjmp	.+34     	; 0xae8 <__floatsisf+0x6a>
     ac6:	77 23       	and	r23, r23
     ac8:	21 f0       	breq	.+8      	; 0xad2 <__floatsisf+0x54>
     aca:	9e e8       	ldi	r25, 0x8E	; 142
     acc:	87 2f       	mov	r24, r23
     ace:	76 2f       	mov	r23, r22
     ad0:	05 c0       	rjmp	.+10     	; 0xadc <__floatsisf+0x5e>
     ad2:	66 23       	and	r22, r22
     ad4:	71 f0       	breq	.+28     	; 0xaf2 <__floatsisf+0x74>
     ad6:	96 e8       	ldi	r25, 0x86	; 134
     ad8:	86 2f       	mov	r24, r22
     ada:	70 e0       	ldi	r23, 0x00	; 0
     adc:	60 e0       	ldi	r22, 0x00	; 0
     ade:	2a f0       	brmi	.+10     	; 0xaea <__floatsisf+0x6c>
     ae0:	9a 95       	dec	r25
     ae2:	66 0f       	add	r22, r22
     ae4:	77 1f       	adc	r23, r23
     ae6:	88 1f       	adc	r24, r24
     ae8:	da f7       	brpl	.-10     	; 0xae0 <__floatsisf+0x62>
     aea:	88 0f       	add	r24, r24
     aec:	96 95       	lsr	r25
     aee:	87 95       	ror	r24
     af0:	97 f9       	bld	r25, 7
     af2:	08 95       	ret

00000af4 <__fp_inf>:
     af4:	97 f9       	bld	r25, 7
     af6:	9f 67       	ori	r25, 0x7F	; 127
     af8:	80 e8       	ldi	r24, 0x80	; 128
     afa:	70 e0       	ldi	r23, 0x00	; 0
     afc:	60 e0       	ldi	r22, 0x00	; 0
     afe:	08 95       	ret

00000b00 <__fp_nan>:
     b00:	9f ef       	ldi	r25, 0xFF	; 255
     b02:	80 ec       	ldi	r24, 0xC0	; 192
     b04:	08 95       	ret

00000b06 <__fp_pscA>:
     b06:	00 24       	eor	r0, r0
     b08:	0a 94       	dec	r0
     b0a:	16 16       	cp	r1, r22
     b0c:	17 06       	cpc	r1, r23
     b0e:	18 06       	cpc	r1, r24
     b10:	09 06       	cpc	r0, r25
     b12:	08 95       	ret

00000b14 <__fp_pscB>:
     b14:	00 24       	eor	r0, r0
     b16:	0a 94       	dec	r0
     b18:	12 16       	cp	r1, r18
     b1a:	13 06       	cpc	r1, r19
     b1c:	14 06       	cpc	r1, r20
     b1e:	05 06       	cpc	r0, r21
     b20:	08 95       	ret

00000b22 <__fp_round>:
     b22:	09 2e       	mov	r0, r25
     b24:	03 94       	inc	r0
     b26:	00 0c       	add	r0, r0
     b28:	11 f4       	brne	.+4      	; 0xb2e <__fp_round+0xc>
     b2a:	88 23       	and	r24, r24
     b2c:	52 f0       	brmi	.+20     	; 0xb42 <__fp_round+0x20>
     b2e:	bb 0f       	add	r27, r27
     b30:	40 f4       	brcc	.+16     	; 0xb42 <__fp_round+0x20>
     b32:	bf 2b       	or	r27, r31
     b34:	11 f4       	brne	.+4      	; 0xb3a <__fp_round+0x18>
     b36:	60 ff       	sbrs	r22, 0
     b38:	04 c0       	rjmp	.+8      	; 0xb42 <__fp_round+0x20>
     b3a:	6f 5f       	subi	r22, 0xFF	; 255
     b3c:	7f 4f       	sbci	r23, 0xFF	; 255
     b3e:	8f 4f       	sbci	r24, 0xFF	; 255
     b40:	9f 4f       	sbci	r25, 0xFF	; 255
     b42:	08 95       	ret

00000b44 <__fp_split3>:
     b44:	57 fd       	sbrc	r21, 7
     b46:	90 58       	subi	r25, 0x80	; 128
     b48:	44 0f       	add	r20, r20
     b4a:	55 1f       	adc	r21, r21
     b4c:	59 f0       	breq	.+22     	; 0xb64 <__fp_splitA+0x10>
     b4e:	5f 3f       	cpi	r21, 0xFF	; 255
     b50:	71 f0       	breq	.+28     	; 0xb6e <__fp_splitA+0x1a>
     b52:	47 95       	ror	r20

00000b54 <__fp_splitA>:
     b54:	88 0f       	add	r24, r24
     b56:	97 fb       	bst	r25, 7
     b58:	99 1f       	adc	r25, r25
     b5a:	61 f0       	breq	.+24     	; 0xb74 <__fp_splitA+0x20>
     b5c:	9f 3f       	cpi	r25, 0xFF	; 255
     b5e:	79 f0       	breq	.+30     	; 0xb7e <__fp_splitA+0x2a>
     b60:	87 95       	ror	r24
     b62:	08 95       	ret
     b64:	12 16       	cp	r1, r18
     b66:	13 06       	cpc	r1, r19
     b68:	14 06       	cpc	r1, r20
     b6a:	55 1f       	adc	r21, r21
     b6c:	f2 cf       	rjmp	.-28     	; 0xb52 <__fp_split3+0xe>
     b6e:	46 95       	lsr	r20
     b70:	f1 df       	rcall	.-30     	; 0xb54 <__fp_splitA>
     b72:	08 c0       	rjmp	.+16     	; 0xb84 <__fp_splitA+0x30>
     b74:	16 16       	cp	r1, r22
     b76:	17 06       	cpc	r1, r23
     b78:	18 06       	cpc	r1, r24
     b7a:	99 1f       	adc	r25, r25
     b7c:	f1 cf       	rjmp	.-30     	; 0xb60 <__fp_splitA+0xc>
     b7e:	86 95       	lsr	r24
     b80:	71 05       	cpc	r23, r1
     b82:	61 05       	cpc	r22, r1
     b84:	08 94       	sec
     b86:	08 95       	ret

00000b88 <__fp_zero>:
     b88:	e8 94       	clt

00000b8a <__fp_szero>:
     b8a:	bb 27       	eor	r27, r27
     b8c:	66 27       	eor	r22, r22
     b8e:	77 27       	eor	r23, r23
     b90:	cb 01       	movw	r24, r22
     b92:	97 f9       	bld	r25, 7
     b94:	08 95       	ret

00000b96 <__mulsf3>:
     b96:	0e 94 de 05 	call	0xbbc	; 0xbbc <__mulsf3x>
     b9a:	0c 94 91 05 	jmp	0xb22	; 0xb22 <__fp_round>
     b9e:	0e 94 83 05 	call	0xb06	; 0xb06 <__fp_pscA>
     ba2:	38 f0       	brcs	.+14     	; 0xbb2 <__mulsf3+0x1c>
     ba4:	0e 94 8a 05 	call	0xb14	; 0xb14 <__fp_pscB>
     ba8:	20 f0       	brcs	.+8      	; 0xbb2 <__mulsf3+0x1c>
     baa:	95 23       	and	r25, r21
     bac:	11 f0       	breq	.+4      	; 0xbb2 <__mulsf3+0x1c>
     bae:	0c 94 7a 05 	jmp	0xaf4	; 0xaf4 <__fp_inf>
     bb2:	0c 94 80 05 	jmp	0xb00	; 0xb00 <__fp_nan>
     bb6:	11 24       	eor	r1, r1
     bb8:	0c 94 c5 05 	jmp	0xb8a	; 0xb8a <__fp_szero>

00000bbc <__mulsf3x>:
     bbc:	0e 94 a2 05 	call	0xb44	; 0xb44 <__fp_split3>
     bc0:	70 f3       	brcs	.-36     	; 0xb9e <__mulsf3+0x8>

00000bc2 <__mulsf3_pse>:
     bc2:	95 9f       	mul	r25, r21
     bc4:	c1 f3       	breq	.-16     	; 0xbb6 <__mulsf3+0x20>
     bc6:	95 0f       	add	r25, r21
     bc8:	50 e0       	ldi	r21, 0x00	; 0
     bca:	55 1f       	adc	r21, r21
     bcc:	62 9f       	mul	r22, r18
     bce:	f0 01       	movw	r30, r0
     bd0:	72 9f       	mul	r23, r18
     bd2:	bb 27       	eor	r27, r27
     bd4:	f0 0d       	add	r31, r0
     bd6:	b1 1d       	adc	r27, r1
     bd8:	63 9f       	mul	r22, r19
     bda:	aa 27       	eor	r26, r26
     bdc:	f0 0d       	add	r31, r0
     bde:	b1 1d       	adc	r27, r1
     be0:	aa 1f       	adc	r26, r26
     be2:	64 9f       	mul	r22, r20
     be4:	66 27       	eor	r22, r22
     be6:	b0 0d       	add	r27, r0
     be8:	a1 1d       	adc	r26, r1
     bea:	66 1f       	adc	r22, r22
     bec:	82 9f       	mul	r24, r18
     bee:	22 27       	eor	r18, r18
     bf0:	b0 0d       	add	r27, r0
     bf2:	a1 1d       	adc	r26, r1
     bf4:	62 1f       	adc	r22, r18
     bf6:	73 9f       	mul	r23, r19
     bf8:	b0 0d       	add	r27, r0
     bfa:	a1 1d       	adc	r26, r1
     bfc:	62 1f       	adc	r22, r18
     bfe:	83 9f       	mul	r24, r19
     c00:	a0 0d       	add	r26, r0
     c02:	61 1d       	adc	r22, r1
     c04:	22 1f       	adc	r18, r18
     c06:	74 9f       	mul	r23, r20
     c08:	33 27       	eor	r19, r19
     c0a:	a0 0d       	add	r26, r0
     c0c:	61 1d       	adc	r22, r1
     c0e:	23 1f       	adc	r18, r19
     c10:	84 9f       	mul	r24, r20
     c12:	60 0d       	add	r22, r0
     c14:	21 1d       	adc	r18, r1
     c16:	82 2f       	mov	r24, r18
     c18:	76 2f       	mov	r23, r22
     c1a:	6a 2f       	mov	r22, r26
     c1c:	11 24       	eor	r1, r1
     c1e:	9f 57       	subi	r25, 0x7F	; 127
     c20:	50 40       	sbci	r21, 0x00	; 0
     c22:	9a f0       	brmi	.+38     	; 0xc4a <__mulsf3_pse+0x88>
     c24:	f1 f0       	breq	.+60     	; 0xc62 <__mulsf3_pse+0xa0>
     c26:	88 23       	and	r24, r24
     c28:	4a f0       	brmi	.+18     	; 0xc3c <__mulsf3_pse+0x7a>
     c2a:	ee 0f       	add	r30, r30
     c2c:	ff 1f       	adc	r31, r31
     c2e:	bb 1f       	adc	r27, r27
     c30:	66 1f       	adc	r22, r22
     c32:	77 1f       	adc	r23, r23
     c34:	88 1f       	adc	r24, r24
     c36:	91 50       	subi	r25, 0x01	; 1
     c38:	50 40       	sbci	r21, 0x00	; 0
     c3a:	a9 f7       	brne	.-22     	; 0xc26 <__mulsf3_pse+0x64>
     c3c:	9e 3f       	cpi	r25, 0xFE	; 254
     c3e:	51 05       	cpc	r21, r1
     c40:	80 f0       	brcs	.+32     	; 0xc62 <__mulsf3_pse+0xa0>
     c42:	0c 94 7a 05 	jmp	0xaf4	; 0xaf4 <__fp_inf>
     c46:	0c 94 c5 05 	jmp	0xb8a	; 0xb8a <__fp_szero>
     c4a:	5f 3f       	cpi	r21, 0xFF	; 255
     c4c:	e4 f3       	brlt	.-8      	; 0xc46 <__mulsf3_pse+0x84>
     c4e:	98 3e       	cpi	r25, 0xE8	; 232
     c50:	d4 f3       	brlt	.-12     	; 0xc46 <__mulsf3_pse+0x84>
     c52:	86 95       	lsr	r24
     c54:	77 95       	ror	r23
     c56:	67 95       	ror	r22
     c58:	b7 95       	ror	r27
     c5a:	f7 95       	ror	r31
     c5c:	e7 95       	ror	r30
     c5e:	9f 5f       	subi	r25, 0xFF	; 255
     c60:	c1 f7       	brne	.-16     	; 0xc52 <__mulsf3_pse+0x90>
     c62:	fe 2b       	or	r31, r30
     c64:	88 0f       	add	r24, r24
     c66:	91 1d       	adc	r25, r1
     c68:	96 95       	lsr	r25
     c6a:	87 95       	ror	r24
     c6c:	97 f9       	bld	r25, 7
     c6e:	08 95       	ret

00000c70 <dtostrf>:
     c70:	ef 92       	push	r14
     c72:	0f 93       	push	r16
     c74:	1f 93       	push	r17
     c76:	cf 93       	push	r28
     c78:	df 93       	push	r29
     c7a:	e8 01       	movw	r28, r16
     c7c:	47 fd       	sbrc	r20, 7
     c7e:	02 c0       	rjmp	.+4      	; 0xc84 <dtostrf+0x14>
     c80:	34 e0       	ldi	r19, 0x04	; 4
     c82:	01 c0       	rjmp	.+2      	; 0xc86 <dtostrf+0x16>
     c84:	34 e1       	ldi	r19, 0x14	; 20
     c86:	04 2e       	mov	r0, r20
     c88:	00 0c       	add	r0, r0
     c8a:	55 0b       	sbc	r21, r21
     c8c:	57 ff       	sbrs	r21, 7
     c8e:	03 c0       	rjmp	.+6      	; 0xc96 <dtostrf+0x26>
     c90:	51 95       	neg	r21
     c92:	41 95       	neg	r20
     c94:	51 09       	sbc	r21, r1
     c96:	e3 2e       	mov	r14, r19
     c98:	02 2f       	mov	r16, r18
     c9a:	24 2f       	mov	r18, r20
     c9c:	ae 01       	movw	r20, r28
     c9e:	0e 94 58 06 	call	0xcb0	; 0xcb0 <dtoa_prf>
     ca2:	ce 01       	movw	r24, r28
     ca4:	df 91       	pop	r29
     ca6:	cf 91       	pop	r28
     ca8:	1f 91       	pop	r17
     caa:	0f 91       	pop	r16
     cac:	ef 90       	pop	r14
     cae:	08 95       	ret

00000cb0 <dtoa_prf>:
     cb0:	a9 e0       	ldi	r26, 0x09	; 9
     cb2:	b0 e0       	ldi	r27, 0x00	; 0
     cb4:	ee e5       	ldi	r30, 0x5E	; 94
     cb6:	f6 e0       	ldi	r31, 0x06	; 6
     cb8:	0c 94 90 08 	jmp	0x1120	; 0x1120 <__prologue_saves__+0xc>
     cbc:	6a 01       	movw	r12, r20
     cbe:	12 2f       	mov	r17, r18
     cc0:	b0 2e       	mov	r11, r16
     cc2:	2b e3       	ldi	r18, 0x3B	; 59
     cc4:	20 17       	cp	r18, r16
     cc6:	20 f0       	brcs	.+8      	; 0xcd0 <dtoa_prf+0x20>
     cc8:	ff 24       	eor	r15, r15
     cca:	f3 94       	inc	r15
     ccc:	f0 0e       	add	r15, r16
     cce:	02 c0       	rjmp	.+4      	; 0xcd4 <dtoa_prf+0x24>
     cd0:	2c e3       	ldi	r18, 0x3C	; 60
     cd2:	f2 2e       	mov	r15, r18
     cd4:	0f 2d       	mov	r16, r15
     cd6:	27 e0       	ldi	r18, 0x07	; 7
     cd8:	ae 01       	movw	r20, r28
     cda:	4f 5f       	subi	r20, 0xFF	; 255
     cdc:	5f 4f       	sbci	r21, 0xFF	; 255
     cde:	0e 94 b2 07 	call	0xf64	; 0xf64 <__ftoa_engine>
     ce2:	bc 01       	movw	r22, r24
     ce4:	49 81       	ldd	r20, Y+1	; 0x01
     ce6:	84 2f       	mov	r24, r20
     ce8:	89 70       	andi	r24, 0x09	; 9
     cea:	81 30       	cpi	r24, 0x01	; 1
     cec:	31 f0       	breq	.+12     	; 0xcfa <dtoa_prf+0x4a>
     cee:	e1 fc       	sbrc	r14, 1
     cf0:	06 c0       	rjmp	.+12     	; 0xcfe <dtoa_prf+0x4e>
     cf2:	e0 fe       	sbrs	r14, 0
     cf4:	06 c0       	rjmp	.+12     	; 0xd02 <dtoa_prf+0x52>
     cf6:	90 e2       	ldi	r25, 0x20	; 32
     cf8:	05 c0       	rjmp	.+10     	; 0xd04 <dtoa_prf+0x54>
     cfa:	9d e2       	ldi	r25, 0x2D	; 45
     cfc:	03 c0       	rjmp	.+6      	; 0xd04 <dtoa_prf+0x54>
     cfe:	9b e2       	ldi	r25, 0x2B	; 43
     d00:	01 c0       	rjmp	.+2      	; 0xd04 <dtoa_prf+0x54>
     d02:	90 e0       	ldi	r25, 0x00	; 0
     d04:	5e 2d       	mov	r21, r14
     d06:	50 71       	andi	r21, 0x10	; 16
     d08:	43 ff       	sbrs	r20, 3
     d0a:	3c c0       	rjmp	.+120    	; 0xd84 <dtoa_prf+0xd4>
     d0c:	91 11       	cpse	r25, r1
     d0e:	02 c0       	rjmp	.+4      	; 0xd14 <dtoa_prf+0x64>
     d10:	83 e0       	ldi	r24, 0x03	; 3
     d12:	01 c0       	rjmp	.+2      	; 0xd16 <dtoa_prf+0x66>
     d14:	84 e0       	ldi	r24, 0x04	; 4
     d16:	81 17       	cp	r24, r17
     d18:	18 f4       	brcc	.+6      	; 0xd20 <dtoa_prf+0x70>
     d1a:	21 2f       	mov	r18, r17
     d1c:	28 1b       	sub	r18, r24
     d1e:	01 c0       	rjmp	.+2      	; 0xd22 <dtoa_prf+0x72>
     d20:	20 e0       	ldi	r18, 0x00	; 0
     d22:	51 11       	cpse	r21, r1
     d24:	0b c0       	rjmp	.+22     	; 0xd3c <dtoa_prf+0x8c>
     d26:	f6 01       	movw	r30, r12
     d28:	82 2f       	mov	r24, r18
     d2a:	30 e2       	ldi	r19, 0x20	; 32
     d2c:	88 23       	and	r24, r24
     d2e:	19 f0       	breq	.+6      	; 0xd36 <dtoa_prf+0x86>
     d30:	31 93       	st	Z+, r19
     d32:	81 50       	subi	r24, 0x01	; 1
     d34:	fb cf       	rjmp	.-10     	; 0xd2c <dtoa_prf+0x7c>
     d36:	c2 0e       	add	r12, r18
     d38:	d1 1c       	adc	r13, r1
     d3a:	20 e0       	ldi	r18, 0x00	; 0
     d3c:	99 23       	and	r25, r25
     d3e:	29 f0       	breq	.+10     	; 0xd4a <dtoa_prf+0x9a>
     d40:	d6 01       	movw	r26, r12
     d42:	9c 93       	st	X, r25
     d44:	f6 01       	movw	r30, r12
     d46:	31 96       	adiw	r30, 0x01	; 1
     d48:	6f 01       	movw	r12, r30
     d4a:	c6 01       	movw	r24, r12
     d4c:	03 96       	adiw	r24, 0x03	; 3
     d4e:	e2 fe       	sbrs	r14, 2
     d50:	0a c0       	rjmp	.+20     	; 0xd66 <dtoa_prf+0xb6>
     d52:	3e e4       	ldi	r19, 0x4E	; 78
     d54:	d6 01       	movw	r26, r12
     d56:	3c 93       	st	X, r19
     d58:	41 e4       	ldi	r20, 0x41	; 65
     d5a:	11 96       	adiw	r26, 0x01	; 1
     d5c:	4c 93       	st	X, r20
     d5e:	11 97       	sbiw	r26, 0x01	; 1
     d60:	12 96       	adiw	r26, 0x02	; 2
     d62:	3c 93       	st	X, r19
     d64:	06 c0       	rjmp	.+12     	; 0xd72 <dtoa_prf+0xc2>
     d66:	3e e6       	ldi	r19, 0x6E	; 110
     d68:	f6 01       	movw	r30, r12
     d6a:	30 83       	st	Z, r19
     d6c:	41 e6       	ldi	r20, 0x61	; 97
     d6e:	41 83       	std	Z+1, r20	; 0x01
     d70:	32 83       	std	Z+2, r19	; 0x02
     d72:	fc 01       	movw	r30, r24
     d74:	32 2f       	mov	r19, r18
     d76:	40 e2       	ldi	r20, 0x20	; 32
     d78:	33 23       	and	r19, r19
     d7a:	09 f4       	brne	.+2      	; 0xd7e <dtoa_prf+0xce>
     d7c:	42 c0       	rjmp	.+132    	; 0xe02 <dtoa_prf+0x152>
     d7e:	41 93       	st	Z+, r20
     d80:	31 50       	subi	r19, 0x01	; 1
     d82:	fa cf       	rjmp	.-12     	; 0xd78 <dtoa_prf+0xc8>
     d84:	42 ff       	sbrs	r20, 2
     d86:	44 c0       	rjmp	.+136    	; 0xe10 <dtoa_prf+0x160>
     d88:	91 11       	cpse	r25, r1
     d8a:	02 c0       	rjmp	.+4      	; 0xd90 <dtoa_prf+0xe0>
     d8c:	83 e0       	ldi	r24, 0x03	; 3
     d8e:	01 c0       	rjmp	.+2      	; 0xd92 <dtoa_prf+0xe2>
     d90:	84 e0       	ldi	r24, 0x04	; 4
     d92:	81 17       	cp	r24, r17
     d94:	18 f4       	brcc	.+6      	; 0xd9c <dtoa_prf+0xec>
     d96:	21 2f       	mov	r18, r17
     d98:	28 1b       	sub	r18, r24
     d9a:	01 c0       	rjmp	.+2      	; 0xd9e <dtoa_prf+0xee>
     d9c:	20 e0       	ldi	r18, 0x00	; 0
     d9e:	51 11       	cpse	r21, r1
     da0:	0b c0       	rjmp	.+22     	; 0xdb8 <dtoa_prf+0x108>
     da2:	f6 01       	movw	r30, r12
     da4:	82 2f       	mov	r24, r18
     da6:	30 e2       	ldi	r19, 0x20	; 32
     da8:	88 23       	and	r24, r24
     daa:	19 f0       	breq	.+6      	; 0xdb2 <dtoa_prf+0x102>
     dac:	31 93       	st	Z+, r19
     dae:	81 50       	subi	r24, 0x01	; 1
     db0:	fb cf       	rjmp	.-10     	; 0xda8 <dtoa_prf+0xf8>
     db2:	c2 0e       	add	r12, r18
     db4:	d1 1c       	adc	r13, r1
     db6:	20 e0       	ldi	r18, 0x00	; 0
     db8:	99 23       	and	r25, r25
     dba:	29 f0       	breq	.+10     	; 0xdc6 <dtoa_prf+0x116>
     dbc:	d6 01       	movw	r26, r12
     dbe:	9c 93       	st	X, r25
     dc0:	f6 01       	movw	r30, r12
     dc2:	31 96       	adiw	r30, 0x01	; 1
     dc4:	6f 01       	movw	r12, r30
     dc6:	c6 01       	movw	r24, r12
     dc8:	03 96       	adiw	r24, 0x03	; 3
     dca:	e2 fe       	sbrs	r14, 2
     dcc:	0b c0       	rjmp	.+22     	; 0xde4 <dtoa_prf+0x134>
     dce:	39 e4       	ldi	r19, 0x49	; 73
     dd0:	d6 01       	movw	r26, r12
     dd2:	3c 93       	st	X, r19
     dd4:	3e e4       	ldi	r19, 0x4E	; 78
     dd6:	11 96       	adiw	r26, 0x01	; 1
     dd8:	3c 93       	st	X, r19
     dda:	11 97       	sbiw	r26, 0x01	; 1
     ddc:	36 e4       	ldi	r19, 0x46	; 70
     dde:	12 96       	adiw	r26, 0x02	; 2
     de0:	3c 93       	st	X, r19
     de2:	07 c0       	rjmp	.+14     	; 0xdf2 <dtoa_prf+0x142>
     de4:	39 e6       	ldi	r19, 0x69	; 105
     de6:	f6 01       	movw	r30, r12
     de8:	30 83       	st	Z, r19
     dea:	3e e6       	ldi	r19, 0x6E	; 110
     dec:	31 83       	std	Z+1, r19	; 0x01
     dee:	36 e6       	ldi	r19, 0x66	; 102
     df0:	32 83       	std	Z+2, r19	; 0x02
     df2:	fc 01       	movw	r30, r24
     df4:	32 2f       	mov	r19, r18
     df6:	40 e2       	ldi	r20, 0x20	; 32
     df8:	33 23       	and	r19, r19
     dfa:	19 f0       	breq	.+6      	; 0xe02 <dtoa_prf+0x152>
     dfc:	41 93       	st	Z+, r20
     dfe:	31 50       	subi	r19, 0x01	; 1
     e00:	fb cf       	rjmp	.-10     	; 0xdf8 <dtoa_prf+0x148>
     e02:	fc 01       	movw	r30, r24
     e04:	e2 0f       	add	r30, r18
     e06:	f1 1d       	adc	r31, r1
     e08:	10 82       	st	Z, r1
     e0a:	8e ef       	ldi	r24, 0xFE	; 254
     e0c:	9f ef       	ldi	r25, 0xFF	; 255
     e0e:	a6 c0       	rjmp	.+332    	; 0xf5c <dtoa_prf+0x2ac>
     e10:	21 e0       	ldi	r18, 0x01	; 1
     e12:	30 e0       	ldi	r19, 0x00	; 0
     e14:	91 11       	cpse	r25, r1
     e16:	02 c0       	rjmp	.+4      	; 0xe1c <dtoa_prf+0x16c>
     e18:	20 e0       	ldi	r18, 0x00	; 0
     e1a:	30 e0       	ldi	r19, 0x00	; 0
     e1c:	16 16       	cp	r1, r22
     e1e:	17 06       	cpc	r1, r23
     e20:	1c f4       	brge	.+6      	; 0xe28 <dtoa_prf+0x178>
     e22:	fb 01       	movw	r30, r22
     e24:	31 96       	adiw	r30, 0x01	; 1
     e26:	02 c0       	rjmp	.+4      	; 0xe2c <dtoa_prf+0x17c>
     e28:	e1 e0       	ldi	r30, 0x01	; 1
     e2a:	f0 e0       	ldi	r31, 0x00	; 0
     e2c:	2e 0f       	add	r18, r30
     e2e:	3f 1f       	adc	r19, r31
     e30:	bb 20       	and	r11, r11
     e32:	21 f0       	breq	.+8      	; 0xe3c <dtoa_prf+0x18c>
     e34:	eb 2d       	mov	r30, r11
     e36:	f0 e0       	ldi	r31, 0x00	; 0
     e38:	31 96       	adiw	r30, 0x01	; 1
     e3a:	02 c0       	rjmp	.+4      	; 0xe40 <dtoa_prf+0x190>
     e3c:	e0 e0       	ldi	r30, 0x00	; 0
     e3e:	f0 e0       	ldi	r31, 0x00	; 0
     e40:	2e 0f       	add	r18, r30
     e42:	3f 1f       	adc	r19, r31
     e44:	e1 2f       	mov	r30, r17
     e46:	f0 e0       	ldi	r31, 0x00	; 0
     e48:	2e 17       	cp	r18, r30
     e4a:	3f 07       	cpc	r19, r31
     e4c:	1c f4       	brge	.+6      	; 0xe54 <dtoa_prf+0x1a4>
     e4e:	12 1b       	sub	r17, r18
     e50:	21 2f       	mov	r18, r17
     e52:	01 c0       	rjmp	.+2      	; 0xe56 <dtoa_prf+0x1a6>
     e54:	20 e0       	ldi	r18, 0x00	; 0
     e56:	8e 2d       	mov	r24, r14
     e58:	88 71       	andi	r24, 0x18	; 24
     e5a:	59 f4       	brne	.+22     	; 0xe72 <dtoa_prf+0x1c2>
     e5c:	f6 01       	movw	r30, r12
     e5e:	82 2f       	mov	r24, r18
     e60:	30 e2       	ldi	r19, 0x20	; 32
     e62:	88 23       	and	r24, r24
     e64:	19 f0       	breq	.+6      	; 0xe6c <dtoa_prf+0x1bc>
     e66:	31 93       	st	Z+, r19
     e68:	81 50       	subi	r24, 0x01	; 1
     e6a:	fb cf       	rjmp	.-10     	; 0xe62 <dtoa_prf+0x1b2>
     e6c:	c2 0e       	add	r12, r18
     e6e:	d1 1c       	adc	r13, r1
     e70:	20 e0       	ldi	r18, 0x00	; 0
     e72:	99 23       	and	r25, r25
     e74:	29 f0       	breq	.+10     	; 0xe80 <dtoa_prf+0x1d0>
     e76:	d6 01       	movw	r26, r12
     e78:	9c 93       	st	X, r25
     e7a:	f6 01       	movw	r30, r12
     e7c:	31 96       	adiw	r30, 0x01	; 1
     e7e:	6f 01       	movw	r12, r30
     e80:	51 11       	cpse	r21, r1
     e82:	0b c0       	rjmp	.+22     	; 0xe9a <dtoa_prf+0x1ea>
     e84:	f6 01       	movw	r30, r12
     e86:	82 2f       	mov	r24, r18
     e88:	90 e3       	ldi	r25, 0x30	; 48
     e8a:	88 23       	and	r24, r24
     e8c:	19 f0       	breq	.+6      	; 0xe94 <dtoa_prf+0x1e4>
     e8e:	91 93       	st	Z+, r25
     e90:	81 50       	subi	r24, 0x01	; 1
     e92:	fb cf       	rjmp	.-10     	; 0xe8a <dtoa_prf+0x1da>
     e94:	c2 0e       	add	r12, r18
     e96:	d1 1c       	adc	r13, r1
     e98:	20 e0       	ldi	r18, 0x00	; 0
     e9a:	0f 2d       	mov	r16, r15
     e9c:	06 0f       	add	r16, r22
     e9e:	9a 81       	ldd	r25, Y+2	; 0x02
     ea0:	34 2f       	mov	r19, r20
     ea2:	30 71       	andi	r19, 0x10	; 16
     ea4:	44 ff       	sbrs	r20, 4
     ea6:	03 c0       	rjmp	.+6      	; 0xeae <dtoa_prf+0x1fe>
     ea8:	91 33       	cpi	r25, 0x31	; 49
     eaa:	09 f4       	brne	.+2      	; 0xeae <dtoa_prf+0x1fe>
     eac:	01 50       	subi	r16, 0x01	; 1
     eae:	10 16       	cp	r1, r16
     eb0:	24 f4       	brge	.+8      	; 0xeba <dtoa_prf+0x20a>
     eb2:	09 30       	cpi	r16, 0x09	; 9
     eb4:	18 f0       	brcs	.+6      	; 0xebc <dtoa_prf+0x20c>
     eb6:	08 e0       	ldi	r16, 0x08	; 8
     eb8:	01 c0       	rjmp	.+2      	; 0xebc <dtoa_prf+0x20c>
     eba:	01 e0       	ldi	r16, 0x01	; 1
     ebc:	ab 01       	movw	r20, r22
     ebe:	77 ff       	sbrs	r23, 7
     ec0:	02 c0       	rjmp	.+4      	; 0xec6 <dtoa_prf+0x216>
     ec2:	40 e0       	ldi	r20, 0x00	; 0
     ec4:	50 e0       	ldi	r21, 0x00	; 0
     ec6:	fb 01       	movw	r30, r22
     ec8:	e4 1b       	sub	r30, r20
     eca:	f5 0b       	sbc	r31, r21
     ecc:	a1 e0       	ldi	r26, 0x01	; 1
     ece:	b0 e0       	ldi	r27, 0x00	; 0
     ed0:	ac 0f       	add	r26, r28
     ed2:	bd 1f       	adc	r27, r29
     ed4:	ea 0f       	add	r30, r26
     ed6:	fb 1f       	adc	r31, r27
     ed8:	8e e2       	ldi	r24, 0x2E	; 46
     eda:	a8 2e       	mov	r10, r24
     edc:	4b 01       	movw	r8, r22
     ede:	80 1a       	sub	r8, r16
     ee0:	91 08       	sbc	r9, r1
     ee2:	0b 2d       	mov	r16, r11
     ee4:	10 e0       	ldi	r17, 0x00	; 0
     ee6:	11 95       	neg	r17
     ee8:	01 95       	neg	r16
     eea:	11 09       	sbc	r17, r1
     eec:	4f 3f       	cpi	r20, 0xFF	; 255
     eee:	bf ef       	ldi	r27, 0xFF	; 255
     ef0:	5b 07       	cpc	r21, r27
     ef2:	21 f4       	brne	.+8      	; 0xefc <dtoa_prf+0x24c>
     ef4:	d6 01       	movw	r26, r12
     ef6:	ac 92       	st	X, r10
     ef8:	11 96       	adiw	r26, 0x01	; 1
     efa:	6d 01       	movw	r12, r26
     efc:	64 17       	cp	r22, r20
     efe:	75 07       	cpc	r23, r21
     f00:	2c f0       	brlt	.+10     	; 0xf0c <dtoa_prf+0x25c>
     f02:	84 16       	cp	r8, r20
     f04:	95 06       	cpc	r9, r21
     f06:	14 f4       	brge	.+4      	; 0xf0c <dtoa_prf+0x25c>
     f08:	81 81       	ldd	r24, Z+1	; 0x01
     f0a:	01 c0       	rjmp	.+2      	; 0xf0e <dtoa_prf+0x25e>
     f0c:	80 e3       	ldi	r24, 0x30	; 48
     f0e:	41 50       	subi	r20, 0x01	; 1
     f10:	51 09       	sbc	r21, r1
     f12:	31 96       	adiw	r30, 0x01	; 1
     f14:	d6 01       	movw	r26, r12
     f16:	11 96       	adiw	r26, 0x01	; 1
     f18:	7d 01       	movw	r14, r26
     f1a:	40 17       	cp	r20, r16
     f1c:	51 07       	cpc	r21, r17
     f1e:	24 f0       	brlt	.+8      	; 0xf28 <dtoa_prf+0x278>
     f20:	d6 01       	movw	r26, r12
     f22:	8c 93       	st	X, r24
     f24:	67 01       	movw	r12, r14
     f26:	e2 cf       	rjmp	.-60     	; 0xeec <dtoa_prf+0x23c>
     f28:	64 17       	cp	r22, r20
     f2a:	75 07       	cpc	r23, r21
     f2c:	39 f4       	brne	.+14     	; 0xf3c <dtoa_prf+0x28c>
     f2e:	96 33       	cpi	r25, 0x36	; 54
     f30:	20 f4       	brcc	.+8      	; 0xf3a <dtoa_prf+0x28a>
     f32:	95 33       	cpi	r25, 0x35	; 53
     f34:	19 f4       	brne	.+6      	; 0xf3c <dtoa_prf+0x28c>
     f36:	31 11       	cpse	r19, r1
     f38:	01 c0       	rjmp	.+2      	; 0xf3c <dtoa_prf+0x28c>
     f3a:	81 e3       	ldi	r24, 0x31	; 49
     f3c:	f6 01       	movw	r30, r12
     f3e:	80 83       	st	Z, r24
     f40:	f7 01       	movw	r30, r14
     f42:	82 2f       	mov	r24, r18
     f44:	90 e2       	ldi	r25, 0x20	; 32
     f46:	88 23       	and	r24, r24
     f48:	19 f0       	breq	.+6      	; 0xf50 <dtoa_prf+0x2a0>
     f4a:	91 93       	st	Z+, r25
     f4c:	81 50       	subi	r24, 0x01	; 1
     f4e:	fb cf       	rjmp	.-10     	; 0xf46 <dtoa_prf+0x296>
     f50:	f7 01       	movw	r30, r14
     f52:	e2 0f       	add	r30, r18
     f54:	f1 1d       	adc	r31, r1
     f56:	10 82       	st	Z, r1
     f58:	80 e0       	ldi	r24, 0x00	; 0
     f5a:	90 e0       	ldi	r25, 0x00	; 0
     f5c:	29 96       	adiw	r28, 0x09	; 9
     f5e:	ec e0       	ldi	r30, 0x0C	; 12
     f60:	0c 94 ac 08 	jmp	0x1158	; 0x1158 <__epilogue_restores__+0xc>

00000f64 <__ftoa_engine>:
     f64:	28 30       	cpi	r18, 0x08	; 8
     f66:	08 f0       	brcs	.+2      	; 0xf6a <__ftoa_engine+0x6>
     f68:	27 e0       	ldi	r18, 0x07	; 7
     f6a:	33 27       	eor	r19, r19
     f6c:	da 01       	movw	r26, r20
     f6e:	99 0f       	add	r25, r25
     f70:	31 1d       	adc	r19, r1
     f72:	87 fd       	sbrc	r24, 7
     f74:	91 60       	ori	r25, 0x01	; 1
     f76:	00 96       	adiw	r24, 0x00	; 0
     f78:	61 05       	cpc	r22, r1
     f7a:	71 05       	cpc	r23, r1
     f7c:	39 f4       	brne	.+14     	; 0xf8c <__ftoa_engine+0x28>
     f7e:	32 60       	ori	r19, 0x02	; 2
     f80:	2e 5f       	subi	r18, 0xFE	; 254
     f82:	3d 93       	st	X+, r19
     f84:	30 e3       	ldi	r19, 0x30	; 48
     f86:	2a 95       	dec	r18
     f88:	e1 f7       	brne	.-8      	; 0xf82 <__ftoa_engine+0x1e>
     f8a:	08 95       	ret
     f8c:	9f 3f       	cpi	r25, 0xFF	; 255
     f8e:	30 f0       	brcs	.+12     	; 0xf9c <__ftoa_engine+0x38>
     f90:	80 38       	cpi	r24, 0x80	; 128
     f92:	71 05       	cpc	r23, r1
     f94:	61 05       	cpc	r22, r1
     f96:	09 f0       	breq	.+2      	; 0xf9a <__ftoa_engine+0x36>
     f98:	3c 5f       	subi	r19, 0xFC	; 252
     f9a:	3c 5f       	subi	r19, 0xFC	; 252
     f9c:	3d 93       	st	X+, r19
     f9e:	91 30       	cpi	r25, 0x01	; 1
     fa0:	08 f0       	brcs	.+2      	; 0xfa4 <__ftoa_engine+0x40>
     fa2:	80 68       	ori	r24, 0x80	; 128
     fa4:	91 1d       	adc	r25, r1
     fa6:	df 93       	push	r29
     fa8:	cf 93       	push	r28
     faa:	1f 93       	push	r17
     fac:	0f 93       	push	r16
     fae:	ff 92       	push	r15
     fb0:	ef 92       	push	r14
     fb2:	19 2f       	mov	r17, r25
     fb4:	98 7f       	andi	r25, 0xF8	; 248
     fb6:	96 95       	lsr	r25
     fb8:	e9 2f       	mov	r30, r25
     fba:	96 95       	lsr	r25
     fbc:	96 95       	lsr	r25
     fbe:	e9 0f       	add	r30, r25
     fc0:	ff 27       	eor	r31, r31
     fc2:	ee 53       	subi	r30, 0x3E	; 62
     fc4:	ff 4f       	sbci	r31, 0xFF	; 255
     fc6:	99 27       	eor	r25, r25
     fc8:	33 27       	eor	r19, r19
     fca:	ee 24       	eor	r14, r14
     fcc:	ff 24       	eor	r15, r15
     fce:	a7 01       	movw	r20, r14
     fd0:	e7 01       	movw	r28, r14
     fd2:	05 90       	lpm	r0, Z+
     fd4:	08 94       	sec
     fd6:	07 94       	ror	r0
     fd8:	28 f4       	brcc	.+10     	; 0xfe4 <__ftoa_engine+0x80>
     fda:	36 0f       	add	r19, r22
     fdc:	e7 1e       	adc	r14, r23
     fde:	f8 1e       	adc	r15, r24
     fe0:	49 1f       	adc	r20, r25
     fe2:	51 1d       	adc	r21, r1
     fe4:	66 0f       	add	r22, r22
     fe6:	77 1f       	adc	r23, r23
     fe8:	88 1f       	adc	r24, r24
     fea:	99 1f       	adc	r25, r25
     fec:	06 94       	lsr	r0
     fee:	a1 f7       	brne	.-24     	; 0xfd8 <__ftoa_engine+0x74>
     ff0:	05 90       	lpm	r0, Z+
     ff2:	07 94       	ror	r0
     ff4:	28 f4       	brcc	.+10     	; 0x1000 <__ftoa_engine+0x9c>
     ff6:	e7 0e       	add	r14, r23
     ff8:	f8 1e       	adc	r15, r24
     ffa:	49 1f       	adc	r20, r25
     ffc:	56 1f       	adc	r21, r22
     ffe:	c1 1d       	adc	r28, r1
    1000:	77 0f       	add	r23, r23
    1002:	88 1f       	adc	r24, r24
    1004:	99 1f       	adc	r25, r25
    1006:	66 1f       	adc	r22, r22
    1008:	06 94       	lsr	r0
    100a:	a1 f7       	brne	.-24     	; 0xff4 <__ftoa_engine+0x90>
    100c:	05 90       	lpm	r0, Z+
    100e:	07 94       	ror	r0
    1010:	28 f4       	brcc	.+10     	; 0x101c <__ftoa_engine+0xb8>
    1012:	f8 0e       	add	r15, r24
    1014:	49 1f       	adc	r20, r25
    1016:	56 1f       	adc	r21, r22
    1018:	c7 1f       	adc	r28, r23
    101a:	d1 1d       	adc	r29, r1
    101c:	88 0f       	add	r24, r24
    101e:	99 1f       	adc	r25, r25
    1020:	66 1f       	adc	r22, r22
    1022:	77 1f       	adc	r23, r23
    1024:	06 94       	lsr	r0
    1026:	a1 f7       	brne	.-24     	; 0x1010 <__ftoa_engine+0xac>
    1028:	05 90       	lpm	r0, Z+
    102a:	07 94       	ror	r0
    102c:	20 f4       	brcc	.+8      	; 0x1036 <__ftoa_engine+0xd2>
    102e:	49 0f       	add	r20, r25
    1030:	56 1f       	adc	r21, r22
    1032:	c7 1f       	adc	r28, r23
    1034:	d8 1f       	adc	r29, r24
    1036:	99 0f       	add	r25, r25
    1038:	66 1f       	adc	r22, r22
    103a:	77 1f       	adc	r23, r23
    103c:	88 1f       	adc	r24, r24
    103e:	06 94       	lsr	r0
    1040:	a9 f7       	brne	.-22     	; 0x102c <__ftoa_engine+0xc8>
    1042:	84 91       	lpm	r24, Z
    1044:	10 95       	com	r17
    1046:	17 70       	andi	r17, 0x07	; 7
    1048:	41 f0       	breq	.+16     	; 0x105a <__ftoa_engine+0xf6>
    104a:	d6 95       	lsr	r29
    104c:	c7 95       	ror	r28
    104e:	57 95       	ror	r21
    1050:	47 95       	ror	r20
    1052:	f7 94       	ror	r15
    1054:	e7 94       	ror	r14
    1056:	1a 95       	dec	r17
    1058:	c1 f7       	brne	.-16     	; 0x104a <__ftoa_engine+0xe6>
    105a:	e8 e6       	ldi	r30, 0x68	; 104
    105c:	f0 e0       	ldi	r31, 0x00	; 0
    105e:	68 94       	set
    1060:	15 90       	lpm	r1, Z+
    1062:	15 91       	lpm	r17, Z+
    1064:	35 91       	lpm	r19, Z+
    1066:	65 91       	lpm	r22, Z+
    1068:	95 91       	lpm	r25, Z+
    106a:	05 90       	lpm	r0, Z+
    106c:	7f e2       	ldi	r23, 0x2F	; 47
    106e:	73 95       	inc	r23
    1070:	e1 18       	sub	r14, r1
    1072:	f1 0a       	sbc	r15, r17
    1074:	43 0b       	sbc	r20, r19
    1076:	56 0b       	sbc	r21, r22
    1078:	c9 0b       	sbc	r28, r25
    107a:	d0 09       	sbc	r29, r0
    107c:	c0 f7       	brcc	.-16     	; 0x106e <__ftoa_engine+0x10a>
    107e:	e1 0c       	add	r14, r1
    1080:	f1 1e       	adc	r15, r17
    1082:	43 1f       	adc	r20, r19
    1084:	56 1f       	adc	r21, r22
    1086:	c9 1f       	adc	r28, r25
    1088:	d0 1d       	adc	r29, r0
    108a:	7e f4       	brtc	.+30     	; 0x10aa <__ftoa_engine+0x146>
    108c:	70 33       	cpi	r23, 0x30	; 48
    108e:	11 f4       	brne	.+4      	; 0x1094 <__ftoa_engine+0x130>
    1090:	8a 95       	dec	r24
    1092:	e6 cf       	rjmp	.-52     	; 0x1060 <__ftoa_engine+0xfc>
    1094:	e8 94       	clt
    1096:	01 50       	subi	r16, 0x01	; 1
    1098:	30 f0       	brcs	.+12     	; 0x10a6 <__ftoa_engine+0x142>
    109a:	08 0f       	add	r16, r24
    109c:	0a f4       	brpl	.+2      	; 0x10a0 <__ftoa_engine+0x13c>
    109e:	00 27       	eor	r16, r16
    10a0:	02 17       	cp	r16, r18
    10a2:	08 f4       	brcc	.+2      	; 0x10a6 <__ftoa_engine+0x142>
    10a4:	20 2f       	mov	r18, r16
    10a6:	23 95       	inc	r18
    10a8:	02 2f       	mov	r16, r18
    10aa:	7a 33       	cpi	r23, 0x3A	; 58
    10ac:	28 f0       	brcs	.+10     	; 0x10b8 <__ftoa_engine+0x154>
    10ae:	79 e3       	ldi	r23, 0x39	; 57
    10b0:	7d 93       	st	X+, r23
    10b2:	2a 95       	dec	r18
    10b4:	e9 f7       	brne	.-6      	; 0x10b0 <__ftoa_engine+0x14c>
    10b6:	10 c0       	rjmp	.+32     	; 0x10d8 <__ftoa_engine+0x174>
    10b8:	7d 93       	st	X+, r23
    10ba:	2a 95       	dec	r18
    10bc:	89 f6       	brne	.-94     	; 0x1060 <__ftoa_engine+0xfc>
    10be:	06 94       	lsr	r0
    10c0:	97 95       	ror	r25
    10c2:	67 95       	ror	r22
    10c4:	37 95       	ror	r19
    10c6:	17 95       	ror	r17
    10c8:	17 94       	ror	r1
    10ca:	e1 18       	sub	r14, r1
    10cc:	f1 0a       	sbc	r15, r17
    10ce:	43 0b       	sbc	r20, r19
    10d0:	56 0b       	sbc	r21, r22
    10d2:	c9 0b       	sbc	r28, r25
    10d4:	d0 09       	sbc	r29, r0
    10d6:	98 f0       	brcs	.+38     	; 0x10fe <__ftoa_engine+0x19a>
    10d8:	23 95       	inc	r18
    10da:	7e 91       	ld	r23, -X
    10dc:	73 95       	inc	r23
    10de:	7a 33       	cpi	r23, 0x3A	; 58
    10e0:	08 f0       	brcs	.+2      	; 0x10e4 <__ftoa_engine+0x180>
    10e2:	70 e3       	ldi	r23, 0x30	; 48
    10e4:	7c 93       	st	X, r23
    10e6:	20 13       	cpse	r18, r16
    10e8:	b8 f7       	brcc	.-18     	; 0x10d8 <__ftoa_engine+0x174>
    10ea:	7e 91       	ld	r23, -X
    10ec:	70 61       	ori	r23, 0x10	; 16
    10ee:	7d 93       	st	X+, r23
    10f0:	30 f0       	brcs	.+12     	; 0x10fe <__ftoa_engine+0x19a>
    10f2:	83 95       	inc	r24
    10f4:	71 e3       	ldi	r23, 0x31	; 49
    10f6:	7d 93       	st	X+, r23
    10f8:	70 e3       	ldi	r23, 0x30	; 48
    10fa:	2a 95       	dec	r18
    10fc:	e1 f7       	brne	.-8      	; 0x10f6 <__ftoa_engine+0x192>
    10fe:	11 24       	eor	r1, r1
    1100:	ef 90       	pop	r14
    1102:	ff 90       	pop	r15
    1104:	0f 91       	pop	r16
    1106:	1f 91       	pop	r17
    1108:	cf 91       	pop	r28
    110a:	df 91       	pop	r29
    110c:	99 27       	eor	r25, r25
    110e:	87 fd       	sbrc	r24, 7
    1110:	90 95       	com	r25
    1112:	08 95       	ret

00001114 <__prologue_saves__>:
    1114:	2f 92       	push	r2
    1116:	3f 92       	push	r3
    1118:	4f 92       	push	r4
    111a:	5f 92       	push	r5
    111c:	6f 92       	push	r6
    111e:	7f 92       	push	r7
    1120:	8f 92       	push	r8
    1122:	9f 92       	push	r9
    1124:	af 92       	push	r10
    1126:	bf 92       	push	r11
    1128:	cf 92       	push	r12
    112a:	df 92       	push	r13
    112c:	ef 92       	push	r14
    112e:	ff 92       	push	r15
    1130:	0f 93       	push	r16
    1132:	1f 93       	push	r17
    1134:	cf 93       	push	r28
    1136:	df 93       	push	r29
    1138:	cd b7       	in	r28, 0x3d	; 61
    113a:	de b7       	in	r29, 0x3e	; 62
    113c:	ca 1b       	sub	r28, r26
    113e:	db 0b       	sbc	r29, r27
    1140:	0f b6       	in	r0, 0x3f	; 63
    1142:	f8 94       	cli
    1144:	de bf       	out	0x3e, r29	; 62
    1146:	0f be       	out	0x3f, r0	; 63
    1148:	cd bf       	out	0x3d, r28	; 61
    114a:	09 94       	ijmp

0000114c <__epilogue_restores__>:
    114c:	2a 88       	ldd	r2, Y+18	; 0x12
    114e:	39 88       	ldd	r3, Y+17	; 0x11
    1150:	48 88       	ldd	r4, Y+16	; 0x10
    1152:	5f 84       	ldd	r5, Y+15	; 0x0f
    1154:	6e 84       	ldd	r6, Y+14	; 0x0e
    1156:	7d 84       	ldd	r7, Y+13	; 0x0d
    1158:	8c 84       	ldd	r8, Y+12	; 0x0c
    115a:	9b 84       	ldd	r9, Y+11	; 0x0b
    115c:	aa 84       	ldd	r10, Y+10	; 0x0a
    115e:	b9 84       	ldd	r11, Y+9	; 0x09
    1160:	c8 84       	ldd	r12, Y+8	; 0x08
    1162:	df 80       	ldd	r13, Y+7	; 0x07
    1164:	ee 80       	ldd	r14, Y+6	; 0x06
    1166:	fd 80       	ldd	r15, Y+5	; 0x05
    1168:	0c 81       	ldd	r16, Y+4	; 0x04
    116a:	1b 81       	ldd	r17, Y+3	; 0x03
    116c:	aa 81       	ldd	r26, Y+2	; 0x02
    116e:	b9 81       	ldd	r27, Y+1	; 0x01
    1170:	ce 0f       	add	r28, r30
    1172:	d1 1d       	adc	r29, r1
    1174:	0f b6       	in	r0, 0x3f	; 63
    1176:	f8 94       	cli
    1178:	de bf       	out	0x3e, r29	; 62
    117a:	0f be       	out	0x3f, r0	; 63
    117c:	cd bf       	out	0x3d, r28	; 61
    117e:	ed 01       	movw	r28, r26
    1180:	08 95       	ret

00001182 <_exit>:
    1182:	f8 94       	cli

00001184 <__stop_program>:
    1184:	ff cf       	rjmp	.-2      	; 0x1184 <__stop_program>
